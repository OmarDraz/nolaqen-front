[{"C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\index.js":"1","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\App.js":"2","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Components\\logout.js":"3","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Components\\Header.js":"4","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\axios.js":"5","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Components\\dialog.js":"6","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Header.js":"7","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Requests.js":"8","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\SidePanel.js":"9","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Groups.js":"10","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\CourseStudent.js":"11","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\StudentProfile.js":"12","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\AddQuestions.js":"13","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\AddExam.js":"14","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\CourseExams.js":"15","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\EditExam.js":"16","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\CourseLessons.js":"17","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\AddPost.js":"18","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Questions.js":"19","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Logs.js":"20","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Components\\redirect.js":"21","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\CoursesPage.js":"22","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\LoginPage.js":"23","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\RegisterPage.js":"24","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\HomePage.js":"25","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\Exam.js":"26","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\Course.js":"27","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\CourseContent.js":"28","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\SingleLesson.js":"29","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\PlayerControls.js":"30","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\Routes.js":"31","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Routes.js":"32","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\ExamResults.js":"33","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Posts.js":"34","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\renderCellExpand.js":"35"},{"size":889,"mtime":1627318321015,"results":"36","hashOfConfig":"37"},{"size":1218,"mtime":1627915890744,"results":"38","hashOfConfig":"37"},{"size":571,"mtime":1627821218522,"results":"39","hashOfConfig":"37"},{"size":18303,"mtime":1628086763783,"results":"40","hashOfConfig":"37"},{"size":2384,"mtime":1628085538184,"results":"41","hashOfConfig":"37"},{"size":3486,"mtime":1626572980682,"results":"42","hashOfConfig":"37"},{"size":953,"mtime":1627822112346,"results":"43","hashOfConfig":"37"},{"size":4819,"mtime":1627821549522,"results":"44","hashOfConfig":"37"},{"size":11842,"mtime":1627811289511,"results":"45","hashOfConfig":"37"},{"size":16710,"mtime":1627821786611,"results":"46","hashOfConfig":"37"},{"size":15612,"mtime":1627915233417,"results":"47","hashOfConfig":"37"},{"size":9145,"mtime":1627916245829,"results":"48","hashOfConfig":"37"},{"size":20580,"mtime":1627821359879,"results":"49","hashOfConfig":"37"},{"size":16197,"mtime":1627912757577,"results":"50","hashOfConfig":"37"},{"size":25511,"mtime":1627914811118,"results":"51","hashOfConfig":"37"},{"size":12549,"mtime":1627915819344,"results":"52","hashOfConfig":"37"},{"size":13582,"mtime":1627915108511,"results":"53","hashOfConfig":"37"},{"size":6250,"mtime":1627811593900,"results":"54","hashOfConfig":"37"},{"size":16464,"mtime":1627920501768,"results":"55","hashOfConfig":"37"},{"size":8652,"mtime":1627822188321,"results":"56","hashOfConfig":"37"},{"size":531,"mtime":1627524402141,"results":"57","hashOfConfig":"37"},{"size":1752,"mtime":1627821247665,"results":"58","hashOfConfig":"37"},{"size":3355,"mtime":1627821285544,"results":"59","hashOfConfig":"37"},{"size":7950,"mtime":1627821306247,"results":"60","hashOfConfig":"37"},{"size":461,"mtime":1627527792644,"results":"61","hashOfConfig":"37"},{"size":8919,"mtime":1627821257076,"results":"62","hashOfConfig":"37"},{"size":8493,"mtime":1627789100063,"results":"63","hashOfConfig":"37"},{"size":8792,"mtime":1627674779744,"results":"64","hashOfConfig":"37"},{"size":7311,"mtime":1627821334322,"results":"65","hashOfConfig":"37"},{"size":9421,"mtime":1627786083977,"results":"66","hashOfConfig":"37"},{"size":993,"mtime":1627822355200,"results":"67","hashOfConfig":"37"},{"size":2334,"mtime":1627915391395,"results":"68","hashOfConfig":"37"},{"size":6724,"mtime":1627915268651,"results":"69","hashOfConfig":"37"},{"size":11000,"mtime":1628085491702,"results":"70","hashOfConfig":"37"},{"size":3661,"mtime":1627821530939,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1enpqac",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":51,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"74"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"74"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"74"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"74"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"74"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\index.js",[],["172","173"],"C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\App.js",[],"C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Components\\logout.js",["174"],"  \r\nimport React, { useEffect } from 'react';\r\nimport axiosInstance from '../axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default function Logout() {\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst response = axiosInstance.post('users/logout/blacklist/', {\r\n\t\t\trefresh_token: Cookies.get('refresh_token'),\r\n\t\t});\r\n\t\tCookies.remove('access_token');\r\n\t\tCookies.remove('refresh_token');\r\n\t\taxiosInstance.defaults.headers['Authorization'] = null;\r\n\t\thistory.push('/');\r\n\t});\r\n\treturn <div>Logout</div>;\r\n}","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Components\\Header.js",["175","176","177","178","179","180","181","182","183"],"C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\axios.js",[],"C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Components\\dialog.js",["184","185","186","187","188","189","190"],"import React, { useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport axiosInstance from '../axios';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport \"./header.css\";\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    overflow: 'hidden',\r\n    width: '200px',\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    overflow: 'hidden',\r\n    \r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    overflow: 'hidden',\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const [response, setResponse] = useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n  let hist = useHistory()\r\n\r\n  const handleClickOpen = () => {\r\n    axiosInstance\r\n            .get('courses/check/' + props.courseId).then(res => {\r\n                console.log(res.data);\r\n                setResponse(res.data);\r\n            })\r\n    setOpen(true);\r\n    setTimeout(() => {\r\n        setOpen(false)\r\n      }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen} variant=\"contained\" disabled={props.btnText == 'طلبك قيد المراجعة' ? true : false} style={{ marginTop: '20px', backgroundColor: props.btnText == 'طلبك قيد المراجعة' ? 'grey' : '#ff5658', color: 'white' }} onClick={() => {\r\n        if(props.btnText == 'دخول'){\r\n          hist.push('/course/' + props.courseId)\r\n        }\r\n      }}>{props.btnText}</Button>\r\n      <Dialog style={{overflow: 'hidden', width: '100%'}} aria-labelledby=\"customized-dialog-title\" TransitionComponent={Transition} transitionDuration={{ exit: 1000 }} open={open}>\r\n          <CheckCircleIcon className=\"checkMark\" style={{ margin: 'auto', width: \"80px\", height: '110px', color: 'green' }} />\r\n          <DialogContent style={{ fontSize: 22, textAlign: 'center' }}>\r\n              <div>\r\n                  {response}\r\n              </div>\r\n          </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Header.js",["191","192"],"import React from 'react';\r\nimport '../css/teacher.css';\r\nimport TeacherIcon from '../../svg/TeacherIcon.svg'\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport AdminPageDecorators from '../../svg/AdminPageDecorators.svg'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst TeacherHeader = () => {\r\n    const history = useHistory()\r\n    return(\r\n        <>\r\n            <nav className=\"nav\">\r\n                <img src={TeacherIcon} style={{ height: '75px', marginLeft: '32%' }} />\r\n                <Button variant=\"text\" onClick={() => history.goBack() } style={{ marginLeft: '15px', display: 'flex', alignItems: 'center' }}><ArrowBackIosIcon /><ArrowBackIosIcon /></Button>\r\n            </nav>\r\n            <img src={AdminPageDecorators} style={{ position: 'fixed', top: '0', right: '0', width: '100%', height: '100vh' }} />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default TeacherHeader;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Requests.js",["193","194"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axiosInstance from \"../../axios\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport '../css/teacher.css';\r\n\r\n\r\nconst RequestsPage = () => {\r\n    const [requests, setRequests] = useState([]);\r\n    const [selectedRequests, setSelectedRequests] = useState();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    let{courseId} = useParams();\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleAccept = () => {\r\n        axiosInstance\r\n                    .post('courses/accept-requests/' + courseId, selectedRequests).then((res) => {\r\n                        console.log(res);\r\n                    })\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    console.log('sel', selectedRequests)\r\n\r\n    const handleReject = () => {\r\n        axiosInstance\r\n                    .post('courses/reject-requests/' + courseId, selectedRequests).then((res) => {\r\n                        console.log(res);\r\n                    })\r\n      setAnchorEl(null);\r\n    }\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    }\r\n    const columns = [\r\n        {\r\n            field: \"id\",\r\n            headerName: \"رقم الطلب\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"first_name\",\r\n            headerName: \"الاسم الاول\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"last_name\",\r\n            headerName: \"الاسم الثاني\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"created_at\",\r\n            headerName: \"وقت الطلب\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"phone\",\r\n            headerName: \"رقم الطالب\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"parent_phone\",\r\n            headerName: \"رقم ولي الامر\",\r\n            flex: 1,\r\n        }\r\n    ]\r\n   \r\n\r\n    useEffect(() => {\r\n        axiosInstance\r\n        .get('courses/requests/' + courseId).then((response) => {\r\n            console.log(response.data)\r\n            setRequests(response.data);\r\n            console.log('ss',requests)\r\n        })\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n        <div style={{ zIndex: '-4' }}>\r\n            <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column' }}>\r\n                <div style={{ height: 600, width: '100%', margin: 'auto' }}>\r\n                    <DataGrid\r\n                    className={'smallScrollBar'}\r\n                    scrollbarSize= {1}\r\n                    components={{\r\n                        NoRowsOverlay: () => {\r\n                            return <span style={{ margin: 'auto', overflow: 'hidden'}}>لا يوجد طلبات انضمام حاليا</span>\r\n                        }\r\n                    }}\r\n                    onSelectionModelChange={(e) => {\r\n                        const selectedIDs = new Set(e.selectionModel);\r\n                        console.log(selectedIDs);\r\n                        const selectedRowData = requests.filter((row) =>\r\n                            selectedIDs.has(row.id)\r\n                        );\r\n                        console.log(\"select rowData:\", selectedRowData);\r\n                        setSelectedRequests(selectedRowData.map((row) => row.id));\r\n                    }}autopageSize scrollbarSize={20} checkboxSelection rows={requests} columns={columns}\r\n                    \r\n                    />\r\n\r\n                    {console.log(\"state: \", selectedRequests)}\r\n                </div>\r\n                <Button style={{backgroundColor: '#FF5856', color: 'white'}} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                    اتخذ اجراء\r\n                </Button>\r\n                <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                >\r\n                <MenuItem onClick={handleAccept} style={{overflow: 'hidden', fontFamily: 'Cairo'}}>قبول الانضمام</MenuItem>\r\n                <MenuItem onClick={handleReject} style={{overflow: 'hidden', fontFamily: 'Cairo'}}>رفض الانضمام</MenuItem>\r\n                </Menu>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RequestsPage; ","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\SidePanel.js",["195","196","197","198","199","200"],"import React, {useState, useEffect} from 'react';\r\nimport {\r\n    BrowserRouter as\r\n    Link,\r\n    NavLink,\r\n  } from \"react-router-dom\";\r\n  import Cookies from 'js-cookie';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axiosInstance from \"../../axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport '../css/teacher.css';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SidePanelDec from '../../svg/SidePanelDec.svg'\r\nimport ColoredLogo from '../../svg/ColoredLogo.svg'\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      margin: '10px 0',\r\n    },\r\n    icon: {\r\n        minWidth: '34px'\r\n    }\r\n  });\r\n\r\n\r\n  const SidePanel = () => {\r\n\r\n    const [isAuthenticated, checkAuth] = useState(false);\r\n    const [firstName, setFirstname] = useState('');\r\n    const [userRole, setRole] = useState('');\r\n    const [courses, setCourses] = useState([]);\r\n    useEffect(async () =>{\r\n        if(Cookies.get(\"access_token\")){\r\n          var token = Cookies.get('access_token');\r\n          var decoded = jwt_decode(token);\r\n          setRole(decoded.role)\r\n          setFirstname(decoded.first_name);\r\n          checkAuth(true)\r\n        }\r\n        axiosInstance\r\n        .get('courses/teacher-courses').then(res => {\r\n            console.log(res.data);\r\n            setCourses(res.data);\r\n            console.log(courses);\r\n            courses.map(course => console.log(course.id));\r\n        })\r\n      }, [])\r\n\r\n      \r\n    const classes = useStyles();\r\n    return(\r\n            <div className=\"panel\">\r\n                <img src={SidePanelDec} style={{ position: 'fixed', bottom: '10px', width: '300px', height: 'auto' }} />\r\n                <img src={ColoredLogo} style={{ width: '175px', height: 'auto', margin: '-25px auto -30px auto', display: 'block' }}/>\r\n                <h3 style={{ textAlign: 'center', margin:'23px 0' }}>{`أ / ${firstName}`}</h3>\r\n                <MenuList>\r\n                    {/* <MenuItem className={classes.root}>\r\n                        <ListItemIcon className={classes.icon}>\r\n                            <NotificationsActiveIcon fontSize=\"medium\" style={{ color: 'white' }} />\r\n                        </ListItemIcon>\r\n                        <Typography variant=\"inherit\" style={{ fontSize: '18px' }} noWrap>\r\n                            <span>الاشعارات</span>\r\n                        </Typography>\r\n                    </MenuItem>\r\n                    <MenuItem className={classes.root}>\r\n                        <ListItemIcon className={classes.icon}>\r\n                            <EmailIcon fontSize=\"medium\" style={{ color: 'white' }} />\r\n                        </ListItemIcon>\r\n                        <Typography variant=\"inherit\" style={{ fontSize: '18px' }} noWrap>\r\n                            <span>الرسائل</span>\r\n                        </Typography>\r\n                    </MenuItem> */}\r\n                    <MenuItem className={classes.root}>\r\n                        <Accordion style={{ overflow: 'hidden' ,color: 'white', width: '100%', zIndex: '5' }}>\r\n                            <AccordionSummary style={{ overflow: 'hidden' ,color: 'white', width: '100%', padding: '0' }} expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}>\r\n                                <ListItemIcon className={classes.icon}>\r\n                                    <PeopleAltIcon fontSize=\"medium\" style={{ color: 'white' }} />\r\n                                </ListItemIcon>\r\n                                    <Typography variant=\"inherit\" style={{ fontSize: '18px' }} noWrap>\r\n                                    <span>طلابك</span>\r\n                                </Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails style={{marginTop: '-20px', overflow: 'hidden', color: 'white', display: 'flex', flexDirection: 'column' }}>\r\n                                {courses.map(course => <MenuItem style={{ overflow: 'hidden'}}>\r\n                                 {/* looped  */}\r\n                                 <Accordion style={{ overflow: 'hidden' ,color: 'white', width: '100%' }}>\r\n                                    <AccordionSummary style={{ overflow: 'hidden' ,color: 'white', width: '100%', padding: '0' }} expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}>\r\n                                        <Typography variant=\"inherit\" style={{ fontSize: '16px' }} noWrap>\r\n                                        <span>- {course.name}</span>\r\n                                        </Typography>\r\n                                    </AccordionSummary>\r\n                                        <AccordionDetails style={{marginTop: '-20px', overflow: 'hidden', color: 'white', display: 'flex', flexDirection: 'column' }}>\r\n                                            <MenuItem style={{ overflow: 'hidden'}}>\r\n                                                <Typography variant=\"inherit\" style={{ fontSize: '16px' }} noWrap>\r\n                                                    <NavLink activeClassName=\"active-link\" style={{ color: 'white', textDecoration: 'none' }} to={`/teacher/course-students/${course.id}`}><span>- اسماء الطلاب</span></NavLink>\r\n                                                </Typography>\r\n                                            </MenuItem>\r\n                                            <MenuItem style={{ overflow: 'hidden'}}>\r\n                                                <Typography variant=\"inherit\" style={{ fontSize: '16px' }} noWrap>\r\n                                                    <NavLink activeClassName=\"active-link\" style={{ color: 'white', textDecoration: 'none' }} to={`/teacher/requests/${course.id}`}><span>- طلبات الانضمام</span></NavLink>\r\n                                                </Typography>\r\n                                            </MenuItem>\r\n                                            <MenuItem style={{ overflow: 'hidden'}}>\r\n                                                <Typography variant=\"inherit\" style={{ fontSize: '16px' }} noWrap>\r\n                                                    <NavLink activeClassName=\"active-link\" style={{ color: 'white', textDecoration: 'none' }} to={`/teacher/groups/${course.id}`}><span>- المجموعات</span></NavLink>\r\n                                                </Typography>\r\n                                            </MenuItem>\r\n                                            <MenuItem style={{ overflow: 'hidden'}}>\r\n                                                <Typography variant=\"inherit\" style={{ fontSize: '16px' }} noWrap>\r\n                                                    <NavLink activeClassName=\"active-link\" style={{ color: 'white', textDecoration: 'none' }} to={`/teacher/lessons/${course.id}`}><span>- الحصص</span></NavLink>\r\n                                                </Typography>\r\n                                            </MenuItem>\r\n                                            <MenuItem style={{ overflow: 'hidden'}}>\r\n                                                <Typography variant=\"inherit\" style={{ fontSize: '16px' }} noWrap>\r\n                                                    <NavLink activeClassName=\"active-link\" style={{ color: 'white', textDecoration: 'none' }} to={`/teacher/exams/${course.id}`}><span>- الاختبارات</span></NavLink>\r\n                                                </Typography>\r\n                                            </MenuItem>\r\n                                        </AccordionDetails>\r\n                                </Accordion>\r\n                                </MenuItem>)}\r\n                                \r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </MenuItem>\r\n                    <MenuItem className={classes.root}>\r\n                        <ListItemIcon className={classes.icon}>\r\n                            <AssignmentIcon fontSize=\"medium\" style={{ color: 'white' }} />\r\n                        </ListItemIcon>\r\n                        <Typography variant=\"inherit\" style={{ fontSize: '18px' }} noWrap>\r\n                            <NavLink activeClassName=\"active-link\" style={{ color: 'white', textDecoration: 'none' }} to={`/teacher/add-exam`}><span>أضف امتحان</span></NavLink>\r\n                        </Typography>\r\n                    </MenuItem>\r\n                    <MenuItem className={classes.root}>\r\n                        <ListItemIcon className={classes.icon}>\r\n                            <AllInboxIcon fontSize=\"medium\" style={{ color: 'white' }} />\r\n                        </ListItemIcon>\r\n                        <Typography variant=\"inherit\" style={{ fontSize: '18px' }} noWrap>\r\n                            <NavLink activeClassName=\"active-link\" style={{ color: 'white', textDecoration: 'none' }} to={`/teacher/all-posts`}><span>المنشورات</span></NavLink>\r\n                        </Typography>\r\n                    </MenuItem>\r\n                    <MenuItem className={classes.root}>\r\n                        <ListItemIcon className={classes.icon}>\r\n                            <HelpIcon fontSize=\"medium\" style={{ color: 'white' }} />\r\n                        </ListItemIcon>\r\n                        <Typography variant=\"inherit\" style={{ fontSize: '18px' }} noWrap>\r\n                            <NavLink activeClassName=\"active-link\" style={{ color: 'white', textDecoration: 'none' }} to={`/teacher/all-questions`}><span>الاسئلة</span></NavLink>\r\n                        </Typography>\r\n                    </MenuItem>\r\n                    <MenuItem className={classes.root}>\r\n                        <ListItemIcon className={classes.icon}>\r\n                            <DescriptionIcon fontSize=\"medium\" style={{ color: 'white' }} />\r\n                        </ListItemIcon>\r\n                        <Typography variant=\"inherit\" style={{ fontSize: '18px' }} noWrap>\r\n                        <NavLink activeClassName=\"active-link\" style={{ color: 'white', textDecoration: 'none' }} to={`/teacher/logs`}><span>السجلات</span></NavLink>\r\n                        </Typography>\r\n                    </MenuItem>\r\n                    {/* <MenuItem className={classes.root} >\r\n                        <ListItemIcon className={classes.icon}>\r\n                            <WifiOffIcon fontSize=\"medium\" style={{ color: 'white' }} />\r\n                        </ListItemIcon>\r\n                        <Typography variant=\"inherit\" style={{ fontSize: '18px' }} noWrap>\r\n                            <span>طلاب اوفلاين</span>\r\n                        </Typography>\r\n                    </MenuItem> */}\r\n                </MenuList>\r\n                <Button variant=\"text\" component={Link} to=\"/logout\" style={{ color: 'white', position: 'absolute', bottom: '10px', right: '10px', fontSize: '16px' }}><MeetingRoomIcon /> تسجيل خروج </Button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default SidePanel;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Groups.js",["201","202","203","204","205","206","207","208"],"import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useParams } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axiosInstance from \"../../axios\";\r\nimport {\r\n    withStyles,\r\n  } from \"@material-ui/core\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiFormLabel-root\": {\r\n            color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n            fontFamily: \"Cairo\",\r\n            left: 'auto',\r\n            overflow: 'hidden',\r\n            height: '20px',\r\n            margin: '0px 12px'\r\n          },\r\n        \"& .MuiInputBase-input\": {\r\n            fontFamily: 'Cairo'\r\n        },\r\n        \"& .MuiSelect-select\": {\r\n            height: '27px'\r\n        },\r\n        \"& .MuiFormControl-root\": {\r\n            flexDirection: 'row !important'\r\n        },\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    dialog: {\r\n        \"& .MuiDialog-paperWidthSm\": {\r\n            width: '700px'\r\n        }\r\n    },\r\n  }));\r\n\r\nconst GroupsPage = () => {\r\n    const classes = useStyles();\r\n\r\n    const StyledTextField = withStyles({\r\n        root: {\r\n          \"& label\": {\r\n            left: \"auto\",\r\n            fontFamily: \"Cairo\",\r\n            height: \"25px\",\r\n            overflow: 'hidden'\r\n          },\r\n          \"& legend\": {\r\n            textAlign: \"right\",\r\n          }\r\n        }\r\n      })(TextField);\r\n    const [groups, setGroups] = useState([]);\r\n    const [courseStudents, setCourseStudents] = useState([]);\r\n    const [selectedStudents, setSelectedStudents] = useState();\r\n    const [groupName, setGroupName] = useState('');\r\n    const [toBeQueried, setToBeQueried] = useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n    const [editPopup, setEditPopup] = React.useState(false);\r\n    const [editedGroupName, setEditedGroupName] = useState('');\r\n    const [msgOpen, setMsgOpen] = React.useState(false);\r\n    const [msgContent, setMsgContent] = React.useState('');\r\n    const [query, setQuery] = useState('');\r\n    const [addQuery, setAddQuery] = useState('');\r\n\r\n    const lowerCaseQuery = query.toLowerCase();\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            field: \"id\",\r\n            headerName: \"كود الطالب\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"name\",\r\n            headerName: \"اسم الطالب\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"phone\",\r\n            headerName: \"رقم الطالب\",\r\n            flex: 1,\r\n        }\r\n    ]\r\n\r\n\r\n    let{courseId} = useParams();\r\n\r\n\r\n\r\n\r\n    const handleMsgOpen = () => {\r\n        setMsgOpen(true)\r\n        setTimeout(() => {\r\n            setMsgOpen(false)\r\n          }, 3000);\r\n    }\r\n\r\n    const arr = [];\r\n\r\n\r\n    const handleClickOpen = () => {\r\n      axiosInstance\r\n                .get('groups/get-student/' + courseId).then((res) => {\r\n                    console.log(res.data)\r\n                    res.data.map((item) => arr.push({\r\n                        id: item.id,\r\n                        name: item.first_name + ' ' + item.last_name,\r\n                        group: item.group.name,\r\n                        phone: item.phone,\r\n                        parent_phone: item.parent_phone,\r\n                        point: item.point,\r\n                    }));\r\n                }).then(() => setCourseStudents(arr))\r\n      setOpen(true);\r\n    };\r\n    const handleSaveGroup = () => {\r\n        axiosInstance\r\n                    .post('groups/new-group/' + courseId, {\r\n                        \"name\": groupName,\r\n                        \"students\": selectedStudents\r\n                    }).then((res) => {\r\n                        console.log(res)\r\n                    })\r\n        setOpen(false);\r\n      };\r\n\r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n\r\n      const handlePopUpClose = () => {\r\n        setEditPopup(false);\r\n      };\r\n\r\n    useEffect(() => {\r\n        axiosInstance\r\n                    .get('groups/groups/' + courseId).then((res) => {\r\n                        console.log(res.data)\r\n                        setGroups(res.data)\r\n                    })\r\n                    console.log(\"state:\",groups)\r\n    }, [])\r\n    return(\r\n        <div>\r\n            <div style={{ zIndex: '-4' }}>\r\n                <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column' }}>\r\n                    <div style={{ display: 'flex', justifyContent:'space-between' }}>\r\n                        <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '15%'}}>المجموعات</h3>\r\n                        <TextField className={classes.root} style={{ marginLeft: '17%' }} label={<span>بحث ..</span>}  onChange={(e) => {\r\n                                        setQuery(e.target.value)}} />\r\n                        <Button onClick={handleClickOpen} style={{ backgroundColor: '#FF5856', color: 'white', height: '50px' }}>أضف مجموعة +</Button>\r\n                        <Dialog onClose={handleClose} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n                            <div style={{ backgroundColor: 'white', display: 'inline-flex', flexDirection: 'column', flexWrap: 'wrap', width: '500px', padding: '10px 20px'  }}>\r\n                                <TextField className={classes.root} onChange={(e) => setGroupName(e.target.value)} style={{ overflow: 'hidden', width: \"30%\" }} placeholder=\"اسم المجموعة\" />\r\n                                <h4 style={{ margin: '10px 0' }}>اضافة طلاب للمجموعة</h4>\r\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                <TextField className={classes.root} label={<span>بحث ..</span>} onChange={(e) => {\r\n                                    setAddQuery(e.target.value)\r\n                                }} />\r\n                                <FormControl style={{ width: '150px' }}  className={classes.root}>\r\n                                            <Select\r\n                                            style={{ width: '150px' }}\r\n                                            value={toBeQueried}\r\n                                            onChange={(e) => setToBeQueried(e.target.value)}\r\n                                            displayEmpty\r\n                                            >\r\n                                            <MenuItem value=\"\">\r\n                                                <span style={{ overflow: 'hidden'}}>بحث باستخدام</span>\r\n                                            </MenuItem>\r\n                                            <MenuItem value=\"phone\">\r\n                                                <span style={{ overflow: 'hidden'}}>رقم الهاتف</span>\r\n                                            </MenuItem>\r\n                                            <MenuItem value=\"name\">\r\n                                                <span style={{ overflow: 'hidden'}}>اسم الطالب</span>\r\n                                            </MenuItem>\r\n                                            <MenuItem value=\"id\">\r\n                                                <span style={{ overflow: 'hidden'}}>كود الطالب</span>\r\n                                            </MenuItem>\r\n                                            \r\n                                            </Select>\r\n                                </FormControl>\r\n                                </div>\r\n                                {console.log(groupName)}\r\n                                <div style={{ height: 300, width: '100%', margin: 'auto' }}>\r\n                                 <DataGrid\r\n                                    style={{ display: 'flex',  }}\r\n                                    className={'smallScrollBar'}\r\n                                    scrollbarSize= {1}\r\n                                    components={{\r\n                                        NoRowsOverlay: () => {\r\n                                            return <span style={{ margin: 'auto', overflow: 'hidden'}}>لا يوجد طلاب لاضافتهم </span>\r\n                                        }\r\n                                    }}\r\n                                    onSelectionModelChange={(e) => {\r\n                                        const selectedIDs = new Set(e.selectionModel);\r\n                                        console.log(selectedIDs);\r\n                                        const selectedRowData = courseStudents.filter((row) =>\r\n                                            selectedIDs.has(row.id)\r\n                                        );\r\n                                        console.log(\"select rowData:\", selectedRowData);\r\n                                        setSelectedStudents(selectedRowData.map((row) => row.id));\r\n\r\n                                    }}autopageSize scrollbarSize={20} checkboxSelection rows={addQuery ? courseStudents.filter((row) => {\r\n                                        if(toBeQueried == 'phone'){\r\n                                            return row.phone.toLowerCase().includes(lowerCaseQuery) \r\n                                        } else if(toBeQueried == 'name'){\r\n                                            return row.name.toLowerCase().includes(lowerCaseQuery) \r\n                                        } else if(toBeQueried == 'id'){\r\n                                            return row.id.toLowerCase().includes(lowerCaseQuery) \r\n                                        } else {\r\n                                            return row.name.toLowerCase().includes(lowerCaseQuery) \r\n                                        }\r\n                                    }) : courseStudents} columns={columns}\r\n                                    \r\n                                />\r\n                                {console.log(\"selecte\",selectedStudents)}\r\n                                </div>\r\n                                    <Button onClick={handleSaveGroup} style={{ backgroundColor: '#FF5856', color: 'white', height: '50px' }}>حفظ</Button>\r\n\r\n                            </div>\r\n                        </Dialog>\r\n                    </div>\r\n                    <div>\r\n                        <table style={{ borderSpacing: '0px 13px', width: '100%', borderCollapse: 'separate' }}>\r\n                            <th align=\"right\">اسم المجموعة</th>\r\n                            <th align=\"right\">كود المجموهة</th>\r\n                            <th>عملية</th>\r\n                            {groups.length == 0 ? <div style={{ width: 'flex', justifyContent: 'center', alignItems: 'center' }}>لا يوجد مجموعات</div> : \r\n                            groups.filter((row) => row.name.toLowerCase().includes(lowerCaseQuery)).map((group) =>\r\n                            <tr>\r\n                                <td>{group.name}</td>\r\n                                <td>{group.id}</td>\r\n                                <td align=\"center\">\r\n                                <IconButton onClick={() => {\r\n                                    axiosInstance\r\n                                                .delete('groups/updateGroup/' + group.id).then((res) => {\r\n                                                    \r\n                                                    console.log(res)\r\n                                                    setMsgContent(res.data)\r\n                                                \r\n                                                }).then((res) => {\r\n                                                    axiosInstance.get('groups/groups/' + courseId).then((res) => {\r\n                                                        setGroups(res.data)\r\n                                                        handleMsgOpen()\r\n                                                    })\r\n                                                });\r\n                                                \r\n                                    \r\n                                }} style={{ backgroundColor: '', color: '#FF5856', width: '40px', height: '40px' }} aria-label=\"delete\">\r\n                                    <DeleteIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                                <Dialog style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\" open={msgOpen}>\r\n                                    <div style={{ backgroundColor: 'white', display: 'inline-flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '500px', padding: '10px 20px'  }}>\r\n                                        {msgContent == 'لا يمكن حذف المجموعة وبها طلاب يرجى تغير مجموعة الطلاب اولا ثم اعادة المحاولة' ? <ErrorIcon className=\"checkMark\" style={{margin: 'auto', width: \"80px\", height: '110px', color: 'red'}} /> : <CheckCircleIcon className=\"checkMark\" style={{margin: 'auto', width: \"80px\", height: '110px', color: 'green'}} /> }\r\n                                        <h5 style={{ fontSize: '16px' }}>\r\n                                            {msgContent}\r\n                                        </h5>\r\n                                    </div>\r\n                                </Dialog>\r\n                                <IconButton onClick={() => {\r\n                                    setEditPopup(true)\r\n                                }} style={{ backgroundColor: '', width: '40px', color: '#3f51b5', height: '40px' }} aria-label=\"delete\">\r\n                                    <EditIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                                <Dialog onClose={handlePopUpClose} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\" open={editPopup}>\r\n                                    <div style={{ backgroundColor: 'white', display: 'inline-flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '500px', padding: '10px 20px'  }}>\r\n                                    <input className=\"customInput\" placeholder={group.name} onChange={(e) => {\r\n                                        setEditedGroupName(e.target.value)\r\n                                    }}/>\r\n                                    <Button onClick={() => {\r\n                                        axiosInstance\r\n                                                    .put('groups/updateGroup/' + group.id, {\r\n                                                        \"name\": editedGroupName\r\n                                                    }).then((res) => {\r\n                                                        console.log(res.data)\r\n                                                        axiosInstance\r\n                                                            .get('groups/groups/' + courseId).then((res) => {\r\n                                                                setGroups(res.data)\r\n                                                                setEditPopup(false)\r\n                                                            })\r\n                                                    })\r\n                                    }} style={{ backgroundColor: '#FF5856', color: 'white', height: '50px' }}>حفظ</Button>\r\n                                    </div>\r\n                                </Dialog>\r\n                                </td>\r\n                            </tr>)}\r\n                            \r\n                            \r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupsPage;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\CourseStudent.js",["209","210","211","212","213","214","215","216","217"],"import React, { useState, useEffect } from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    BrowserRouter as \r\n    useHistory,\r\n  } from \"react-router-dom\";\r\n  import {\r\n    TextField,\r\n  } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport { useParams } from 'react-router-dom';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axiosInstance from \"../../axios\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport '../css/teacher.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiFormLabel-root\": {\r\n            color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n            fontFamily: \"Cairo\",\r\n            left: 'auto',\r\n            overflow: 'hidden',\r\n            height: '20px',\r\n            margin: '0px 12px'\r\n          },\r\n        \"& .MuiSelect-select\": {\r\n            height: '27px'\r\n        },\r\n        \"& .MuiInputBase-input\": {\r\n            fontFamily: 'Cairo'\r\n        },\r\n        \"& .MuiFormControl-root\": {\r\n            flexDirection: 'row !important'\r\n        },\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    dialog: {\r\n        \"& .MuiDialog-paperWidthSm\": {\r\n            width: '700px'\r\n        }\r\n    },\r\n  }));\r\n\r\nconst CourseStudentPage = () => {\r\n    const [students, setStudents] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentStudent, setCurrentStudent] = useState();\r\n    const [selectedStudents, setSelectedStudents] = useState();\r\n    const [deleteAlert, setDeleteAlert] = React.useState(false);\r\n    const [groups, setGroups] = useState([]);\r\n    const [monthsToBePurchased, setMonthsToBePurchased] = useState();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [query, setQuery] = useState('');\r\n    const [toBeQueried, setToBeQueried] = useState('');\r\n    const [alert, setAlert] = useState('');\r\n    const [group, setGroup] = useState('');\r\n    const [rerender, setRerender] = useState(1);\r\n\r\n    const lowerCaseQuery = query.toLowerCase();\r\n    let{courseId} = useParams();\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const arr = [];\r\n    const handleDialogClose = () => {\r\n        setDeleteAlert(false)\r\n    }\r\n    const handleGroupChange = () => {\r\n        axiosInstance\r\n                    .post('users/changeGroup/' + group, selectedStudents).then((res) => {\r\n                        console.log(res)\r\n                        setAlert(res.data)\r\n                    }).then(() => {\r\n                        axiosInstance\r\n                                .get('users/allStudentCourse/' + courseId).then((response) => {\r\n                                    console.log(response.data)\r\n                                    response.data.map((item) => arr.push({\r\n                                        id: item.id,\r\n                                        name: item.first_name + ' ' + item.last_name,\r\n                                        group: item.group.name,\r\n                                        phone: item.phone,\r\n                                        parent_phone: item.parent_phone,\r\n                                        point: item.point,\r\n                                    }));\r\n                           }).then(()=>{\r\n                                    setStudents(arr)\r\n                        })\r\n                    })\r\n        setOpen(true);\r\n        setTimeout(() => {\r\n            setOpen(false)\r\n          }, 3000);\r\n\r\n    }\r\n    console.log(rerender)\r\n    const columns = [\r\n        {\r\n            field: \"id\",\r\n            headerName: \"كود الطالب\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"name\",\r\n            headerName: \"اسم الطالب\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"group\",\r\n            headerName: \"مجموعة الطالب\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"phone\",\r\n            headerName: \"رقم الهاتف\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"parent_phone\",\r\n            headerName: \"هاتف ولي الامر\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"point\",\r\n            headerName: \"نقاط الطالب\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"pay\",\r\n            headerName: \"دفع الشهر\",\r\n            flex: 1,\r\n            disableClickEventBubbling: true,\r\n            renderCell: (student) => {\r\n                return (\r\n                    <div>\r\n                        <IconButton onClick={() => {\r\n                            setDeleteAlert(true)\r\n                            setCurrentStudent(student.row.id)\r\n                        }} size=\"small\" variant=\"contained\" color=\"primary\">\r\n                            <PaymentIcon />\r\n                        </IconButton>\r\n                        <Dialog onClose={handleDialogClose} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\"  open={deleteAlert}>\r\n                                <div style={{ backgroundColor: 'white', display: 'inline-flex', justifyContent: 'space-around', height: '80px', alignItems: 'center', flexDirection: 'row', flexWrap: 'wrap', width: '300px', padding: '10px 20px'  }}>\r\n                                    <input type=\"number\" className=\"customInput\" placeholder=\"ادخل عدد الشهور\" style={{ padding: '4px', margin: '0' }} value={monthsToBePurchased} onChange={(e) => setMonthsToBePurchased(parseInt(e.target.value))} />\r\n                                    <Button variant=\"contained\" style={{ backgroundColor: '#ff5658', color: 'white' }} onClick={() => {\r\n                                        axiosInstance.post('users/add_points/' + courseId, {\r\n                                            student: currentStudent,\r\n                                            month_number: monthsToBePurchased\r\n                                        }).then((res) => setDeleteAlert(false))\r\n                                    }}>ادفع</Button>\r\n                                </div>\r\n                        </Dialog>\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            field: \"profile\",\r\n            headerName: \"ملف الطالب\",\r\n            flex: 1,\r\n            disableClickEventBubbling: true,\r\n            renderCell: (student) => {\r\n                return (\r\n                    <div>\r\n                        <Button onClick={() => handleUserClicked(student)} size=\"small\"   color=\"secondary\" variant=\"contained\" ><AccountBoxIcon /></Button>\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    let hist = useHistory();\r\n\r\n    const handleUserClicked = (clickedUser) => {\r\n        hist.push(`/teacher/course/${courseId}/student/${clickedUser.row.id}`)\r\n    }\r\n   \r\n\r\n    useEffect(async () => {\r\n        axiosInstance\r\n        .get('users/allStudentCourse/' + courseId).then((response) => {\r\n            console.log('kk', response.data)\r\n             response.data.map((item) => arr.push({\r\n                 id: item.id,\r\n                 name: item.first_name + ' ' + item.last_name,\r\n                 group: !item.group ? 'بلا مجموعة' : item.group.name,\r\n                 phone: item.phone,\r\n                 parent_phone: item.parent_phone,\r\n                 point: item.point,\r\n             }));\r\n         }).then(()=>{\r\n             setStudents(arr)\r\n         }).then(() => {\r\n            axiosInstance\r\n            .get('groups/groups/' + courseId).then((res) => {\r\n                console.log(res.data)\r\n                setGroups(res.data)\r\n            }).then(() => setLoading(false))\r\n         })\r\n    }, [])\r\n    const handleChange = (event) => {\r\n        const name = event.target.value;\r\n        setGroup(name);\r\n      };\r\n    const classes = useStyles();\r\n    \r\n    return(\r\n        <div>\r\n            {loading ? <div style={{position: 'absolute', marginTop: '100px', marginRight: '500px', color: 'red'}}>جاري التحميل</div> : <div style={{ zIndex: '-4' }}>\r\n            <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column' }}>\r\n            <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '10%'}}>طلاب التدريب</h3>\r\n            <div style={{ display: 'flex',  alignItems: 'center' }}>\r\n                <TextField className={classes.root} style={{ overflow: 'hidden', width: '15%' }} label={<span style={{overflow: 'hidden'}}>بحث .. </span>} onChange={(e) => {\r\n                                        setQuery(e.target.value)\r\n                }} />\r\n                <FormControl style={{ width: '150px' }}  className={classes.root}>\r\n                            <Select\r\n                            style={{ width: '150px' }}\r\n                            value={toBeQueried}\r\n                            onChange={(e) => setToBeQueried(e.target.value)}\r\n                            displayEmpty\r\n                            >\r\n                            <MenuItem value=\"\">\r\n                                <span style={{ overflow: 'hidden'}}>بحث باستخدام</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"phone\">\r\n                                <span style={{ overflow: 'hidden'}}>رقم الهاتف</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"name\">\r\n                                <span style={{ overflow: 'hidden'}}>اسم الطالب</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"group\">\r\n                                <span style={{ overflow: 'hidden'}}>اسم المجموعة</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"parent_phone\">\r\n                                <span style={{ overflow: 'hidden'}}>رقم ولي الامر</span>\r\n                            </MenuItem>\r\n                            \r\n                            </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n                <div style={{ height: 450, width: '100%', margin: 'auto', overflow: 'hidden' }} className={classes.root}>\r\n                <DataGrid\r\n                    \r\n                    components={{\r\n                        NoRowsOverlay: () => {\r\n                            return <span style={{ margin: 'auto', overflow: 'hidden'}}>لا يوجد طلاب لهذا التدريب</span>\r\n                        }\r\n                    }}\r\n                    onSelectionModelChange={(e) => {\r\n                        const selectedIDs = new Set(e.selectionModel);\r\n                        console.log(selectedIDs);\r\n                        const selectedRowData = students.filter((row) =>\r\n                            selectedIDs.has(row.id)\r\n                        );\r\n                        console.log(\"select rowData:\", selectedRowData);\r\n                        setSelectedStudents(selectedRowData.map((row) => row.id));\r\n                    }}autopageSize scrollbarSize={20} checkboxSelection rows={query ? students.filter((row) => {\r\n                        if(toBeQueried == 'phone'){\r\n                            return row.phone.toLowerCase().includes(lowerCaseQuery) \r\n                        } else if(toBeQueried == 'name'){\r\n                            return row.name.toLowerCase().includes(lowerCaseQuery) \r\n                        } else if(toBeQueried == 'group'){\r\n                            return row.group.toLowerCase().includes(lowerCaseQuery) \r\n                        } else if(toBeQueried == 'parent_phone'){\r\n                            return row.parent_phone.toLowerCase().includes(lowerCaseQuery) \r\n                        } else {\r\n                            return row.name.toLowerCase().includes(lowerCaseQuery) \r\n                        }\r\n                    }) : students} columns={columns}\r\n                    \r\n                    />\r\n\r\n                    {console.log(\"state: \", selectedStudents)}\r\n                    {console.log(arr)}\r\n       { console.log(\"ss\", students)}\r\n\r\n                </div>\r\n\r\n                <div style={{ display: 'flex', margin: '10px 0'}}>\r\n                    <span>أضف الى مجموعة : </span>\r\n                    {/* <FormControl>\r\n                        <NativeSelect\r\n                        value={group}\r\n                        onChange={handleChange}\r\n                        name=\"group\"\r\n                        inputProps={{ 'aria-label': 'مجموعة' }}\r\n                        >\r\n                        <option value=\"\">None</option>\r\n                        <option value={10}>Ten</option>\r\n                        <option value={20}>Twenty</option>\r\n                        <option value={30}>Thirty</option>\r\n                        </NativeSelect>\r\n                        <FormHelperText>With visually hidden label</FormHelperText>\r\n                    </FormControl> */}\r\n                    <FormControl style={{ width: '150px' }}>\r\n                        <Select\r\n                        style={{ width: '150px' }}\r\n                        value={group}\r\n                        onChange={handleChange}\r\n                        displayEmpty\r\n                        >\r\n                        <MenuItem value=\"\">\r\n                            <span style={{ overflow: 'hidden'}}>اختر مجموعة</span>\r\n                        </MenuItem>\r\n                        {groups.map((group) => \r\n                            <MenuItem value={group.id}><span style={{ overflow: 'hidden'}}>{group.name}</span></MenuItem>\r\n                         )}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <Button onClick={handleGroupChange} variant=\"contained\" style={{ backgroundColor: \"#FF5856\", color: \"white\" , margin: '0 10px'}}>حفظ</Button>\r\n                    <Dialog style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n                            <div style={{ backgroundColor: 'white', display: 'inline-flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '500px', padding: '10px 20px'  }}>\r\n                            <CheckCircleIcon className=\"checkMark\" style={{ margin: 'auto', width: \"80px\", height: '110px', color: 'green' }} />\r\n                                <h5 style={{ fontSize: '16px' }}>\r\n                                    {alert}\r\n                                </h5>\r\n                            </div>\r\n                    </Dialog>\r\n                </div>\r\n                {console.log(groups)}\r\n\r\n                \r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n          <br></br>\r\n            </div>\r\n        </div>}\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseStudentPage; ","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\StudentProfile.js",["218","219","220","221","222"],"import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport lessonImg from './nol.png'\r\nimport NoLogs from '../../svg/NoLogs.svg'\r\n  import {\r\n    Checkbox,\r\n  } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useParams } from 'react-router-dom';\r\nimport axiosInstance from \"../../axios\";\r\nimport SuccessIcon from '../../svg/SuccessIcon.gif'\r\nconst StudentsProfilePage = () => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [userInfo, setUserInfo] = useState({\r\n      group: {\r\n        name: ''\r\n      },\r\n      point: '',\r\n      phone: ''\r\n    });\r\n    const [successPopup, setSuccessPopUp] = useState(false)\r\n    const [pastLessons, setPastLessons] = useState([]);\r\n    const [pastAddedLessons, setPastAddedLessons] = useState([]);\r\n    const [checkedLessons, setCheckedLessons] = useState([])\r\n    const [uncheckedLessons, setUnCheckedLessons] = useState([])\r\n    const [studentsLogs, setStudentsLogs] = useState([]);\r\n\r\n\r\n    let{courseId} = useParams();\r\n    let{studentId} = useParams();\r\n\r\n\r\n    useEffect(() => {\r\n        axiosInstance\r\n                    .get('users/lessonsAddedBefore/' + courseId + '/' + studentId).then((res) => {\r\n                      console.log('res',res.data)\r\n                      setPastAddedLessons(res.data)\r\n                    })\r\n        axiosInstance\r\n                    .get('users/lessonsBefore/' + courseId + '/' + studentId).then((res) => {\r\n                      console.log('res',res.data)\r\n                      setPastLessons(res.data)\r\n                    })\r\n        axiosInstance\r\n                    .get('users/studentInfo/' + courseId + '/' + studentId).then((res) => {\r\n                        setUserInfo(res.data)\r\n                    }).then((res) => setLoading(false))\r\n        axiosInstance\r\n                    .get('users/studentLogs/' + courseId + '/' + studentId).then((res) => console.log(res.data))\r\n        axiosInstance\r\n                    .get('users/studentLogs/' + courseId + '/' + studentId).then((res) => {\r\n                      setStudentsLogs(res.data)\r\n                      console.log(res.data)\r\n                    })\r\n    }, [])\r\n\r\n      function handleCheckAddChange(e, lesson){\r\n        if(e.target.checked){\r\n          setCheckedLessons([...checkedLessons, lesson])\r\n        } else {\r\n          setCheckedLessons(checkedLessons.filter((les) => les !== lesson))\r\n        }\r\n      }\r\n\r\n      function handleCheckRemoveChange(e, lesson){\r\n        if(!e.target.checked){\r\n            setUnCheckedLessons([...uncheckedLessons, lesson])\r\n        } else {\r\n            setUnCheckedLessons(uncheckedLessons.filter((les) => les !== lesson))\r\n        }\r\n      }\r\n      const handlePopUpClose = () => {\r\n        setSuccessPopUp(false);\r\n      };\r\n    return(\r\n        <div>\r\n            {loading ? <div style={{position: 'absolute', marginTop: '100px', marginRight: '500px', color: 'red'}}>جاري التحميل</div> : \r\n            <div style={{ zIndex: '-4' }}>\r\n                <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column' }}>\r\n                    <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '15%'}}>{userInfo.first_name + ' ' + userInfo.last_name}</h3>\r\n                    <ul>\r\n                        <li>مجموعة الطالب : {userInfo.group.name}</li>\r\n                        <li>نقاط الطالب : {userInfo.point}</li>\r\n                        <li>رقم الطالب : {userInfo.phone}</li>\r\n                    </ul>\r\n                    <h3 style={{borderBottom: '2px solid #ccc', margin: '20px 0', width: '27%'}}>دروس ما قبل تسجيل الطالب بالمنصة</h3>\r\n                    <div className=\"coursesGrid\">\r\n                      {pastLessons.length === 0 ? 'لا يوجد' : pastLessons.map((lesson) => \r\n                      <div className=\"card\">\r\n                          <img className=\"courseImg\" src={lessonImg} />\r\n                          <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', width: '100%', margin: '10px' }}>\r\n                            <div>\r\n                              <h3>{lesson.name}</h3>\r\n                              <span className=\"courseTitle\">{lesson.description}</span>\r\n                            </div>\r\n                            <Checkbox onChange={(e) => handleCheckAddChange(e, lesson.id)}/>\r\n                          </div>\r\n                      </div>)}\r\n                    </div>\r\n                    <h3 style={{borderBottom: '2px solid #ccc', margin: '20px 0', width: '40%'}}>دروس ما قبل تسجيل الطالب بالمنصة ولكن اضيفت اليه</h3>\r\n                    <div className=\"coursesGrid\">\r\n                    {pastAddedLessons.length === 0 ? 'لا يوجد' : pastAddedLessons.map((lesson) =>\r\n                      <div className=\"card\">\r\n                          <img className=\"courseImg\" src={lessonImg} />\r\n                            <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', width: '100%', margin: '10px' }}>\r\n                              <div>\r\n                                <h3>{lesson.name}</h3>\r\n                                <span className=\"courseTitle\">{lesson.description}</span>\r\n                              </div>\r\n                              <Checkbox defaultChecked onChange={(e) => handleCheckRemoveChange(e, lesson.id)} />\r\n                            </div>\r\n                      </div>)}\r\n                    </div>\r\n                    {pastLessons.length === 0 && pastAddedLessons.length === 0 ? '' : \r\n                    <div style={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center', width: '150px', margin: '10px 0' }}>\r\n                      <Button variant=\"contained\" color='primary' onClick={() => {\r\n                          axiosInstance.post('users/addLessons/' + courseId + '/' + studentId, {\r\n                            check: checkedLessons,\r\n                            uncheck: uncheckedLessons\r\n                          }).then((res) => {\r\n                            console.log(res)\r\n                            setSuccessPopUp(true)\r\n                            setTimeout(() => {\r\n                              setSuccessPopUp(false)\r\n                            }, 3000)\r\n                          })\r\n                        }}>حفظ التعديلات</Button>\r\n                    </div>}\r\n                    <Dialog onClose={handlePopUpClose} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\" open={successPopup}>\r\n                        <div style={{ backgroundColor: 'white', display: 'inline-flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '500px', padding: '10px 20px'  }}>\r\n                              <img src={SuccessIcon} style={{ width: '80px', height: 'auto' }} />\r\n                              <span style={{ fontSize: '16px', fontWeight: 'bold' }}>تم حفظ التعديلات بنجاح</span>\r\n                        </div>\r\n                    </Dialog>\r\n                    \r\n\r\n                    {console.log('cheked',checkedLessons)}\r\n                    {console.log('uncheked',uncheckedLessons)}\r\n                    {console.log('added',pastAddedLessons)}\r\n                    <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '25%'}}>اخر السجلات المسجلة لهذا الشهر</h3>\r\n                    {studentsLogs.length === 0 ? \r\n                    <div style={{ display: 'flex', flexDirection: 'column', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\r\n                      <img src={NoLogs} style={{ width: '15%', height: 'auto' }} />\r\n                      <span style={{ fontWeight: 'bold', margin: '10px' }}>لا يوجد سجلات لهذا الشهر</span>\r\n                    </div> : \r\n                    <table style={{ borderSpacing: '0px 13px', width: '100%', borderCollapse: 'collapse' }}>\r\n                            <th style={{ borderBottom: '0.5px solid rgba(0,0,0, 0.2)', padding: '10px 0' }} align=\"right\">عدد الشهور التي قام بدفعها</th>\r\n                            <th style={{ borderBottom: '0.5px solid rgba(0,0,0, 0.2)', padding: '10px 0' }} align=\"right\">وقت الدفع</th>\r\n                            {studentsLogs.length === 0 ? \r\n                            '' : studentsLogs.map((log) => \r\n                            <tr style={{ borderBottom: '0.5px solid rgba(0,0,0, 0.2)' }}>\r\n                              <td style={{ padding: '10px 0' }}>{log.month_number}</td>\r\n                              <td style={{ padding: '10px 0' }}>{log.created_at}</td>\r\n                            </tr>\r\n                            )}\r\n                    </table>}\r\n                </div>\r\n            </div>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StudentsProfilePage;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\AddQuestions.js",["223","224","225","226","227","228","229","230","231","232","233"],"import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport SuccessIcon from '../../svg/SuccessIcon.gif'\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n  import {\r\n      Accordion,\r\n      AccordionDetails,\r\n      AccordionSummary,\r\n    Typography,\r\n  } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport axiosInstance from \"../../axios\";\r\nimport QuestionsSvg from '../../svg/questions.svg'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    withStyles,\r\n  } from \"@material-ui/core\";\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiFormLabel-root\": {\r\n            color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n            fontFamily: \"Cairo\",\r\n            left: 'auto',\r\n            overflow: 'hidden',\r\n            height: '20px',\r\n            margin: '0px 12px'\r\n          },\r\n        \"& .MuiSelect-select\": {\r\n            height: '27px'\r\n        },\r\n        \"& .MuiInputBase-input\": {\r\n            fontFamily: 'Cairo'\r\n        },\r\n        \"& .MuiFormControl-root\": {\r\n            flexDirection: 'row !important'\r\n        },\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    dialog: {\r\n        \"& .MuiDialog-paperWidthSm\": {\r\n            width: '700px'\r\n        }\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst AddQuestionsPage = () => {\r\n    const [questionType, setQuestionType] = useState('');\r\n    const [successPopup, setSuccessPopUp] = useState(false)\r\n    const [answer, setAnswer] = useState([]);\r\n    const [questionDetails, setQuestionDetails] = useState({});\r\n    const [multipleChoiceContent, setMultipleChoiceContent] = useState('')\r\n    const [trueFalseChoiceContent, settrueFalseChoiceContent] = useState('')\r\n    const [selectedCourseName, setSelectedCourseName] = useState('');\r\n    const [questionDegree, setQuetionDegree] = useState()\r\n    const [sendedAnswers, setSendedAnswers] = useState([]);\r\n    const [teacherCourses, setTeacherCourses] = useState([]);\r\n    const [savedQuestions, setSavedQuestions] = useState([]);\r\n    const [courseId, setCourseId] = useState();\r\n\r\n      const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('courses/teacher-courses').then((res) => {\r\n            console.log(res.data)\r\n            setTeacherCourses(res.data)\r\n        })\r\n    }, [])\r\n\r\n    const StyledFormControlLabel = withStyles({\r\n        root: {\r\n          \"& label\": {\r\n            fontFamily: \"Cairo\",\r\n          }\r\n        }\r\n      })(FormControlLabel);\r\n      const StyledTextField = withStyles({\r\n        root: {\r\n          \"& label\": {\r\n            left: \"auto\",\r\n            fontFamily: \"Cairo\",\r\n            height: \"25px\",\r\n            overflow: 'hidden'\r\n          },\r\n          \"& legend\": {\r\n            textAlign: \"right\",\r\n          }\r\n        }\r\n      })(TextField);\r\n\r\n    const handleRightAnswer = index => e => {\r\n\r\n        let newArr = [...sendedAnswers];\r\n        newArr[index]['is_correct'] = !newArr[index]['is_correct'];\r\n        console.log(e)\r\n    \r\n        setSendedAnswers(newArr);\r\n    }\r\n\r\n\r\n    const handleAddAnswer = () => {\r\n        setSendedAnswers([...sendedAnswers,answer])\r\n    }\r\n    const handlePopUpClose = () => {\r\n        setSuccessPopUp(false);\r\n      };\r\nconsole.log('answer',answer)\r\nconsole.log('sended',sendedAnswers)\r\n\r\n\r\n\r\n    const questionFormRender = () => {\r\n        if (questionType == 'trueFalse') {\r\n            return (\r\n                <div style={{marginTop: '10px', backgroundColor: 'white', boxShadow: '1px 1px 8px -4px black', transition: '1s .5s ease' }}>\r\n                    <form onSubmit={(e) => {\r\n                                        setSavedQuestions([...savedQuestions, {\r\n                                            course: courseId,\r\n                                            isMultiple: false,\r\n                                            isTrueFalse: true,\r\n                                            content: trueFalseChoiceContent,\r\n                                            degree: questionDegree,\r\n                                            photo: null,\r\n                                            answer: answer\r\n                                        }])\r\n                                        e.preventDefault()\r\n                                    }}>\r\n                        <div style={{ display: 'grid', gridTemplateColumns: \"50% 50%\", padding: '20px', gridGap: '20px'}}>\r\n                            <TextareaAutosize required onChange={(e) => settrueFalseChoiceContent(e.target.value)} style={{ border: '0.1px solid grey', outline: 'none', padding: '5px', overflow: 'scroll' }} className=\"textArea\" aria-label=\"minimum height\" rowsMin={3} placeholder=\"محتوى السؤال\" />\r\n                            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                <FormControl component=\"fieldset\" style={{ width: '100%' }}>\r\n                                    <FormLabel required component=\"legend\" style={{ overflow: 'hidden' }}><span>الاجابة الصحيحة</span></FormLabel>\r\n                                    <RadioGroup onChange={(e) => setAnswer([\r\n                                    {\r\n                                        is_correct: false,\r\n                                        answer: e.target.value == 'خطأ' ? 'صح' : 'خطأ'\r\n\r\n                                    }, {\r\n                                        is_correct: true,\r\n                                        answer: e.target.value\r\n                                    }])} aria-label=\"gender\" name=\"gender1\" style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                        <FormControlLabel value=\"صح\" control={<Radio />} label={<span>صح</span>} />\r\n                                        <FormControlLabel value=\"خطأ\" control={<Radio />} label={<span>خطأ</span>} />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                    {/* <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n                                    <label htmlFor=\"icon-button-file\">\r\n                                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <PhotoCamera />\r\n                                        </IconButton>\r\n                                        <span>ارفق صورة</span>\r\n                                    </label> */}\r\n                                    <TextField required type=\"number\" className={classes.root}  style={{ width: '80px', padding: '4px' }} label={<span>درجة</span>} onChange={(e) => {\r\n                                        setQuetionDegree(parseInt(e.target.value))\r\n                                    }} />\r\n                                    <Button type=\"submit\" onClick={(e) => e.preventDefault} style={{ backgroundColor: '#FF5856', height: '40px', color: 'white', marginLeft: '15px' }}>حفظ</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else if (questionType == 'mcq') {\r\n            return (\r\n                <div style={{marginTop: '10px', backgroundColor: 'white', boxShadow: '1px 1px 8px -4px black', transition: '1s .5s ease' }}>\r\n                    <form onSubmit={(e) => {\r\n                                    setSavedQuestions([...savedQuestions, {\r\n                                        course: courseId,\r\n                                        isMultiple: true,\r\n                                        isTrueFalse: false,\r\n                                        content: multipleChoiceContent,\r\n                                        degree: questionDegree,\r\n                                        photo: null,\r\n                                        answer: sendedAnswers\r\n                                    }])\r\n                                    setSendedAnswers([])\r\n                                    setMultipleChoiceContent('')\r\n                                    setQuetionDegree()\r\n                                    e.preventDefault()\r\n                                }}>\r\n                    <div style={{ display: 'grid', gridTemplateColumns: \"50% 50%\", padding: '20px', gridGap: '20px'}}>\r\n                        <TextareaAutosize required onChange={(e) => {\r\n                            setMultipleChoiceContent(e.target.value)\r\n                        }} style={{ border: '0.1px solid grey', outline: 'none', padding: '5px', overflow: 'scroll' }} className=\"textArea\" aria-label=\"minimum height\" rowsMin={3} placeholder=\"محتوى السؤال\" />\r\n                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                <TextField required className={classes.root} onChange={(e) => {\r\n                                    setAnswer({\r\n                                        is_correct: false,\r\n                                        answer: e.target.value\r\n                                    })\r\n                                }}  label={<span>ادخل اجابة</span>} style={{ padding: '4px', margin: '0' }} />\r\n                                <Button color=\"primary\" onClick={handleAddAnswer} variant=\"contained\" size=\"medium\">اضف اجابة</Button>\r\n                            </div>\r\n                            <div style={{ display: sendedAnswers.length == 0 ? 'none' : 'block' }}>\r\n                            <FormControl required component=\"fieldset\" className={classes.formControl}>\r\n                                <FormGroup style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                                <ul>\r\n                                \r\n                                {sendedAnswers.map((e, index) => \r\n                                    <li>\r\n                                    <FormControlLabel\r\n                                    style={{ overflow: 'hidden' }}\r\n                                    control={<Checkbox onChange={handleRightAnswer(index)}  name=\"\" />}\r\n                                    label={<span>{e.answer}</span>}\r\n                                />\r\n                                {console.log(index)}\r\n                                <IconButton onClick={() => {\r\n                                    setSendedAnswers(sendedAnswers.filter((y) => e.answer !== y.answer))\r\n                                }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                        <ClearIcon />\r\n                                </IconButton>\r\n                                </li>\r\n                                )}\r\n                                </ul>\r\n                                \r\n                                </FormGroup>\r\n                            </FormControl>\r\n                            </div>\r\n                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                                {/* <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n                                <label htmlFor=\"icon-button-file\">\r\n                                    <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                        <PhotoCamera />\r\n                                    </IconButton>\r\n                                    <span>ارفق صورة</span>\r\n                                </label> */}\r\n                                <TextField required type=\"number\" className={classes.root}  style={{ width: '80px', padding: '4px' }} label={<span>درجة</span>} onChange={(e) => {\r\n                                        setQuetionDegree(parseInt(e.target.value))\r\n                                    }} />\r\n                                <Button type=\"submit\" style={{ backgroundColor: '#FF5856', height: '40px', color: 'white', marginLeft: '15px' }}>حفظ</Button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n            )\r\n        } else {\r\n            return <img src={QuestionsSvg} style={{ margin: '20px auto', width: '80%' }} />\r\n        }\r\n    }\r\n\r\n    const handleQuestionTypeChange = (event) => {\r\n        setQuestionType(event.target.value);\r\n      };\r\n\r\n    \r\n    return(\r\n        <div>\r\n            <div style={{ zIndex: '-4' }}>\r\n                <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column', justifyContent: 'center', alignItems: 'center' }}>\r\n                                <FormControl style={{ width: '300px' }}>\r\n                                    <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={selectedCourseName}\r\n                                    displayEmpty\r\n                                    onChange={(e) => {\r\n                                        setCourseId(e.target.value)\r\n                                        setSelectedCourseName(e.target.value)\r\n                                    }}\r\n                                    >\r\n                                    \r\n                                    <MenuItem value=\"\"><span style={{ overflow: 'hidden' }}>اختر التدريب المراد اضافة اسئلة اليه</span></MenuItem>\r\n\r\n                                    {teacherCourses.map((e) => <MenuItem value={e.id}><span style={{ overflow: 'hidden' }}>{e.name}</span></MenuItem>)}\r\n                                </Select>\r\n                            </FormControl>\r\n                    {courseId ? \r\n                    <>\r\n                        <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', textAlign: 'center', width: '15%'}}>إضافة اسئلة</h3>\r\n                        <div style={{display: 'flex', width: '700px', flexDirection: 'column', height: 'auto', padding: '10px 0'}}>\r\n                        <div style={{ display: 'flex', width: '700px', justifyContent: 'space-around', alignItems:'center', backgroundColor: 'white', height: '50px', boxShadow: '1px 1px 8px -4px black' }}>\r\n                            <span>حدد نوع السؤال</span>\r\n                            <FormControl style={{ width: '200px' }}>\r\n                                <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                value={questionType}\r\n                                displayEmpty\r\n                                onChange={handleQuestionTypeChange}\r\n                                >\r\n                                \r\n                                <MenuItem value=\"\"><span style={{ overflow: 'hidden' }}>لا شئ</span></MenuItem>\r\n                                <MenuItem value={'trueFalse'}><span style={{ overflow: 'hidden' }}>صح وغلط</span></MenuItem>\r\n                                <MenuItem value={'mcq'}><span style={{ overflow: 'hidden' }}>اختيار من متعدد</span></MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </div>\r\n                        {\r\n                            questionFormRender()\r\n                        }\r\n                        {savedQuestions.length > 0 ? <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', textAlign: 'center', width: '30%'}}>الاسئلة التي تمت اضافتها</h3> : ''}\r\n\r\n                            {savedQuestions.map((question) => \r\n                            <div style={{marginTop: '10px', overflow: 'hidden'}}>\r\n                                <Accordion style={{overflow: 'hidden'}}>\r\n                                    <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"panel1a-content\"\r\n                                    id=\"panel1a-header\"\r\n                                    >\r\n                                    <Typography><span>{question.content}</span></Typography>\r\n                                    </AccordionSummary>\r\n                                    <AccordionDetails>\r\n                                    <div style={{ width: '100%' ,display: 'grid', gridTemplateColumns: 'repeat(3, 1fr)' }}>\r\n                                        <div>\r\n                                            <span>الاجابة : </span>\r\n                                            {question.answer.map((e) => <li>{e.answer}</li>)}\r\n                                        </div>\r\n                                        <span style={{ justifyItems: 'center' }}>الدرجة : {question.degree}</span>\r\n                                        <IconButton onClick={() => setSavedQuestions(savedQuestions.filter((y) => question.content !== y.content))} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                    </AccordionDetails>\r\n                                </Accordion>\r\n                                <Divider />\r\n                            </div>)}\r\n                        {savedQuestions.length > 0 ? <Button onClick={() => {\r\n                            axiosInstance\r\n                                        .post('questions/question-post/' + courseId, savedQuestions).then((res) => {\r\n                                            console.log(res)\r\n                                        })\r\n                            setSavedQuestions([])\r\n                            setSuccessPopUp(true)\r\n                            setTimeout(() => {\r\n                                setSuccessPopUp(false)\r\n                            }, 3000)\r\n                        }} color=\"primary\" variant=\"contained\">تسجيل الاسئلة</Button> : ''}\r\n                    </div>\r\n                    <Dialog onClose={handlePopUpClose} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\" open={successPopup}>\r\n                        <div style={{ backgroundColor: 'white', display: 'inline-flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '500px', padding: '10px 20px'  }}>\r\n                              <img src={SuccessIcon} style={{ width: '80px', height: 'auto' }} />\r\n                              <span style={{ fontSize: '16px', fontWeight: 'bold' }}>تم حفظ الاسئلة بنجاح</span>\r\n                        </div>\r\n                    </Dialog>\r\n                    </>\r\n             : <img src={QuestionsSvg} style={{ margin: '20px auto', width: '80%' }} />}\r\n                    \r\n                </div>\r\n                {console.log(courseId)}\r\n                {console.log(savedQuestions)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddQuestionsPage;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\AddExam.js",["234","235","236","237","238"],"import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateMomentUtils from '@date-io/moment';\r\nimport RenderCellExpand from \"./renderCellExpand\";\r\nimport SuccessIcon from '../../svg/SuccessIcon.gif'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport * as moment  from 'moment';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axiosInstance from \"../../axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Exams from '../../svg/Exams.svg'\r\nimport {\r\n    withStyles,\r\n  } from \"@material-ui/core\";\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiFormLabel-root\": {\r\n            color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n            fontFamily: \"Cairo\",\r\n            left: 'auto',\r\n            overflow: 'hidden',\r\n            height: '20px',\r\n            margin: '0px 12px'\r\n          },\r\n        \"& .MuiInputBase-input\": {\r\n            fontFamily: 'Cairo'\r\n        },\r\n        \"& .MuiFormControl-root\": {\r\n            flexDirection: 'row !important'\r\n        },\r\n        \"& .MuiDataGrid-window\":{\r\n          overflow: 'hidden !important'\r\n        },\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst AddExamPage = () => {\r\n    const [courseId, setCourseId] = useState();\r\n    const [successPopup, setSuccessPopUp] = useState(false)\r\n    const [course, setCourse] = useState('')\r\n    const [examHours, setExamHours] = useState();\r\n    const [examMinutes, setExamMinutes] = useState();\r\n    const [totalDegree, setTotalDegree] = useState([]);\r\n    const [selectedQuestions, setSelectedQuestions] = useState([]);\r\n    const [teacherCourses, setTeacherCourses] = useState([]);\r\n    const [courseLessons, setLessons] = useState([])\r\n    const [lesson, setLesson] = useState();\r\n    const [questions, setQuestions] = useState([]);\r\n    const [examDetails, setExamDetails] = useState({\r\n      examName: '',\r\n      examColor: '',\r\n      examDescription: '',\r\n      start_at: new Date(),\r\n      end_at: new Date()\r\n    })\r\n\r\n\r\n    const handleLessonChange = (event) => {\r\n      const name = event.target.value;\r\n      setLesson(name);\r\n    };\r\n    const handlePopUpClose = () => {\r\n      setSuccessPopUp(false);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            field: \"id\",\r\n            headerName: \"رقم الاجابة\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"content\",\r\n            headerName: \"محتوى الاجابة\",\r\n            flex: 5,\r\n            renderCell: RenderCellExpand\r\n        },\r\n        {\r\n            field: \"degree\",\r\n            headerName: \"درجة السؤال\",\r\n            flex: 1,\r\n        }\r\n    ]\r\n\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('courses/teacher-courses').then((res) => {\r\n            console.log(res.data)\r\n            setTeacherCourses(res.data)\r\n        }).then(() => {\r\n          axiosInstance.get('lessons/teacher_lessons/' + courseId).then((res) => setLessons(res.data))\r\n        })\r\n    }, [])\r\n\r\n\r\n      const classes = useStyles();\r\n\r\n    const StyledFormControlLabel = withStyles({\r\n        root: {\r\n          \"& label\": {\r\n            fontFamily: \"Cairo\",\r\n          }\r\n        }\r\n      })(FormControlLabel);\r\n      const StyledTextField = withStyles({\r\n        root: {\r\n          \"& label\": {\r\n            left: \"auto\",\r\n            fontFamily: \"Cairo\",\r\n            height: \"20px\",\r\n            overflow: 'hidden'\r\n          },\r\n          \"& legend\": {\r\n            textAlign: \"right\",\r\n          }\r\n        }\r\n      })(TextField);\r\n\r\n    return(\r\n        <div>\r\n            <div style={{ zIndex: '-4' }}>\r\n            <form onSubmit={(e) => {\r\n                        axiosInstance\r\n                                    .post('exams/add-exam', {\r\n                                      name: examDetails.examName,\r\n                                      course: courseId,\r\n                                      start_at: examDetails.start_at,\r\n                                      end_at: examDetails.end_at,\r\n                                      Limit: `${examHours}:${examMinutes}:00`,\r\n                                      description: examDetails.examDescription,\r\n                                      color: examDetails.examColor,\r\n                                      question: selectedQuestions,\r\n                                      lesson: lesson,\r\n                                      degree: totalDegree.reduce((accumulator, n) => {\r\n                                        return accumulator + n;\r\n                                      })\r\n\r\n                                    }).then((res) => {\r\n                                      setExamDetails({\r\n                                        examName: '',\r\n                                        examColor: '',\r\n                                        examDescription: '',\r\n                                        start_at: new Date(),\r\n                                        end_at: new Date()\r\n                                      })\r\n                                      setLesson()\r\n                                      setQuestions([])\r\n                                      setTotalDegree([])\r\n                                      setSuccessPopUp(true)\r\n                                      setTimeout(() => {\r\n                                        setSuccessPopUp(false)\r\n                                      }, 3000)\r\n                                    })\r\n                      e.preventDefault()\r\n                      \r\n                      }\r\n                      }>\r\n                        <Dialog onClose={handlePopUpClose} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\" open={successPopup}>\r\n                        <div style={{ backgroundColor: 'white', display: 'inline-flex', justifyContent: 'center', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '500px', padding: '10px 20px'  }}>\r\n                              <img src={SuccessIcon} style={{ width: '80px', height: 'auto' }} />\r\n                              <span style={{ fontSize: '16px', fontWeight: 'bold' }}>تم حفظ الامتحان بنجاح</span>\r\n                        </div>\r\n                    </Dialog>\r\n                <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column' }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems:'center', }}>\r\n                  <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '15%'}}>إضافة امتحان</h3>\r\n                  <FormControl style={{ width: '300px' }}>\r\n                              <Select\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              value={course}\r\n                              displayEmpty\r\n                              onChange={(e) => {\r\n                                axiosInstance.get('exams/questions/' + e.target.value).then((res) => {\r\n                                  setQuestions(res.data)\r\n                                }).then(() => {\r\n                                  setCourseId(e.target.value)\r\n                                }).then(() => {\r\n                                  axiosInstance.get('lessons/teacher_lessons/' + e.target.value).then((res) => {\r\n                                    setLessons(res.data)\r\n                                  })\r\n                                  setCourse(e.target.value)\r\n                                })\r\n                              }}\r\n                              >\r\n                              \r\n                              <MenuItem value=\"\"><span style={{ overflow: 'hidden' }}>اختر التدريب المراد اضافة امتحان له</span></MenuItem>\r\n\r\n                              {teacherCourses.map((e) => <MenuItem value={e.id}><span style={{ overflow: 'hidden' }}>{e.name}</span></MenuItem>)}\r\n                          </Select>\r\n                      </FormControl>\r\n              </div>\r\n                  {course ? \r\n                  <>\r\n              <div style={{ display: 'flex', width: '42%', justifyContent: 'space-between' }}>\r\n                  <TextField required style={{ flexDirection: 'row' }} className={classes.root} onChange={(e) => setExamDetails({...examDetails, examName: e.target.value})} value={examDetails.examName} label=\"اسم الامتحان\"/>\r\n                  <TextField required value={examDetails.examDescription} className={classes.root} onChange={(e) => setExamDetails({...examDetails, examDescription: e.target.value})} multiline style={{ width: '270px' }} label=\"وصف الامتحان\"/>\r\n              </div>\r\n              <h3 style={{borderBottom: '2px solid #ccc', margin: '20px 0', width: '20%'}}>إضافة اسئلة الامتحان</h3>\r\n              <div style={{ height: 450, width: '100%', margin: 'auto', overflow: 'hidden' }}>\r\n                  <DataGrid\r\n                      className={classes.root}\r\n                      components={{\r\n                          NoRowsOverlay: () => {\r\n                              return <span style={{ margin: 'auto', overflow: 'hidden'}}>لا يوجد اسئلة لهذه الدورة التدريبية  </span>\r\n                          }\r\n                      }}\r\n                      onSelectionModelChange={(e) => {\r\n                          const selectedIDs = new Set(e.selectionModel);\r\n                          console.log(selectedIDs);\r\n                          const selectedRowData = questions.filter((row) =>\r\n                              selectedIDs.has(row.id)\r\n                          );\r\n                          console.log(\"select rowData:\", selectedRowData);\r\n                          setTotalDegree(selectedRowData.map(function(row){\r\n                            return row.degree\r\n                          }))\r\n                          setSelectedQuestions(selectedRowData.map(function(item){\r\n                            return {\r\n                              question: item.id\r\n                            }\r\n                          }));\r\n                      }}autopageSize scrollbarSize={20} checkboxSelection rows={questions} columns={columns}\r\n                      \r\n                      />\r\n              </div>\r\n              {console.log('total', totalDegree)}\r\n              <h3 style={{borderBottom: '2px solid #ccc', margin: '20px 0', width: '20%'}}>اعدادات الامتحان</h3>\r\n              \r\n              <div style={{ width: '50%', display: 'flex', alignItems: 'center', justifyContent: 'space-between', margin: '0 0 10px 0' }}>\r\n                <span>فترة الامتحان من : </span>\r\n                <MuiPickersUtilsProvider utils={DateMomentUtils}>\r\n                    <DateTimePicker\r\n                        variant=\"dialog\"\r\n                        ampm={false}\r\n                        required\r\n                        value={examDetails.start_at}\r\n                        onChange={(e) => setExamDetails({...examDetails, start_at: moment(e).format('YYYY-MM-DDTHH:mm+02:00')})}\r\n                        onError={console.log}\r\n                        disablePast\r\n                        format=\"yyyy/MM/dd HH:mm\"\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n                <span>الى : </span>\r\n                <MuiPickersUtilsProvider utils={DateMomentUtils}>\r\n                    <DateTimePicker\r\n                        variant=\"dialog\"\r\n                        required\r\n                        ampm={false}\r\n                        value={examDetails.end_at}\r\n                        onChange={(e) => setExamDetails({...examDetails, end_at: moment(e).format('YYYY-MM-DDTHH:mm+02:00')})}\r\n                        onError={console.log}\r\n                        disablePast\r\n                        format=\"yyyy/MM/dd HH:mm\"\r\n                    />\r\n                </MuiPickersUtilsProvider>\r\n              </div>\r\n              <div style={{ display: 'flex', width: '30%', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                      <span>زمن الامتحان : </span>\r\n                      <span>ساعة : </span>\r\n                      <input required type=\"number\" value={examHours} className=\"customInput\" style={{ width: '50px', padding: '4px' }} placeholder=\"ساعة\" onChange={(e) => setExamHours(parseInt(e.target.value))} />\r\n                      <span>دقيقة : </span>\r\n                      <input required type=\"number\" value={examMinutes} className=\"customInput\" style={{ width: '50px', padding: '4px' }} placeholder=\"دقيقة\" onChange={(e) => setExamMinutes(parseInt(e.target.value))} />\r\n              </div>\r\n              <FormControl style={{ width: '150px' }} required>\r\n                              <Select\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              value={examDetails.examColor}\r\n                              displayEmpty\r\n                              onChange={(e) => setExamDetails({...examDetails,examColor:e.target.value})}\r\n                              >\r\n                              \r\n                              <MenuItem value=\"\"><span style={{ overflow: 'hidden' }}>اختر لون الامتحان</span></MenuItem>\r\n                              <MenuItem style={{ backgroundColor: '#ff5856', }}  value=\"#ff5856\"><span style={{ overflow: 'hidden', backgroundColor: '#ff5856', width: '100%', textAlign: 'center', color: 'white' }}>الاحمر</span></MenuItem>\r\n                              <MenuItem style={{ backgroundColor: '#3f51b5', }}  value=\"#3f51b5\"><span style={{ overflow: 'hidden', backgroundColor: '#3f51b5', width: '100%', textAlign: 'center', color: 'white' }}>الازرق</span></MenuItem>\r\n                              <MenuItem style={{ backgroundColor: 'green', }} value=\"green\"><span style={{ overflow: 'hidden', width: '100%', textAlign: 'center', color: 'white' }}>الاخضر</span></MenuItem>\r\n                          </Select>\r\n              </FormControl>\r\n              <FormControl style={{ width: '450px', margin: '10px 0' }}>\r\n                              <Select\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              value={lesson ? lesson : ''}\r\n                              displayEmpty\r\n                              onChange={handleLessonChange}\r\n                              >\r\n                              \r\n                              <MenuItem value=\"\"><span style={{ overflow: 'hidden' }}> لا يمكن خوض الامتحان الا بعد مشهادة هذا الدرس (اختياري)</span></MenuItem>\r\n                              {courseLessons.map((les) => <MenuItem value={les.id}><span style={{ overflow: 'hidden' }}>{les.name}</span></MenuItem>)}\r\n                          </Select>\r\n              </FormControl>\r\n              <div style={{ display: 'flex', alignItems: 'center', margin: '10px 0', justifyContent: 'flex-end' }}> \r\n                      <Button color=\"primary\" variant=\"contained\" type=\"submit\">حفظ الامتحان</Button>\r\n                      {console.log('q',selectedQuestions)}\r\n              </div>\r\n              </>\r\n                  : <img src={Exams} style={{ height: 'auto', width: '60%', margin: 'auto' }} />}\r\n                    \r\n                </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddExamPage;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\CourseExams.js",["239","240","241","242","243","244","245","246","247","248","249","250","251","252"],"import React, { useState, useEffect } from 'react';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport * as moment  from 'moment';\r\nimport DateMomentUtils from '@date-io/moment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    BrowserRouter as \r\n    Link,\r\n    useHistory,\r\n  } from \"react-router-dom\";\r\n  import {\r\n    Checkbox,\r\n  } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useParams } from 'react-router-dom';\r\nimport axiosInstance from \"../../axios\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport '../css/teacher.css';\r\n\r\n\r\nconst CourseExamsPage = () => {\r\n    const [students, setStudents] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [editLoad, setEditLoad] = useState(true);\r\n    const [exams, setExams] = useState();\r\n    const [examDetails, setExamDetails] = useState();\r\n    const [examId, setExamId] = useState();\r\n    const [limit, setLimit] = useState();\r\n    const [courseLessons, setLessons] = useState([])\r\n    const [lesson, setLesson] = useState();\r\n    const [groups, setGroups] = useState([]);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [deleteAlert, setDeleteAlert] = React.useState(false);\r\n    const [editPopup, setEditPopup] = React.useState(false);\r\n    const [groupPopUp, setGroupPopup] = React.useState(false);\r\n    const [notAddedGroups, setNotAddedGroups] = useState([])\r\n    const [addedGroups, setAddedGroups] = useState([])\r\n    const [addedQuestions, setAddedQuestions] = useState([])\r\n    const [notAddedQuestions, setNotAddedQuestions] = useState([])\r\n    const [checkedGroups, setCheckedGroups] = useState([])\r\n    const [unCheckedGroups, setUnCheckedGroups] = useState([]);\r\n    const [checkedQuestions, setCheckedQuestions] = useState([])\r\n    const [unCheckedQuestions, setUnCheckedQuestions] = useState([]);\r\n\r\n\r\n\r\n    let { courseId } = useParams()\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            \"& .MuiFormLabel-root\": {\r\n                color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n                fontFamily: \"Cairo\",\r\n                left: 'auto',\r\n                overflow: 'hidden',\r\n                height: '20px',\r\n                margin: '0px 12px'\r\n              },\r\n            \"& .MuiInputBase-input\": {\r\n                fontFamily: 'Cairo'\r\n            },\r\n            \"& .MuiFormControl-root\": {\r\n                flexDirection: 'row !impoertant'\r\n            },\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n          },\r\n        },\r\n        dialog: {\r\n            \"& .MuiDialog-paperWidthSm\": {\r\n                width: '700px',\r\n                height: 'auto',\r\n                overflow: 'scroll',\r\n                display: 'flow-root'\r\n            }\r\n        },\r\n        input: {\r\n          display: 'none',\r\n        },\r\n      }));\r\n\r\n      const classes = useStyles();\r\n      const hist = useHistory()\r\n\r\n\r\n    useEffect(() => {\r\n        axiosInstance\r\n                    .get('exams/my-exams/' + courseId).then((res) => {\r\n                        console.log(res)\r\n                        setExams(res.data)\r\n                    }).then(() => setLoading(false))\r\n    }, [])      \r\n\r\n    const handleDialogClose = () => {\r\n        setDeleteAlert(false)\r\n    }\r\n    const handleEditDialogClose = () => {\r\n        setEditPopup(false)\r\n    }\r\n    const handleGroupsDialogClose = () => {\r\n        setGroupPopup(false)\r\n    }\r\n    function handleCheckAddChange(e, group){\r\n        if(e.target.checked){\r\n          setCheckedGroups([...checkedGroups, group])\r\n          setUnCheckedGroups(unCheckedGroups.filter((gr) => gr !== group))\r\n        } else {\r\n          setCheckedGroups(checkedGroups.filter((gr) => gr !== group))\r\n        }\r\n      }\r\n      function handleCheckRemoveChange(e, group){\r\n        if(!e.target.checked){\r\n            setUnCheckedGroups([...unCheckedGroups, group])\r\n            setCheckedGroups(checkedGroups.filter((gr) => gr !== group))\r\n        } else {\r\n            setUnCheckedGroups(unCheckedGroups.filter((gr) => gr !== group))\r\n        }\r\n      }\r\n\r\n      //--\r\n      function handleCheckAddQuestionChange(e, question){\r\n        if(e.target.checked){\r\n          setCheckedQuestions([...checkedQuestions, question])\r\n          setUnCheckedQuestions(unCheckedQuestions.filter((que) => que !== question))\r\n        } else {\r\n          setCheckedQuestions(checkedQuestions.filter((que) => que !== question))\r\n        }\r\n      }\r\n      function handleCheckRemoveQuestionChange(e, question){\r\n        if(!e.target.checked){\r\n            setUnCheckedQuestions([...unCheckedQuestions, question])\r\n            setCheckedQuestions(checkedQuestions.filter((que) => que !== question))\r\n        } else {\r\n            setUnCheckedQuestions(unCheckedQuestions.filter((que) => que !== question))\r\n        }\r\n      }\r\n      const handleLessonChange = (event) => {\r\n        const name = event.target.value;\r\n        setExamDetails({...examDetails, lesson : name})\r\n      };\r\n    \r\n    return(\r\n        <div>\r\n            {loading ? <div style={{position: 'absolute', marginTop: '100px', marginRight: '500px', color: 'red'}}>جاري التحميل</div> : \r\n            <div style={{ zIndex: '-4' }}>\r\n                <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column' }}>\r\n                    <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '15%'}}>امتحانات التدريب</h3>\r\n                    <table style={{ borderSpacing: '0px 13px', width: '100%', borderCollapse: 'separate' }}>\r\n                        <th align='right'>اسم الامتحان</th>\r\n                        <th align='right'>ميعاد انتهاء الامتحان</th>\r\n                        <th align='center'>عملية</th>\r\n                        {exams.map((exam) => \r\n                            <tr>\r\n                                <Button component={Link} variant=\"text\" to=\"/\"><td  style={{ height: 'auto', overflow: 'hidden' }}>{exam.name}</td></Button>\r\n                                <td>{exam.end_at}</td>\r\n                                <td align=\"center\">\r\n                                    <IconButton onClick={() => {\r\n                                        setExamId(exam.id)\r\n                                        setDeleteAlert(true)\r\n                                    }} style={{ backgroundColor: '', color: '#FF5856', width: '40px', height: '40px' }} aria-label=\"delete\">\r\n                                        <DeleteIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                    <Dialog onClose={handleDialogClose} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\"  open={deleteAlert}>\r\n                                        <div style={{ backgroundColor: 'white', display: 'inline-flex', justifyContent: 'space-between', height: '80px', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '500px', padding: '10px 20px'  }}>\r\n                                            <h4>هل انت متأكد من أنك تريد حذف هذا الامتحان ؟</h4>\r\n                                            <div style={{ display: 'flex', justifyContent: 'space-between', width: '140px', padding: '5px' }}>\r\n                                                <Button variant=\"contained\" style={{ backgroundColor: '#ff5856', color: 'white' }} onClick={(e) => {\r\n                                                    axiosInstance.delete('exams/exam_details/' + examId).then((res) => {\r\n                                                        setDeleteAlert(false)\r\n                                                        setExams(exams.filter((ex) => ex.id !== examId))\r\n                                                    })\r\n                                                }}>نعم</Button>\r\n                                                <Button onClick={handleDialogClose} variant=\"contained\" style={{ backgroundColor: '#3f51b5', color: 'white' }}>لا</Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Dialog>\r\n                                    <IconButton style={{ backgroundColor: '', color: '#3f51b5', width: '40px', height: '40px' }} aria-label=\"delete\" onClick={() => {\r\n                                        setExamId(exam.id)\r\n                                        setEditPopup(true)\r\n                                        axiosInstance.get('exams/exam_details/' + exam.id).then((res) => {\r\n                                        setExamDetails({\r\n                                            name: res.data.name,\r\n                                            description: res.data.description,\r\n                                            color: res.data.color,\r\n                                            start_at: res.data.start_at,\r\n                                            end_at: res.data.end_at,\r\n                                            lesson: res.data.lesson\r\n                                        })\r\n                                        console.log(res.data.start_at)\r\n                                        {console.log(examDetails)}\r\n                                        setLimit({\r\n                                            hours: res.data.Limit.charAt(0) + res.data.Limit.charAt(1),\r\n                                            minutes: res.data.Limit.charAt(3) + res.data.Limit.charAt(4),\r\n                                            sec: '00'\r\n                                        })\r\n                                        axiosInstance.get('exams/uncheckQuestions/' + exam.id).then((res) => setNotAddedQuestions(res.data))\r\n                                        axiosInstance.get('lessons/teacher_lessons/' + courseId).then((res) => setLessons(res.data))\r\n                                        axiosInstance.get('exams/checkQuestions/' + exam.id).then((res) => setAddedQuestions(res.data))\r\n                                    }).then(() => setEditLoad(false))\r\n                                    }}>\r\n                                        <EditIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                    {editLoad ? '' : \r\n                                    <Dialog onClose={handleEditDialogClose} className={classes.dialog} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important', display: 'flex', flexDirection: 'column'}} aria-labelledby=\"customized-dialog-title\"  open={editPopup}>\r\n                                        <div style={{ backgroundColor: 'white', display: 'flex', justifyContent: 'center', height: 'auto', alignItems: 'center', flexDirection: 'column', width: '100%', overflow: 'scroll'  }}>\r\n                                            <TextField value={examDetails.name} onChange={(e) => setExamDetails({...examDetails, name: e.target.value})} className={classes.root} label=\"اسم الامتحان\"/>\r\n                                            <TextField value={examDetails.description} onChange={(e) => setExamDetails({...examDetails, description: e.target.value})} multiline className={classes.root} label=\"وصف الامتحان\"/>\r\n                                            <table style={{ borderSpacing: '0px 13px', width: '100%', height: '50px', borderCollapse: 'separate', padding: '40px'}}>\r\n                                                <th align=\"right\">محتوى السؤال</th>\r\n                                                <th align=\"right\">درجة السؤال</th>\r\n                                                <th>إضافة</th>\r\n                                                <section style={{ display: 'contents' }}>\r\n                                                {notAddedQuestions == 0 ? '' : notAddedQuestions.map((ques) => \r\n                                                <tr>\r\n                                                    <td>{ques.content}</td>\r\n                                                    <td align=\"center\">{ques.degree}</td>\r\n                                                    <td align=\"center\"><Checkbox onChange={(e) => handleCheckAddQuestionChange(e, ques.id)} /></td>\r\n                                                </tr>)}\r\n                                                {addedQuestions == 0 ? '' : addedQuestions.map((ques) => \r\n                                                <tr>\r\n                                                    <td>{ques.content}</td>\r\n                                                    <td align=\"center\">{ques.degree}</td>\r\n                                                    <td align=\"center\"><Checkbox defaultChecked onChange={(e) => handleCheckRemoveQuestionChange(e, ques.id)} /></td>\r\n                                                </tr>\r\n                                                )}\r\n                                                </section>\r\n                                            </table>\r\n                                            <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-around', margin: '10px 0 10px 0' }}>\r\n                                            <span>فترة الامتحان من : </span>\r\n                                            <MuiPickersUtilsProvider utils={DateMomentUtils}>\r\n                                                <DateTimePicker\r\n                                                    variant=\"dialog\"\r\n                                                    value={examDetails.start_at}\r\n                                                    onChange={(e) => setExamDetails({...examDetails, start_at: moment(e).format('YYYY-MM-DDTHH:mm+02:00')})}\r\n                                                    ampm={false}\r\n                                                    onError={console.log}\r\n                                                    disablePast\r\n                                                    format=\"yyyy/MM/dd HH:mm\"\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                            <span>الى : </span>\r\n                                            <MuiPickersUtilsProvider utils={DateMomentUtils}>\r\n                                                <DateTimePicker\r\n                                                    onChange={(e) => setExamDetails({...examDetails, end_at: moment(e).format('YYYY-MM-DDTHH:mm+02:00')})}\r\n                                                    value={examDetails.end_at}\r\n                                                    variant=\"dialog\"\r\n                                                    ampm={false}\r\n                                                    onError={console.log}\r\n                                                    disablePast\r\n                                                    format=\"yyyy/MM/dd HH:mm\"\r\n                                                />\r\n                                            </MuiPickersUtilsProvider>\r\n                                            </div>\r\n                                            <div style={{ display: 'flex', width: '60%', alignItems: 'center', justifyContent: 'space-around', margin: '10px 0 10px 0'  }}>\r\n                                                <span>زمن الامتحان : </span>\r\n                                                <span>ساعة : </span>\r\n                                                <input type=\"number\" value={limit.hours} className=\"customInput\" style={{ width: '50px', padding: '4px' }} placeholder=\"ساعة\" onChange={(e) => setLimit({...limit, hours: e.target.value})} />\r\n                                                <span>دقيقة : </span>\r\n                                                <input type=\"number\" value={limit.minutes} className=\"customInput\" style={{ width: '50px', padding: '4px' }} placeholder=\"دقيقة\" onChange={(e) => setLimit({...limit, minutes: e.target.value})} />\r\n                                        </div>\r\n                                    {console.log('ss', {...examDetails, Limit: `${limit.hours}:${limit.minutes}:${limit.sec}`})}\r\n\r\n                                        <FormControl style={{ width: '150px', marginBottom: '10px' }}>\r\n                                                        <Select\r\n                                                        onChange={(e) => setExamDetails({...examDetails, color: e.target.value})}\r\n                                                        value={examDetails.color}\r\n                                                        labelId=\"demo-simple-select-label\"\r\n                                                        id=\"demo-simple-select\"\r\n                                                        displayEmpty\r\n                                                        >\r\n                                                        \r\n                                                        <MenuItem value=\"\"><span style={{ overflow: 'hidden' }}>اختر لون الامتحان</span></MenuItem>\r\n                                                        <MenuItem style={{ backgroundColor: '#ff5856', }}  value=\"#ff5856\"><span style={{ overflow: 'hidden', backgroundColor: '#ff5856', width: '100%', textAlign: 'center', color: 'white' }}>الاحمر</span></MenuItem>\r\n                                                        <MenuItem style={{ backgroundColor: '#3f51b5', }}  value=\"#3f51b5\"><span style={{ overflow: 'hidden', backgroundColor: '#3f51b5', width: '100%', textAlign: 'center', color: 'white' }}>الازرق</span></MenuItem>\r\n                                                        <MenuItem style={{ backgroundColor: 'green', }} value=\"green\"><span style={{ overflow: 'hidden', width: '100%', textAlign: 'center', color: 'white' }}>الاخضر</span></MenuItem>\r\n                                                    </Select>\r\n                                        </FormControl>\r\n                                        <FormControl style={{ width: '450px', margin: '10px 0' }}>\r\n                                                        <Select\r\n                                                        labelId=\"demo-simple-select-label\"\r\n                                                        id=\"demo-simple-select\"\r\n                                                        value={examDetails.lesson ? examDetails.lesson : ''}\r\n                                                        displayEmpty\r\n                                                        onChange={handleLessonChange}\r\n                                                        >\r\n                                                        \r\n                                                        <MenuItem value=\"\"><span style={{ overflow: 'hidden' }}> لا يمكن خوض الامتحان الا بعد مشهادة هذا الدرس (اختياري)</span></MenuItem>\r\n                                                        {courseLessons.map((les) => <MenuItem value={les.id}><span style={{ overflow: 'hidden' }}>{les.name}</span></MenuItem>)}\r\n                                                    </Select>\r\n                                        </FormControl>\r\n                                        {console.log({\r\n                                        id: examId,\r\n                                        name: examDetails.name,\r\n                                        description: examDetails.description,\r\n                                        start_at: examDetails.start_at,\r\n                                        end_at: examDetails.end_at,\r\n                                        color: examDetails.color,\r\n                                        Limit: `${limit.hours}:${limit.minutes}`,\r\n                                        lesson: lesson\r\n                                    })}\r\n                                        </div>\r\n                                        <Button style={{ margin: '10px 10px' }} variant=\"contained\" color=\"primary\" onClick={() => {\r\n                                                axiosInstance.post('exams/addQuestions/' + examId, {\r\n                                                    check: checkedQuestions,\r\n                                                    uncheck: unCheckedQuestions\r\n                                                })\r\n                                                \r\n                                                axiosInstance.put('exams/exam_details/' + examId, {\r\n                                                    course: courseId,\r\n                                                    name: examDetails.name,\r\n                                                    description: examDetails.description,\r\n                                                    start_at: examDetails.start_at,\r\n                                                    end_at: examDetails.end_at,\r\n                                                    color: examDetails.color,\r\n                                                    Limit: `${limit.hours}:${limit.minutes}:${limit.sec}`,\r\n                                                    lesson: examDetails.lesson\r\n                                                } ).then((res) => setEditPopup(false))\r\n                                            }}>حفظ التغييرات</Button>\r\n                                    </Dialog>}\r\n                                    \r\n                                    <IconButton style={{ backgroundColor: '', color: '#3f51b5', width: '50px', height: '50px' }} aria-label=\"delete\" onClick={() => {\r\n                                        setGroupPopup(true)\r\n                                        axiosInstance.get('exams/uncheckGroupsExam/' + exam.id).then((res) => setNotAddedGroups(res.data))\r\n                                        axiosInstance.get('exams/checkGroupsExam/' + exam.id).then((res) => setAddedGroups(res.data))\r\n                                        setExamId(exam.id)\r\n                                    }}>\r\n                                        <GroupAddIcon fontSize=\"medium\" />\r\n                                    </IconButton>\r\n                                    <Dialog onClose={handleGroupsDialogClose} className={classes.dialog} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\"  open={groupPopUp}>\r\n                                        <div style={{ backgroundColor: 'white', display: 'flex', justifyContent: 'center', height: 'auto', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '100%', padding: '10px 0'  }}>\r\n                                            <span style={{ fontSize: '18px', fontWeight: 'bold' }}>المجموعات المضاف اليها الامتحان</span>\r\n                                            <ul>\r\n                                                {notAddedGroups.length == 0 ? '' : notAddedGroups.map((group) => \r\n                                                <li><Checkbox onChange={(e) => handleCheckAddChange(e, group.id)} />{group.name}</li>\r\n                                                )}\r\n                                                {addedGroups.length == 0 ? '' : addedGroups.map((group) => \r\n                                                <li><Checkbox defaultChecked onChange={(e) => handleCheckRemoveChange(e, group.id)}/>{group.name}</li>\r\n                                                )}\r\n                                            </ul>\r\n                                            <Button style={{ margin: '10px 0' }} variant=\"contained\" color=\"primary\" onClick={() => {\r\n                                                axiosInstance.post('exams/addQuestions/' )\r\n                                                \r\n                                                axiosInstance.post('exams/addExamGroups/' + examId, {\r\n                                                    check: checkedGroups,\r\n                                                    uncheck: unCheckedGroups\r\n                                                }).then((res) => setGroupPopup(false))\r\n                                            }}>حفظ التغييرات</Button>\r\n                                            \r\n                                        </div>\r\n                                    </Dialog>\r\n                                    {console.log('ch', checkedQuestions)}\r\n                                    {console.log('un', unCheckedQuestions)}\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </table>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseExamsPage; ","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\EditExam.js",["253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303"],"import React, { useState, useEffect } from 'react';\r\nimport TeacherHeader from './Header.js';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { DateTimePicker, KeyboardDateTimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateMomentUtils from '@date-io/moment';\r\n\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport * as moment  from 'moment';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport PopupState, { bindTrigger, bindPopover } from 'material-ui-popup-state';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\n  import {\r\n      Accordion,\r\n      AccordionDetails,\r\n      AccordionSummary,\r\n    Typography,\r\n  } from \"@material-ui/core\";\r\nimport SidePanel from './SidePanel.js';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { useParams } from 'react-router-dom';\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\nimport { Container, Paper, Box } from '@material-ui/core';\r\nimport axiosInstance from \"../../axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport {\r\n    withStyles,\r\n    MuiThemeProvider,\r\n    createMuiTheme,\r\n  } from \"@material-ui/core\";\r\nimport axios from 'axios';\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiFormLabel-root\": {\r\n            color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n            fontFamily: \"Cairo\",\r\n            left: 'auto',\r\n            overflow: 'hidden',\r\n            height: '20px',\r\n            margin: '0px 12px'\r\n          },\r\n        \"& .MuiInputBase-input\": {\r\n            fontFamily: 'Cairo'\r\n        },\r\n        \"& .MuiFormControl-root\": {\r\n            flexDirection: 'row !impoertant'\r\n        },\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst EditExamPage = () => {\r\n    const [courseId, setCourseId] = useState();\r\n    const [examName, setExamName] = useState('');\r\n    const [examColor, setExamColor] = useState('');\r\n    const [examDescription, setExamDescription] = useState('');\r\n    const [examHours, setExamHours] = useState();\r\n    const [examMinutes, setExamMinutes] = useState();\r\n    const [selectedQuestions, setSelectedQuestions] = useState();\r\n    const [teacherCourses, setTeacherCourses] = useState([]);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [start_at, setStartAt] = useState(new Date());\r\n    const [end_at, setEndAt] = useState(new Date());\r\n\r\n    let { examId } = useParams()\r\n\r\n    const columns = [\r\n        {\r\n            field: \"id\",\r\n            headerName: \"رقم الاجابة\",\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"content\",\r\n            headerName: \"محتوى الاجابة\",\r\n            flex: 5,\r\n        },\r\n        {\r\n            field: \"degree\",\r\n            headerName: \"درجة السؤال\",\r\n            flex: 1,\r\n        }\r\n    ]\r\n\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('exams/exam_details/' + examId).then((res) => {\r\n            console.log(res.data)\r\n            setTeacherCourses(res.data)\r\n        })\r\n    }, [])\r\n\r\n\r\n      const classes = useStyles();\r\n\r\n    const StyledFormControlLabel = withStyles({\r\n        root: {\r\n          \"& label\": {\r\n            fontFamily: \"Cairo\",\r\n          }\r\n        }\r\n      })(FormControlLabel);\r\n      const StyledTextField = withStyles({\r\n        root: {\r\n          \"& label\": {\r\n            left: \"auto\",\r\n            fontFamily: \"Cairo\",\r\n            height: \"20px\",\r\n            overflow: 'hidden'\r\n          },\r\n          \"& legend\": {\r\n            textAlign: \"right\",\r\n          }\r\n        }\r\n      })(TextField);\r\n\r\n    return(\r\n        <div>\r\n            <div style={{ zIndex: '-4' }}>\r\n                <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column' }}>\r\n                        <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '15%'}}>إضافة امتحان</h3>\r\n                    <div style={{ display: 'flex', width: '42%', justifyContent: 'space-between' }}>\r\n                        <TextField style={{ flexDirection: 'row' }} className={classes.root} onChange={(e) => setExamName(e.target.value)} value={examName} label=\"اسم الامتحان\"/>\r\n                        <TextField value={examDescription} className={classes.root} onChange={(e) => setExamDescription(e.target.value)} multiline style={{ width: '270px' }} label=\"وصف الامتحان\"/>\r\n                    </div>\r\n                    <h3 style={{borderBottom: '2px solid #ccc', margin: '20px 0', width: '20%'}}>إضافة اسئلة الامتحان</h3>\r\n                    <div style={{ height: 450, width: '100%', margin: 'auto', overflow: 'hidden' }}>\r\n                        <DataGrid\r\n                            \r\n                            components={{\r\n                                NoRowsOverlay: () => {\r\n                                    return <span style={{ margin: 'auto', overflow: 'hidden'}}>لا يوجد اسئلة لهذه الدورة التدريبية  </span>\r\n                                }\r\n                            }}\r\n                            onSelectionModelChange={(e) => {\r\n                                const selectedIDs = new Set(e.selectionModel);\r\n                                console.log(selectedIDs);\r\n                                const selectedRowData = questions.filter((row) =>\r\n                                    selectedIDs.has(row.id)\r\n                                );\r\n                                console.log(\"select rowData:\", selectedRowData);\r\n                                selectedRowData.map((row) => setSelectedQuestions([{question: row.id}]));\r\n                            }}autopageSize scrollbarSize={20} checkboxSelection rows={questions} columns={columns}\r\n                            \r\n                            />\r\n                    </div>\r\n                    <h3 style={{borderBottom: '2px solid #ccc', margin: '20px 0', width: '20%'}}>اعدادات الامتحان</h3>\r\n                    \r\n                    <div style={{ width: '50%', display: 'flex', alignItems: 'center', justifyContent: 'space-between', margin: '0 0 10px 0' }}>\r\n                      <span>فترة الامتحان من : </span>\r\n                      <MuiPickersUtilsProvider utils={DateMomentUtils}>\r\n                          <DateTimePicker\r\n                              variant=\"dialog\"\r\n                              ampm={false}\r\n                              value={start_at}\r\n                              onChange={(e) => setStartAt(moment(e).format('YYYY-MM-DDTHH:mm+02:00'))}\r\n                              onError={console.log}\r\n                              disablePast\r\n                              format=\"yyyy/MM/dd HH:mm\"\r\n                          />\r\n                      </MuiPickersUtilsProvider>\r\n                      <span>الى : </span>\r\n                      <MuiPickersUtilsProvider utils={DateMomentUtils}>\r\n                          <DateTimePicker\r\n                              variant=\"dialog\"\r\n                              ampm={false}\r\n                              value={end_at}\r\n                              onChange={(e) => setEndAt(moment(e).format('YYYY-MM-DDTHH:mm+02:00'))}\r\n                              onError={console.log}\r\n                              disablePast\r\n                              format=\"yyyy/MM/dd HH:mm\"\r\n                          />\r\n                          {console.log(start_at)}\r\n                      </MuiPickersUtilsProvider>\r\n                    </div>\r\n                    <div style={{ display: 'flex', width: '30%', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                            <span>زمن الامتحان : </span>\r\n                            <span>ساعة : </span>\r\n                            <input type=\"number\" value={examHours} className=\"customInput\" style={{ width: '50px', padding: '4px' }} placeholder=\"ساعة\" onChange={(e) => setExamHours(parseInt(e.target.value))} />\r\n                            <span>دقيقة : </span>\r\n                            <input type=\"number\" value={examMinutes} className=\"customInput\" style={{ width: '50px', padding: '4px' }} placeholder=\"دقيقة\" onChange={(e) => setExamMinutes(parseInt(e.target.value))} />\r\n                    </div>\r\n                    <FormControl style={{ width: '150px' }}>\r\n                                    <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={examColor}\r\n                                    displayEmpty\r\n                                    onChange={(e) => setExamColor(e.target.value)}\r\n                                    >\r\n                                    \r\n                                    <MenuItem value=\"\"><span style={{ overflow: 'hidden' }}>اختر لون الامتحان</span></MenuItem>\r\n                                    <MenuItem style={{ backgroundColor: '#ff5856', }}  value=\"#ff5856\"><span style={{ overflow: 'hidden', backgroundColor: '#ff5856', width: '100%', textAlign: 'center', color: 'white' }}>الاحمر</span></MenuItem>\r\n                                    <MenuItem style={{ backgroundColor: '#3f51b5', }}  value=\"#3f51b5\"><span style={{ overflow: 'hidden', backgroundColor: '#3f51b5', width: '100%', textAlign: 'center', color: 'white' }}>الازرق</span></MenuItem>\r\n                                    <MenuItem style={{ backgroundColor: 'green', }} value=\"green\"><span style={{ overflow: 'hidden', width: '100%', textAlign: 'center', color: 'white' }}>الاخضر</span></MenuItem>\r\n                                </Select>\r\n                    </FormControl>\r\n                    <div style={{ display: 'flex', alignItems: 'center', margin: '10px 0', justifyContent: 'flex-end' }}> \r\n                            <Button color=\"primary\" variant=\"contained\" onClick={(e) => {\r\n                              axiosInstance\r\n                                          .post('exams/add-exam', {\r\n                                            name: examName,\r\n                                            course: courseId,\r\n                                            start_at: start_at,\r\n                                            end_at: end_at,\r\n                                            Limit: `${examHours}:${examMinutes}:00`,\r\n                                            description: examDescription,\r\n                                            color: examColor,\r\n                                            question: selectedQuestions\r\n\r\n                                          }).then((res) => console.log(res))\r\n                            }}>حفظ الامتحان</Button>\r\n                            {console.log('q',selectedQuestions)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditExamPage;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\CourseLessons.js",["304","305","306","307","308","309","310","311","312"],"import React, { useState, useEffect } from 'react';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    BrowserRouter as \r\n    useHistory,\r\n  } from \"react-router-dom\";\r\n  import {\r\n    Checkbox,\r\n  } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useParams } from 'react-router-dom';\r\nimport axiosInstance from \"../../axios\";\r\nimport '../css/teacher.css';\r\n\r\n\r\nconst CourseLessonsPage = () => {\r\n    const [students, setStudents] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [editLoad, setEditLoad] = useState(true);\r\n    const [lessons, setLessons] = useState();\r\n    const [lessonDetails, setLessonDetails] = useState();\r\n    const [lessonId, setLessonId] = useState();\r\n    const [notAddedGroups, setNotAddedGroups] = useState([])\r\n    const [addedGroups, setAddedGroups] = useState([])\r\n    const [checkedGroups, setCheckedGroups] = useState([])\r\n    const [unCheckedGroups, setUnCheckedGroups] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [deleteAlert, setDeleteAlert] = React.useState(false);\r\n    const [editPopup, setEditPopup] = React.useState(false);\r\n    const [groupPopUp, setGroupPopup] = React.useState(false);\r\n\r\n    const lowerCaseQuery = query.toLowerCase();\r\n\r\n    let { courseId } = useParams()\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            \"& .MuiFormLabel-root\": {\r\n                color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n                fontFamily: \"Cairo\",\r\n                left: 'auto',\r\n                overflow: 'hidden',\r\n                height: '20px',\r\n                margin: '0px 12px'\r\n              },\r\n            \"& .MuiInputBase-input\": {\r\n                fontFamily: 'Cairo'\r\n            },\r\n            \"& .MuiFormControl-root\": {\r\n                flexDirection: 'row !impoertant'\r\n            },\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n          },\r\n        },\r\n        dialog: {\r\n            \"& .MuiDialog-paperWidthSm\": {\r\n                width: '700px'\r\n            }\r\n        },\r\n        input: {\r\n          display: 'none',\r\n        },\r\n      }));\r\n\r\n      const classes = useStyles();\r\n      const hist = useHistory()\r\n\r\n\r\n    useEffect(() => {\r\n        axiosInstance\r\n                    .get('lessons/teacher_lessons/' + courseId).then((res) => {\r\n                        console.log(res)\r\n                        setLessons(res.data)\r\n                    }).then(() => setLoading(false))\r\n    }, [])      \r\n\r\n    const handleDialogClose = () => {\r\n        setDeleteAlert(false)\r\n    }\r\n    const handleEditDialogClose = () => {\r\n        setEditPopup(false)\r\n    }\r\n    const handleGroupsDialogClose = () => {\r\n        setGroupPopup(false)\r\n    }\r\n    function handleCheckAddChange(e, group){\r\n        if(e.target.checked){\r\n          setCheckedGroups([...checkedGroups, group])\r\n          setUnCheckedGroups(unCheckedGroups.filter((gr) => gr !== group))\r\n        } else {\r\n          setCheckedGroups(checkedGroups.filter((gr) => gr !== group))\r\n        }\r\n      }\r\n      function handleCheckRemoveChange(e, group){\r\n        if(!e.target.checked){\r\n            setUnCheckedGroups([...unCheckedGroups, group])\r\n            setCheckedGroups(checkedGroups.filter((gr) => gr !== group))\r\n        } else {\r\n            setUnCheckedGroups(unCheckedGroups.filter((gr) => gr !== group))\r\n        }\r\n      }\r\n    return(\r\n        <div>\r\n            {loading ? <div style={{position: 'absolute', marginTop: '100px', marginRight: '500px', color: 'red'}}>جاري التحميل</div> : \r\n            <div style={{ zIndex: '-4' }}>\r\n                <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column' }}>\r\n                    <div style={{ display: 'flex', alignItems:'center', justifyContent: 'space-between' }}>\r\n                        <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '15%'}}>دروس التدريب</h3>\r\n                        <TextField className={classes.root} style={{ marginLeft: '17%' }} label={<span>بحث ..</span>}  onChange={(e) => {\r\n                                        setQuery(e.target.value)}} />    \r\n                    </div>\r\n                    {lessons.length == 0 ? <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>لا يوجد دروس</div> : \r\n                    <>\r\n                        <table style={{ borderSpacing: '0px 13px', width: '100%', borderCollapse: 'separate' }}>\r\n                        <th align='right'>اسم الدرس</th>\r\n                        <th align='right'>وصف الدرس</th>\r\n                        <th align='center'>عملية</th>\r\n                        {lessons.filter((row) => row.name.toLowerCase().includes(lowerCaseQuery)).map((lesson) => \r\n                            <tr>\r\n                                <td>{lesson.name}</td>\r\n                                <td>{lesson.description}</td>\r\n                                <td align=\"center\">\r\n                                    <IconButton onClick={() => {\r\n                                        setLessonId(lesson.id)\r\n                                        setDeleteAlert(true)\r\n                                    }} style={{ backgroundColor: '', color: '#FF5856', width: '40px', height: '40px' }} aria-label=\"delete\">\r\n                                        <DeleteIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                    <Dialog onClose={handleDialogClose} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\"  open={deleteAlert}>\r\n                                        <div style={{ backgroundColor: 'white', display: 'inline-flex', justifyContent: 'space-between', height: '80px', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '500px', padding: '10px 20px'  }}>\r\n                                            <h4>هل انت متأكد من أنك تريد حذف هذا الدرس ؟</h4>\r\n                                            <div style={{ display: 'flex', justifyContent: 'space-between', width: '140px', padding: '5px' }}>\r\n                                                <Button variant=\"contained\" style={{ backgroundColor: '#ff5856', color: 'white' }} onClick={(e) => {\r\n                                                    axiosInstance.delete('lessons/UpdateDeleteLesson/' + lessonId).then((res) => {\r\n                                                        setDeleteAlert(false)\r\n                                                        setLessons(lessons.filter((les) => les.id !== lessonId))\r\n                                                    })\r\n                                                }}>نعم</Button>\r\n                                                <Button onClick={handleDialogClose} variant=\"contained\" style={{ backgroundColor: '#3f51b5', color: 'white' }}>لا</Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Dialog>\r\n                                    <IconButton style={{ backgroundColor: '', color: '#3f51b5', width: '40px', height: '40px' }} aria-label=\"delete\" onClick={() => {\r\n                                        setLessonId(lesson.id)\r\n                                        setEditPopup(true)\r\n                                        axiosInstance.get('lessons/UpdateDeleteLesson/' + lesson.id).then((res) => {setLessonDetails({\r\n                                            name: res.data.name,\r\n                                            description: res.data.description\r\n                                        })\r\n                                        console.log('data',res.data)\r\n                                    }).then(() => setEditLoad(false))\r\n                                    }}>\r\n                                        <EditIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                    {editLoad ? '' : \r\n                                    <Dialog onClose={handleEditDialogClose} className={classes.dialog} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\"  open={editPopup}>\r\n                                        <div style={{ backgroundColor: 'white', display: 'flex', justifyContent: 'center', height: 'auto', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '100%', padding: '10px 0'  }}>\r\n                                            <TextField style={{ flexDirection: 'row' }} className={classes.root} onChange={(e) => setLessonDetails({...lessonDetails, name : e.target.value})} value={lessonDetails.name} label=\"اسم الدرس\"/>\r\n                                            <TextField style={{ flexDirection: 'row' }} className={classes.root} onChange={(e) => setLessonDetails({...lessonDetails, description : e.target.value})} value={lessonDetails.description} label=\"وصف الدرس\"/>\r\n                                            <Button style={{ margin: '10px 0' }} variant=\"contained\" color=\"primary\" onClick={() => {\r\n                                                \r\n                                                axiosInstance.put('lessons/UpdateDeleteLesson/' + lesson.id, {\r\n                                                    name: lessonDetails.name,\r\n                                                    description: lessonDetails.description\r\n                                                }).then((res) => setLessonDetails(lessonDetails))\r\n                                            }}>حفظ التغييرات</Button>\r\n                                        </div>\r\n                                    {console.log(lessonDetails)}\r\n                                    </Dialog>}\r\n                                    <IconButton style={{ backgroundColor: '', color: '#3f51b5', width: '50px', height: '50px' }} aria-label=\"delete\" onClick={() => {\r\n                                        setGroupPopup(true)\r\n                                        axiosInstance.get('lessons/UncheckedGroups/' + lesson.id).then((res) => setNotAddedGroups(res.data))\r\n                                        axiosInstance.get('lessons/checkedGroups/' + lesson.id).then((res) => setAddedGroups(res.data))\r\n                                    }}>\r\n                                        <GroupAddIcon fontSize=\"medium\" />\r\n                                    </IconButton>\r\n                                    <Dialog onClose={handleGroupsDialogClose} className={classes.dialog} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\"  open={groupPopUp}>\r\n                                        <div style={{ backgroundColor: 'white', display: 'flex', justifyContent: 'center', height: 'auto', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '100%', padding: '10px 0'  }}>\r\n                                            <span style={{ fontSize: '18px', fontWeight: 'bold' }}>المجموعات المضاف اليها الدرس</span>\r\n                                            <ul>\r\n                                                {notAddedGroups.length == 0 ? '' : notAddedGroups.map((group) => \r\n                                                <li><Checkbox onChange={(e) => handleCheckAddChange(e, group.id)} />{group.name}</li>\r\n                                                )}\r\n                                                {addedGroups.length == 0 ? '' : addedGroups.map((group) => \r\n                                                <li><Checkbox defaultChecked onChange={(e) => handleCheckRemoveChange(e, group.id)}/>{group.name}</li>\r\n                                                )}\r\n                                            </ul>\r\n                                            <Button style={{ margin: '10px 0' }} variant=\"contained\" color=\"primary\" onClick={() => {\r\n                                                \r\n                                                axiosInstance.post('lessons/addLessonGroups/' + lesson.id, {\r\n                                                    check: checkedGroups,\r\n                                                    uncheck: unCheckedGroups\r\n                                                }).then((res) => setGroupPopup(false))\r\n                                            }}>حفظ التغييرات</Button>\r\n                                        </div>\r\n                                    </Dialog>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </table>\r\n                    </>\r\n                    }\r\n                    \r\n                    {console.log('un', unCheckedGroups)}\r\n                    {console.log('ch', checkedGroups)}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CourseLessonsPage; ","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\AddPost.js",["313","314","315"],"import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axiosInstance from \"../../axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    withStyles,\r\n  } from \"@material-ui/core\";\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiFormLabel-root\": {\r\n            color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n            fontFamily: \"Cairo\",\r\n            left: 'auto',\r\n            overflow: 'hidden',\r\n            height: '20px',\r\n            margin: '0px 12px'\r\n          },\r\n        \"& .MuiInputBase-input\": {\r\n            fontFamily: 'Cairo'\r\n        },\r\n        \"& .MuiFormControl-root\": {\r\n            flexDirection: 'row !impoertant'\r\n        },\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst AddPostPage = () => {\r\n    const [courseId, setCourseId] = useState();\r\n    const [teacherCourses, setTeacherCourses] = useState([]);\r\n    const [postContent, setPostContent] = useState('')\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            \"& .MuiFormLabel-root\": {\r\n                color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n                fontFamily: \"Cairo\",\r\n                left: 'auto',\r\n                overflow: 'hidden',\r\n                height: '20px',\r\n                margin: '0px 12px'\r\n              },\r\n            \"& .MuiInputBase-input\": {\r\n                fontFamily: 'Cairo'\r\n            },\r\n            \"& .MuiFormControl-root\": {\r\n                flexDirection: 'row !important'\r\n            },\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n          },\r\n        },\r\n        input: {\r\n          display: 'none',\r\n        },\r\n        dialog: {\r\n          \"& .MuiDialog-paperWidthSm\": {\r\n              width: '700px'\r\n          }\r\n      },\r\n      }));\r\n\r\n\r\n      const handleDialogClose = () => {\r\n        setPopup(false)\r\n    }\r\n    const handlePopupOpen = () => {\r\n      setPopup(true)\r\n      setTimeout(() => {\r\n          setPopup(false)\r\n        }, 3000);\r\n  }\r\n\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('courses/teacher-courses').then((res) => {\r\n            console.log(res.data)\r\n            setTeacherCourses(res.data)\r\n        })\r\n    }, [])\r\n\r\n\r\n      const classes = useStyles();\r\n\r\n    const StyledFormControlLabel = withStyles({\r\n        root: {\r\n          \"& label\": {\r\n            fontFamily: \"Cairo\",\r\n          }\r\n        }\r\n      })(FormControlLabel);\r\n      const StyledTextField = withStyles({\r\n        root: {\r\n          \"& label\": {\r\n            left: \"auto\",\r\n            fontFamily: \"Cairo\",\r\n            height: \"20px\",\r\n            overflow: 'hidden'\r\n          },\r\n          \"& legend\": {\r\n            textAlign: \"right\",\r\n          }\r\n        }\r\n      })(TextField);\r\n\r\n    return(\r\n        <div>\r\n            <div style={{ zIndex: '-4' }}>\r\n                <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column' }}>\r\n                    <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '15%'}}>إضافة منشور</h3>\r\n                    <TextField variant=\"outlined\" multiline rows={15} placeholder=\"...\" value={postContent} onChange={(e) => setPostContent(e.target.value)} />\r\n                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                        <Button variant=\"contained\" style={{ backgroundColor: '#ff5658', color: 'white' }} onClick={(e) => {\r\n                          axiosInstance.post('posts/AddPost', {\r\n                            course: courseId,\r\n                            content: postContent\r\n                          }).then((res) => handlePopupOpen())\r\n                        }}>نشر</Button>\r\n                        <Dialog onClose={handleDialogClose} className={classes.dialog} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\"  open={popup}>\r\n                              <div style={{ backgroundColor: 'white', display: 'flex', justifyContent: 'center', height: 'auto', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '100%', padding: '10px 0'  }}>\r\n                                    <CheckCircleIcon style={{ color: 'green', fontSize: '36px' }} />\r\n                                    <span style={{ fontSize: '18px' }}>تم اضافة المنشور بنجاح</span>\r\n                              </div>\r\n                          </Dialog>\r\n                        <FormControl style={{ width: '300px' }}>\r\n                                    <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={teacherCourses.name}\r\n                                    displayEmpty\r\n                                    onChange={(e) => {\r\n                                        setCourseId(e.target.value)\r\n                                      }\r\n                                    }\r\n                                    >\r\n                                    \r\n                                    <MenuItem value=\"\"><span style={{ overflow: 'hidden' }}>اختر الصف المراد اضافة اسئلة اليه</span></MenuItem>\r\n\r\n                                    {teacherCourses.map((e) => <MenuItem value={e.id}><span style={{ overflow: 'hidden' }}>{e.name}</span></MenuItem>)}\r\n                                </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPostPage;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Questions.js",["316","317","318","319","320","321"],"import React, { useState, useEffect } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {\r\n    BrowserRouter as \r\n    Link,\r\n  } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport axiosInstance from \"../../axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport NoLogs from '../../svg/NoLogs.svg'\r\nimport {\r\n    withStyles,\r\n  } from \"@material-ui/core\";\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiFormLabel-root\": {\r\n            color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n            fontFamily: \"Cairo\",\r\n            left: 'auto',\r\n            overflow: 'hidden',\r\n            height: '20px',\r\n            margin: '0px 12px'\r\n          },\r\n        \"& .MuiInputBase-input\": {\r\n            fontFamily: 'Cairo'\r\n        },\r\n        \"& .MuiFormControl-root\": {\r\n            flexDirection: 'row !important'\r\n        },\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    dialog: {\r\n        \"& .MuiDialog-paperWidthSm\": {\r\n            width: '700px'\r\n        }\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst QuestionsPage = () => {\r\n    const [courseId, setCourseId] = useState();\r\n    const [questionDetails, setQuestionDetails] = useState();\r\n    const [questionAnswers, setQuestionAnswers] = useState();\r\n    const [questionId, setQuestionId] = useState();\r\n    const [isMultiple, setIsMultiple] = useState()\r\n    const [isTrueFalse, setIsTrueFalse] = useState()\r\n    const [editPopup, setEditPopup] = React.useState(false);\r\n    const [editLoad, setEditLoad] = useState(true);\r\n    const [answer, setAnswer] = useState({});\r\n    const [query, setQuery] = useState('');\r\n    const [deleteAlert, setDeleteAlert] = React.useState(false);\r\n    const [teacherCourses, setTeacherCourses] = useState([]);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [courseSelected, setCourseSelected] = useState('');\r\n\r\n    const lowerCaseQuery = query.toLowerCase();\r\n\r\n    const handleDialogClose = () => {\r\n        setDeleteAlert(false)\r\n    }\r\n    const handleEditDialogClose = () => {\r\n        setEditPopup(false)\r\n    }\r\n    const handleCheckboxChange = (e, index) => {\r\n        if(e.target.checked){\r\n            questionAnswers[index].is_correct = true\r\n        } else{\r\n            questionAnswers[index].is_correct = false\r\n        }\r\n        console.log('hh',questionAnswers)\r\n    }\r\n    const handleAddAnswer = () => {\r\n        setQuestionAnswers([...questionAnswers,answer])\r\n    }\r\n    useEffect(() => {\r\n        axiosInstance.get('courses/teacher-courses').then((res) => {\r\n            console.log(res.data)\r\n            setTeacherCourses(res.data)\r\n        })\r\n    }, [])\r\n\r\n\r\n      const classes = useStyles();\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div style={{ zIndex: '-4' }}>\r\n                <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column' }}>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems:'center', }}>\r\n                        <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '15%'}}>كل الاسئلة</h3>\r\n                        <TextField className={classes.root} style={{ marginLeft: '17%', display: questions.length > 0 ? 'block' : 'none' }} label={<span>بحث ..</span>}  onChange={(e) => {\r\n                                        setQuery(e.target.value)}} />\r\n                        <FormControl style={{ width: '300px' }}>\r\n                                    <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={courseSelected}\r\n                                    displayEmpty\r\n                                    onChange={(e) => {\r\n                                      axiosInstance.get('exams/questions/' + e.target.value).then((res) => {\r\n                                        setQuestions(res.data)\r\n                                      }).then(() => {\r\n                                        setCourseId(e.target.value)\r\n                                      })\r\n                                      setCourseSelected(e.target.value)\r\n                                    }}\r\n                                    >\r\n                                    <MenuItem value=\"\"><span style={{ overflow: 'hidden' }}>اختر التدريب المراد اضافة اسئلة اليه</span></MenuItem>\r\n                                    {teacherCourses.map((e) => <MenuItem value={e.id}><span style={{ overflow: 'hidden' }}>{e.name}</span></MenuItem>)}\r\n                                </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <table style={{ borderSpacing: '0px 13px', width: '100%', borderCollapse: 'separate' }}>\r\n                            <th align=\"right\">محتوى السؤال</th>\r\n                            <th align=\"center\">درجة السؤال</th>\r\n                            <th>عملية</th>\r\n                            {questions.length == 0 ? <tr align=\"center\" style={{ margin: 'auto' }}><td colSpan={3}><img src={NoLogs} style={{ width: '30%', marginTop: '10px', height: 'auto' }} /><td align=\"center\" style={{ fontWeight: 'bold' }}>لا يوجد اسئلة</td></td></tr> :\r\n                            questions.length == 0 ? <tr>لا يوجد اسئلة</tr> : questions.filter((row) => row.content.toLowerCase().includes(lowerCaseQuery)).map((question) => \r\n                            <tr>\r\n                                <td style={{ width: '50%', margin: '10px' }}>{question.content}</td>\r\n                                <td align=\"center\">{question.degree}</td>\r\n                                <td align=\"center\">\r\n                                <IconButton onClick={() => {\r\n                                        setQuestionId(question.id)\r\n                                        setDeleteAlert(true)\r\n                                    }} style={{ backgroundColor: '', color: '#FF5856', width: '40px', height: '40px' }} aria-label=\"delete\">\r\n                                        <DeleteIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                    <Dialog onClose={handleDialogClose} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\"  open={deleteAlert}>\r\n                                        <div style={{ backgroundColor: 'white', display: 'inline-flex', justifyContent: 'space-between', height: '80px', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '500px', padding: '10px 20px'  }}>\r\n                                            <h4>هل انت متأكد من أنك تريد حذف هذا السؤال ؟</h4>\r\n                                            <div style={{ display: 'flex', justifyContent: 'space-between', width: '140px', padding: '5px' }}>\r\n                                                <Button variant=\"contained\" style={{ backgroundColor: '#ff5856', color: 'white' }} onClick={(e) => {\r\n                                                    axiosInstance.delete('questions/question_edit/' + questionId).then((res) => {\r\n                                                        setDeleteAlert(false)\r\n                                                        setQuestions(questions.filter((ques) => ques.id !== questionId))\r\n                                                    })\r\n                                                }}>نعم</Button>\r\n                                                <Button onClick={handleDialogClose} variant=\"contained\" style={{ backgroundColor: '#3f51b5', color: 'white' }}>لا</Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Dialog>\r\n                                    <IconButton style={{ backgroundColor: '', color: '#3f51b5', width: '40px', height: '40px' }} aria-label=\"delete\" onClick={() => {\r\n                                        setQuestionId(question.id)\r\n                                        setEditPopup(true)\r\n                                        axiosInstance.get('questions/question_edit/' + question.id).then((res) => {\r\n                                            setQuestionDetails({\r\n                                                content: res.data.content,\r\n                                                degree: res.data.degree,\r\n                                            })\r\n                                            console.log(res.data)\r\n                                            setQuestionAnswers(res.data.answer)\r\n                                            setIsMultiple(res.data.isMultiple)\r\n                                            setIsTrueFalse(res.data.isTrueFalse)\r\n\r\n                                        }).then(() => {\r\n                                            setEditLoad(false)\r\n                                        })\r\n                                    }}>\r\n                                        <EditIcon fontSize=\"small\" />\r\n                                    </IconButton>\r\n                                    {editLoad ? '' : \r\n                                    <Dialog onClose={handleEditDialogClose} className={classes.dialog} style={{ width: '100%', height: 'auto', backgroundColor: 'rgba(0, 0, 0, 0.2) !important'}} aria-labelledby=\"customized-dialog-title\"  open={editPopup}>\r\n                                        <div style={{ backgroundColor: 'white', display: 'flex', justifyContent: 'center', height: 'auto', alignItems: 'center', flexDirection: 'column', flexWrap: 'wrap', width: '100%'  }}>\r\n                                            <div style={{ display: 'flex', justifyContent: 'space-around', width: '70%', alignItems: 'center' }}>\r\n                                                <TextField style={{ width: '250px' }} className={classes.root} label=\"محتوى السؤال\" multiline value={questionDetails.content} onChange={(e) => setQuestionDetails({...questionDetails, content: e.target.value})} />\r\n                                                <span>درجة السؤال</span>\r\n                                                <TextField type=\"number\" className={classes.root} style={{ width: '50px', padding: '4px' }} value={questionDetails.degree} placeholder=\"درجة\" onChange={(e) => {\r\n                                                    setQuestionDetails({...questionDetails, degree: parseInt(e.target.value)})\r\n                                                }} />\r\n                                            </div>\r\n                                        <h4 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '15%'}}>اجابات السؤال</h4>\r\n                                        {isMultiple ? \r\n                                        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                                        <input className=\"customInput\" onChange={(e) => {\r\n                                            setAnswer({\r\n                                                is_correct: false,\r\n                                                answer: e.target.value\r\n                                            })\r\n                                        }}  placeholder=\"ادخل اجابة\" style={{ padding: '4px', margin: '0' }} />\r\n                                        <Button color=\"primary\" onClick={handleAddAnswer} variant=\"contained\" size=\"medium\" style={{ margin: '10px 0' }}>اضف اجابة</Button>\r\n                                        </div> : ''}\r\n                                        \r\n                                        {questionAnswers.length == 0 ? <span>لا يوجد إجابات</span> : questionAnswers.map((answer, index) => \r\n                                        <ul>\r\n                                            <li>{isMultiple ? <div style={{ display: 'flex', alignItems: 'center' }}>{answer.answer}<Checkbox defaultChecked={answer.is_correct ? true : false} onChange={(e) => handleCheckboxChange(e, index)}/><IconButton onClick={() => {\r\n                                                    setQuestionAnswers(questionAnswers.filter((y) => answer.answer !== y.answer))\r\n                                                }} color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                                                        <ClearIcon />\r\n                                            </IconButton></div>: \r\n                                            <FormControl component=\"fieldset\" style={{ width: '100%' }}>\r\n                                            <span>{`الاجابة الصحيحة هي: ${answer.answer == \"true\" ? 'صح' : 'خطأ'}`}</span>\r\n\r\n                                                <RadioGroup onChange={(e) => setAnswer({\r\n                                                    is_correct: true,\r\n                                                    answer: e.target.value\r\n                                                })} style={{ display: 'flex', flexDirection: 'row' }}>\r\n                                                    <FormControlLabel value=\"true\"  control={<Radio />} label={<span>صح</span>} />\r\n                                                    <FormControlLabel value=\"false\" control={<Radio  />} label={<span>خطأ</span>} />\r\n                                                </RadioGroup>\r\n                                            </FormControl>\r\n                            }\r\n                                            \r\n                                            \r\n                                            </li>\r\n                                        </ul>)}\r\n                                        </div>\r\n                                        <Button style={{ margin: '10px 0' }} variant=\"contained\" color=\"primary\" onClick={() => {\r\n                                            console.log('k', questionDetails.content)\r\n                                            console.log('d', questionDetails.degree)\r\n                                            console.log(questionAnswers)\r\n                                            axiosInstance.put('questions/question_edit/' + questionId, {\r\n                                                course: courseId,\r\n                                                isMultiple: isMultiple,\r\n                                                isTrueFalse: isTrueFalse,\r\n                                                photo: null,\r\n                                                content: questionDetails.content,\r\n                                                degree: questionDetails.degree,\r\n                                                answer: isMultiple ? questionAnswers : [answer]\r\n                                            }).then(() => setEditPopup(false))\r\n                                        }}>حفظ التغييرات</Button>\r\n                                    </Dialog>}\r\n                                </td>\r\n                            </tr> )}\r\n                        </table>\r\n                        {console.log(questionDetails)}\r\n                      \r\n                        {console.log(questionAnswers)}\r\n                        <Button component={Link} to=\"/teacher/add-questions\" variant=\"contained\" color=\"primary\" style={{ borderRadius: '15px', position: 'fixed', bottom: '10px', left: '10px', width: '8%', height: '50px' }}> + أضف اسئلة</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionsPage;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Logs.js",["322","323","324","325","326","327","328"],"import React, { useState } from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport axiosInstance from \"../../axios\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Logs from '../../svg/Logs.svg'\r\nimport NoLogs from '../../svg/NoLogs.svg'\r\nimport {\r\n  Divider,\r\n    withStyles,\r\n  } from \"@material-ui/core\";\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiFormLabel-root\": {\r\n            color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n            fontFamily: \"Cairo\",\r\n            left: 'auto',\r\n            overflow: 'hidden',\r\n            height: '20px',\r\n            margin: '0px 12px'\r\n          },\r\n        \"& .MuiInputBase-input\": {\r\n            fontFamily: 'Cairo'\r\n        },\r\n        \"& .MuiFormControl-root\": {\r\n            flexDirection: 'row !important'\r\n        },\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst LogsPage = () => {\r\n    const [month, setMonth] = useState('');\r\n    const [coursesStatistics, setCourseStatistics] = useState();\r\n    const [studentsLogs, setStudentsLogs] = useState([]);\r\n    const [loading, setLoading] = useState(true)\r\n      const classes = useStyles();\r\n\r\n    const StyledFormControlLabel = withStyles({\r\n        root: {\r\n          \"& label\": {\r\n            fontFamily: \"Cairo\",\r\n          }\r\n        }\r\n      })(FormControlLabel);\r\n      const StyledTextField = withStyles({\r\n        root: {\r\n          \"& label\": {\r\n            left: \"auto\",\r\n            fontFamily: \"Cairo\",\r\n            height: \"20px\",\r\n            overflow: 'hidden'\r\n          },\r\n          \"& legend\": {\r\n            textAlign: \"right\",\r\n          }\r\n        }\r\n      })(TextField);\r\n\r\n    return(\r\n        <div>\r\n            <div style={{ zIndex: '-4' }}>\r\n                <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column' }}>\r\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems:'center', }}>\r\n                        <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '10%'}}>السجلات</h3>\r\n                        <FormControl style={{ width: '150px' }} className={classes.formControl}>\r\n                            <Select\r\n                            style={{ width: '150px' }}\r\n                            onChange={(e) => {\r\n                                axiosInstance.get('users/student_logs/' + parseInt(e.target.value)).then((res) => {\r\n                                  setStudentsLogs(res.data)\r\n                                  console.log(res.data)\r\n                                })\r\n                                axiosInstance.get('users/total_month/' + parseInt(e.target.value)).then((res) => {\r\n                                    setCourseStatistics(res.data)\r\n                                }).then(() => setLoading(false))\r\n\r\n                                setMonth(e.target.value)\r\n\r\n                            }}\r\n                            value={month}\r\n                            displayEmpty\r\n                            >\r\n                            <MenuItem value=\"\">\r\n                                <span style={{ overflow: 'hidden'}}>اختر الشهر</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"1\">\r\n                                <span style={{ overflow: 'hidden'}}>يناير</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"2\">\r\n                                <span style={{ overflow: 'hidden'}}>فبراير</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"3\">\r\n                                <span style={{ overflow: 'hidden'}}>مارس</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"4\">\r\n                                <span style={{ overflow: 'hidden'}}>ابريل</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"5\">\r\n                                <span style={{ overflow: 'hidden'}}>مايو</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"6\">\r\n                                <span style={{ overflow: 'hidden'}}>يونيو</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"7\">\r\n                                <span style={{ overflow: 'hidden'}}>يوليو</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"8\">\r\n                                <span style={{ overflow: 'hidden'}}>اغسطس</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"9\">\r\n                                <span style={{ overflow: 'hidden'}}>سبتمبر</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"10\">\r\n                                <span style={{ overflow: 'hidden'}}>اكتوبر</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"11\">\r\n                                <span style={{ overflow: 'hidden'}}>نوفمبر</span>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"12\">\r\n                                <span style={{ overflow: 'hidden'}}>ديسمبر</span>\r\n                            </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className=\"coursesGrid\">\r\n                        {loading ? \r\n                        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', width: '100%', gridColumn: '2 / 3' }}>\r\n                          <img src={Logs} style={{ width: '100%', height: 'auto' }} />\r\n                        </div> : coursesStatistics.map((course) => \r\n                        <div className=\"card\" style={{ height: '180px' }}>\r\n                          <img className=\"courseImg\" />\r\n                          <div style={{ display: 'flex', justifyContent: 'space-around', flexDirection: 'column', alignItems: 'center', width: '100%', height: '300px', margin: '10px' }}>\r\n                              <h3>{course.course_name}</h3>\r\n                              <span>عدد الشهور المدفوعة من الطلاب : {course.total}</span>\r\n                              <span>عدد الطلاب : {course.students}</span>\r\n                          </div>\r\n                      </div>)}      \r\n                    </div>\r\n                    <Divider />\r\n                    {month ? \r\n                    <>\r\n                    <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '25%'}}>اخر السجلات المسجلة لهذا الشهر</h3>\r\n                    {studentsLogs.length == 0 ? \r\n                    <div style={{ display: 'flex', flexDirection: 'column', width: '100%', justifyContent: 'center', alignItems: 'center' }}>\r\n                      <img src={NoLogs} style={{ width: '15%', height: 'auto' }} />\r\n                      <span style={{ fontWeight: 'bold', margin: '10px' }}>لا يوجد سجلات لهذا الشهر</span>\r\n                    </div> : \r\n                    <table style={{ borderSpacing: '0px 13px', width: '100%', borderCollapse: 'separate' }}>\r\n                            <th align=\"right\">كود الطالب</th>\r\n                            <th align=\"right\">اسم الطالب</th>\r\n                            <th align=\"right\">اسم التدريب</th>\r\n                            <th align=\"right\">عدد الشهور التي قام بدفعها</th>\r\n                            {studentsLogs.length == 0 ? \r\n                            '' : studentsLogs.map((log) => \r\n                            <tr>\r\n                              <td>{log.id}</td>\r\n                              <td>{`${log.first_name} ${log.last_name}`}</td>\r\n                              <td>{log.name}</td>\r\n                              <td>{log.month_number}</td>\r\n                            </tr>)}\r\n                    </table>}\r\n                    </> : '' }\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogsPage;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Components\\redirect.js",["329","330","331","332","333"],"import React from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\n\r\nexport default function Redir(){\r\n  if(Cookies.get(\"access_token\")){\r\n    var token = Cookies.get('access_token');\r\n    var decoded = jwt_decode(token);\r\n    if(decoded.role == 'student'){\r\n      return <Redirect to=\"student/courses\" />\r\n    } else {\r\n      return <Redirect to=\"teacher/logs\" />\r\n    }\r\n  }\r\n}","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\CoursesPage.js",["334","335","336","337","338"],"import React, { useState, useEffect } from 'react';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CustomizedDialogs from \"../../Components/dialog\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport '../css/courses.css';\r\nimport axiosInstance from \"../../axios\";\r\nimport decorators from '../../svg/Decorators.svg';\r\nimport teacher from '../../svg/Teacher.svg';\r\nimport Cover from './cover.png'\r\n\r\nconst CoursesPage = () => {\r\n    const [courses, setCourses] = useState([])\r\n    useEffect(async () =>{\r\n        axiosInstance\r\n        .get('courses/courses').then(res => {\r\n            console.log(res.data);\r\n            setCourses(res.data);\r\n            console.log('c',courses);\r\n            courses.map(course => console.log(course.id));\r\n        })\r\n      }, [])\r\n    return(\r\n        <div>\r\n        <Container component=\"main\">\r\n            <img src={decorators} className=\"decorators\"/>\r\n            <img src={teacher} className=\"teacherSVG\"/>\r\n            <div style={{ textAlign: 'center', fontSize: '24px', marginTop: \"20px\", borderBottom: '1px' }}>الدورات التدريبية</div>\r\n            <Divider style={{ width: '220px', margin: 'auto' }} />\r\n            <div className=\"coursesGrid\">\r\n                {courses.map(course => \r\n                <div className=\"course-card\">\r\n                    <img className=\"courseImg\" src={Cover} />\r\n                        <h3>أ/ {course.first_name} {course.last_name}</h3>\r\n                        <span className=\"courseTitle\">{course.name}</span>\r\n                        <CustomizedDialogs courseId={course.id} btnText={course.status} />\r\n                </div>)}\r\n            </div>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CoursesPage;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\LoginPage.js",["339","340"],"import React, { useState } from \"react\";\r\nimport axiosInstance from \"../../axios\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Cookies from 'js-cookie'\r\n//MaterialUI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport login from '../../svg/Login.svg';\r\nimport balls from '../../svg/Balls.svg';\r\nimport '../css/login.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      \"& .MuiFormLabel-root\": {\r\n          color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n          fontFamily: \"Cairo\",\r\n          left: 'auto',\r\n          overflow: 'hidden',\r\n          height: '20px',\r\n          margin: '0px 12px'\r\n        },\r\n      \"& .MuiSelect-select\": {\r\n          height: '27px'\r\n      },\r\n      \"& .MuiInputBase-input\": {\r\n          fontFamily: 'Cairo'\r\n      },\r\n      \"& .MuiFormControl-root\": {\r\n          flexDirection: 'row !important'\r\n      },\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  dialog: {\r\n      \"& .MuiDialog-paperWidthSm\": {\r\n          width: '700px'\r\n      }\r\n  },\r\n}));\r\n\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles()\r\n  const history = useHistory();\r\n  const initialFormData = Object.freeze({\r\n    phone: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [formData, updateFormData] = useState(initialFormData);\r\n\r\n  const handleChange = (e) => {\r\n    updateFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value.trim(),\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(formData);\r\n\r\n    axiosInstance\r\n      .post(`users/login/`, {\r\n        phone: formData.phone,\r\n        password: formData.password,\r\n      })\r\n      .then((res) => {\r\n        Cookies.set(\"access_token\", res.data.access);\r\n        Cookies.set(\"refresh_token\", res.data.refresh);\r\n        axiosInstance.defaults.headers[\"Authorization\"] =\r\n          \"JWT \" + Cookies.get(\"access_token\");\r\n        history.push(\"/redirect\");\r\n        //console.log(res);\r\n        //console.log(res.data);\r\n        console.log(Cookies.get(\"access_token\"));\r\n      })\r\n  };\r\n  return (\r\n    <div>\r\n      <Container  component=\"main\" >\r\n        <img src={balls} className=\"balls\" />\r\n        <div className=\"container\">\r\n          <div className=\"form\">\r\n            <span style={{ fontSize: '28px' }}>تسجيل الدخول</span>\r\n            <TextField name=\"phone\"  className={classes.root} onChange={handleChange} style={{ width: '300px' }} label=\"رقم الهاتف\" />\r\n            <TextField name=\"password\" className={classes.root}  type=\"password\" onChange={handleChange} style={{ width: '300px' }} label=\"كلمة السر\" />\r\n            <Button onClick={handleSubmit} style={{ margin: '22px', backgroundColor: '#FF5856', color: 'white' }} variant=\"contained\">دخول</Button>\r\n            <div>\r\n                <span>ليس لدي حساب</span>\r\n                <Button component={Link} to=\"/register\" variant=\"text\" color=\"primary\">سجل الان</Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"loginSVG\">\r\n            <img src={login} />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\RegisterPage.js",["341","342","343","344"],"import React, { useState } from 'react';\r\nimport {Button, makeStyles} from \"@material-ui/core\";\r\nimport axiosInstance from \"../../axios\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Decor from '../../svg/register.svg'\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiFormLabel-root\": {\r\n            color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n            fontFamily: \"Cairo\",\r\n            left: 'auto',\r\n            overflow: 'hidden',\r\n            height: '20px',\r\n            margin: '0px 12px'\r\n          },\r\n        \"& .MuiSelect-select\": {\r\n            height: '27px'\r\n        },\r\n        \"& .MuiInputBase-input\": {\r\n            fontFamily: 'Cairo'\r\n        },\r\n        \"& .MuiFormControl-root\": {\r\n            flexDirection: 'row !important'\r\n        },\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    dialog: {\r\n        \"& .MuiDialog-paperWidthSm\": {\r\n            width: '700px'\r\n        }\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst RegisterPage = ()=>{\r\n    const [department, setDepartment] = useState('');\r\n    const [level, setLevel] = useState('');\r\n    const [studentDetails, setStudentDetails] = useState({})\r\n    const [errorMsg, setErrorMsg] = useState('')\r\n\r\n    let hist = useHistory()\r\n    \r\n  const handleDepChange = (event) => {\r\n    const department = event.target.value;\r\n    setDepartment(department);\r\n  };\r\n  const handleLevelChange = (event) => {\r\n    const level = event.target.value;\r\n    setLevel(level);\r\n  };\r\n\r\n\r\n    const classes = useStyles()\r\n    return(\r\n        <>\r\n        <img src={Decor} style={{ position: 'fixed', top: 0, right: 0, width: '100%', height: '100vh', opacity: 0.6 }} />\r\n        <Container component=\"main\" maxWidth=\"md\" align=\"center\" style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100vh' }}>\r\n            <h3>تسجيل طالب جديد</h3>\r\n            <form style={{ width: '100%' }} onSubmit={(e) => {\r\n                e.preventDefault()\r\n                axiosInstance.post('users/students', {\r\n                    user:{\r\n                        first_name: studentDetails.first_name,\r\n                        last_name: studentDetails.last_name,\r\n                        password: studentDetails.password,\r\n                        phone: studentDetails.phone,\r\n                        email: studentDetails.email,\r\n                    },\r\n                    parent_phone: studentDetails.parent_phone,\r\n                    department: department,\r\n                    level: parseInt(level)\r\n                }).then((res) => {\r\n                    hist.push('/login')\r\n                })\r\n            }}>\r\n            <div className=\"registerForm\">\r\n                <TextField required style={{ margin: '5px 4px' }} onChange={(e) => setStudentDetails({...studentDetails, first_name: e.target.value })} className={classes.root} label={<span>الاسم الاول</span>}/>\r\n                <TextField required style={{ margin: '5px 4px' }} onChange={(e) => setStudentDetails({...studentDetails, last_name: e.target.value })} className={classes.root} label={<span>باقي الاسم كاملا</span>}/>\r\n                <TextField required style={{ margin: '5px 4px' }} onChange={(e) => setStudentDetails({...studentDetails, phone: e.target.value})} className={classes.root} label={<span>رقم الهاتف</span>}/>\r\n                <TextField required style={{ margin: '5px 4px' }} onChange={(e) => setStudentDetails({...studentDetails, parent_phone: e.target.value })} className={classes.root} label={<span>رقم هاتف ولي الامر</span>}/>\r\n                <TextField type=\"password\" required style={{ margin: '5px 4px' }} onChange={(e) => setStudentDetails({...studentDetails, password: e.target.value})} className={classes.root} label={<span>كلمة السر</span>}/>\r\n                <TextField type=\"email\" required style={{ margin: '5px 4px' }} onChange={(e) => setStudentDetails({...studentDetails, email: e.target.value})} className={classes.root} label={<span>البريد الالكتروني</span>}/>\r\n                <FormControl required style={{ width: '200px', margin: '5px 4px' }}>\r\n                        <Select\r\n                        style={{ textAlign: 'right'}}\r\n                        onChange={(e) => setStudentDetails({...studentDetails, department: e.target.value})}\r\n                        value={department}\r\n                        onChange={handleDepChange}\r\n                        displayEmpty\r\n                        >\r\n                        <MenuItem value=\"\">\r\n                            <span style={{ overflow: 'hidden'}}>اختر الشعبة</span>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"علمى\">\r\n                            <span style={{ overflow: 'hidden'}}>علمي</span>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"ادبي\">\r\n                            <span style={{ overflow: 'hidden'}}>أدبي</span>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"الجميع\">\r\n                            <span style={{ overflow: 'hidden'}}>لا يوجد تخصص</span>\r\n                        </MenuItem>\r\n                        </Select>\r\n                </FormControl>\r\n                <FormControl required style={{ width: '200px', margin: '5px 4px' }}>\r\n                        <Select\r\n                        onChange={(e) => setStudentDetails({...studentDetails, level: parseInt(e.target.value)})}\r\n                        style={{ textAlign: 'right'}}\r\n                        value={level}\r\n                        onChange={handleLevelChange}\r\n                        displayEmpty\r\n                        >\r\n                        <MenuItem value=\"\">\r\n                            <span style={{ overflow: 'hidden'}}>الصف الدراسي</span>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"1\">\r\n                            <span style={{ overflow: 'hidden'}}>الاول الثانوي</span>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"2\">\r\n                            <span style={{ overflow: 'hidden'}}>الثاني الثانوي</span>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"3\">\r\n                            <span style={{ overflow: 'hidden'}}>الثالث الثانوي</span>\r\n                        </MenuItem>\r\n                        </Select>\r\n                </FormControl>\r\n            </div>\r\n            <Button type=\"submit\" variant=\"contained\" style={{ background: '#ff5658', color: 'white', padding: 14, margin: 10 }}>سجل الان</Button>\r\n            <div>\r\n                <span>انا مسجل بالفعل</span>\r\n                <Button component={Link} to=\"/\" variant=\"text\" color=\"primary\">تسجيل الدخول</Button>\r\n            </div>\r\n            <span style={{ color: 'red' }}>{errorMsg}</span>\r\n            </form>\r\n            {console.log({user:{\r\n                        first_name: studentDetails.first_name,\r\n                        last_name: studentDetails.last_name,\r\n                        password: studentDetails.password,\r\n                        phone: studentDetails.phone,\r\n                        email: studentDetails.email,\r\n                    },\r\n                    parent_phone: studentDetails.parent_phone,\r\n                    department: department,\r\n                    level: parseInt(level)})}\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\HomePage.js",["345","346","347","348","349","350","351","352","353","354"],"import React from 'react';\r\nimport RegisterPage from './RegisterPage';\r\nimport LoginPage from './LoginPage';\r\nimport Logout from '../../Components/logout';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\r\nimport Header from '../../Components/Header';\r\n\r\nconst HomePage = ()=>{\r\n    return(\r\n      <div>\r\n        <div>Home</div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;",["355","356"],"C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\Exam.js",["357","358","359","360","361","362","363"],"import { Divider, Radio, RadioGroup, FormControlLabel, FormControl, Button, makeStyles } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axiosInstance from '../../axios';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport '../css/exam.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiPagination-ul\": {\r\n            justifyContent: 'center',\r\n        },\r\n        \"& .MuiSvgIcon-root\": {\r\n            transform: 'scale(-1, 1)'\r\n        },\r\n        \"& .MuiButtonBase-root\": {\r\n            color: 'white'\r\n        },\r\n        \"& .MuiPaginationItem-root\": {\r\n            color: 'white'\r\n        },\r\n    }\r\n  }));\r\n\r\nconst RadioGroupComponent = (props) => {\r\n    const [value, setValue] = React.useState('0');\r\n\r\n    if(props.submit){\r\n        return (\r\n            <Button onClick={props.onClick}>ff</Button>\r\n        )\r\n    } else\r\n    return (\r\n    <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={(e) => props.setSendedAnswers({\r\n        question: props.currentQuestion.id,\r\n        answer: parseInt(e.target.value)\r\n    }) }>\r\n        <div style={{ display: 'grid', gridTemplateRows: '50% 50%', gridTemplateColumns: '50% 50%' }}>\r\n            {props.currentQuestion.answer.map((answer) => <FormControlLabel onClick={(e) => setValue(e.target.value)}  style={{ overflow: 'hidden',  height: 'auto' }} value={`${answer.id}`} control={<Radio />} label={<span>{answer.answer}</span>} />) }\r\n        </div>\r\n\r\n    </RadioGroup>\r\n    )\r\n}\r\n\r\nconst ExamPage = () => {\r\nconst classes = useStyles();\r\nconst [examDetails, setExamDetails] = useState({\r\n    color: ''\r\n});\r\nconst [questions, setQuestions] = useState([])\r\nconst [questionNum, setQuestionNum] = useState(1)\r\nconst [currentQuestion, setCurrentQuestion] = useState(0);\r\nconst [sendedAnswers, setSendedAnswers] = useState([]);\r\nconst [examResult, setResult] = useState();\r\nconst [time, setTime] = useState({\r\n    minutes: '00',\r\n    seconds: '00'\r\n});\r\n\r\n\r\n\r\nlet { examId } = useParams()\r\n\r\nconst checkAnswer = async (question) => {\r\n    const check = new Promise((resolve, reject) => {\r\n        sendedAnswers.filter((ans) => ans.question !== question )\r\n    })\r\n}\r\n\r\nconst incrementQNum = async () => {\r\n    const increment = new Promise((resolve, reject) => {\r\n        setCurrentQuestion(currentQuestion => currentQuestion + 1)\r\n    })\r\n}\r\n\r\nconst decrementQNum = async () => {\r\n    const decrement = new Promise((resolve, reject) => {\r\n        setCurrentQuestion(currentQuestion => currentQuestion - 1)\r\n    })\r\n}\r\n\r\n\r\nconst handleNextQuestion = () => {\r\n    incrementQNum().then(() => setQuestionNum(currentQuestion + 2))\r\n}\r\nconst handlePrevQuestion = () => {\r\n    decrementQNum().then(() => setQuestionNum(currentQuestion))\r\n}\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('questions/examquestions/' + examId).then((res) => setQuestions(res.data))\r\n        axiosInstance.get('exams/examPageDetails/' + examId).then((res) => {\r\n            console.log(res.data)\r\n            setExamDetails(res.data)\r\n            if(typeof res.data == 'object')\r\n            startTimer(`${res.data.Limit.charAt(0)}${res.data.Limit.charAt(1)}`, `${res.data.Limit.charAt(3)}${res.data.Limit.charAt(4)}`)\r\n        })\r\n    }, [])\r\n\r\n    const startTimer = (examTimeHours, examTimeMinutes) => {\r\n        let examTime = (parseInt(examTimeHours) * 60 * 60 * 1000) + (parseInt(examTimeMinutes) * 60 * 1000)\r\n        {console.log(examTime)}\r\n\r\n            const countDownTime = Date.now() + examTime\r\n            let interval = setInterval(() => {\r\n                const now = new Date();\r\n                \r\n                const distance = countDownTime - now;\r\n        \r\n                const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n                const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n        \r\n                if(distance < 0){\r\n                    clearInterval(interval);\r\n                    setTime({\r\n                        minutes: '00',\r\n                        seconds: '00'\r\n                    })\r\n                    axiosInstance.post('questions/examCorrection/' + examId, sendedAnswers).then((res) => {\r\n                        setQuestions([]);\r\n                        setResult(res.data.result)\r\n                    })\r\n                } else {\r\n                    setTime({\r\n                        minutes: minutes,\r\n                        seconds: seconds\r\n                    })\r\n                }\r\n        \r\n            }, 1000)\r\n        }\r\n    return(\r\n        <>\r\n        {typeof examDetails !== 'object' ? <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', backgroundColor: examDetails.color ? examDetails.color : '#3f51b5', color: 'white' }}>{examDetails}</div> : \r\n        examResult >= 0 ? <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', backgroundColor: examDetails.color ? examDetails.color : '#3f51b5', color: 'white' }}>لقد حصلت على {examResult} / {examDetails.degree}</div> :\r\n        <div style={{ background: examDetails.color ? examDetails.color : '#3f51b5', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100vh' }}>\r\n        <div style={{ position: 'absolute', display: 'flex', justifyContent: 'space-around', alignItems: 'center', width: '100%', top: '5%', color: 'white' }}>\r\n            <h3>درجة الامتحان الكلية : {examDetails.degree}</h3>\r\n            <h3>السؤال : {questionNum}/{questions.length}</h3>\r\n        </div>\r\n        <h2 style={{ color: 'white' }}>{examDetails.name}</h2>\r\n        <h3 style={{ color: 'white' }}>{time.seconds < 0 ? `0${time.seconds}` : `${time.seconds}`} : {time.minutes < 0 ? `0${time.minutes}` : `${time.minutes}`}</h3>\r\n        <div className=\"questionCard\" style={{ width: '50%' }}>\r\n            <div style={{ width: '100%', height:'auto', backgroundColor: 'white', display: 'flex', flexDirection: 'column', padding: '10px' }}>\r\n                {questions.length > 0 && currentQuestion >= 0 ? \r\n                questions.map((question, index) =>\r\n                <section style={{ display: questionNum !== index+1 ? 'none' : 'block'}}>\r\n                <span style={{ color: 'grey', fontSize: '12px' }}>{`درجة : ${question.degree}`}</span>\r\n                <p>{questions[currentQuestion].content}</p>\r\n                <Divider style={{ margin: '10px auto', width: '90%', textAlign: 'center' }} />\r\n                <div className='answers'>\r\n                <FormControl component=\"fieldset\" style={{ display: 'flex' }}>\r\n                    <RadioGroupComponent currentQuestion={question} setSendedAnswers={sendedAnswer => {\r\n                        setSendedAnswers([...sendedAnswers.filter((ans) => ans.question !== sendedAnswer.question), sendedAnswer])\r\n                    }} />\r\n                </FormControl> \r\n                </div>\r\n                </section>)\r\n                \r\n                :\r\n                '..تحميل'\r\n                }\r\n                \r\n            </div>\r\n            <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-around', paddingTop: '10px', color: 'white' }}>\r\n                {questionNum + 1 > questions.length ? <Button variant=\"contained\" color= \"secondary\" onClick={() => {\r\n                    axiosInstance.post('questions/examCorrection/' + examId, sendedAnswers).then((res) => {\r\n                        setQuestions([]);\r\n                        setResult(res.data.result)\r\n                        console.log(res.data)\r\n                    })\r\n                }}>انهاء الامتحان</Button> : \r\n                <Button variant=\"contained\" style={{ backgroundColor: 'white' }} onClick={handleNextQuestion}>السؤال التالي</Button>}\r\n                <Pagination className={classes.root} style={{ gridTemplateColumns: '100%', width: '60%', justifyContent: 'center' }} page={questionNum} onChange={(e, num) =>{ \r\n                    setCurrentQuestion(parseInt(num - 1)) \r\n                    setQuestionNum(parseInt(num))\r\n                }} count={questions.length} color=\"secondary\" />\r\n                {questionNum - 1 == 0 ? <Button variant=\"contained\" disabled style={{ backgroundColor: 'grey', color: 'rgba(255, 255, 255, 0.6)' }} onClick={handlePrevQuestion}>السؤال السابق</Button> : \r\n                <Button variant=\"contained\" style={{ backgroundColor: 'white' }} onClick={handlePrevQuestion}>السؤال السابق</Button>}\r\n            </div>\r\n        </div>\r\n        {console.log('num',questionNum)}\r\n        {console.log('sendd',sendedAnswers)}\r\n        {console.log('ques',questions)}\r\n    </div>\r\n        }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExamPage","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\Course.js",["364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379"],"import React, { useState, useEffect } from 'react';\r\nimport AdminPageDecorators from '../../svg/AdminPageDecorators.svg'\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Header from \"../../Components/Header\";\r\nimport { Tabs, AppBar, Tab } from \"@material-ui/core\"\r\nimport CustomizedDialogs from \"../../Components/dialog\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport '../css/courses.css';\r\nimport axiosInstance from \"../../axios\";\r\nimport { Button } from '@material-ui/core';\r\nimport decorators from '../../svg/Decorators.svg';\r\nimport teacher from '../../svg/Teacher.svg';\r\nimport logo from './k.png'\r\nimport courseCover from './course-cover.png'\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nconst Panel = (props) => (\r\n    <div style={{ marginTop: '10px', paddingBottom: '10px' }} hidden={props.value !== props.index}>\r\n        {props.value === props.index && <div>{props.children}</div>}\r\n    </div>\r\n)\r\n\r\nconst Course = () => {\r\n    const [checkResponse, setCheckResponse] = useState('')\r\n    const [points, setPoints] = useState(4);\r\n    const [courseDetails, setCourseDetails] = useState({})\r\n    const [lastLessons, setCourseLastLessons] = useState([])\r\n    const [lastExams, setCourseLastExams] = useState([])\r\n    const [lastPosts, setCourseLastPosts] = useState([])\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [empty, setEmpty] = useState(false)\r\n    let { courseId } = useParams()\r\n\r\n    const onTabClicked = (event, index) => {\r\n        setTabIndex(index)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('courses/points/' + courseId).then((res) => setPoints(res.data.point))\r\n        axiosInstance.get('courses/check/' + courseId).then((res) => setCheckResponse(res.data))\r\n        axiosInstance.get('users/news-feed/' + courseId).then((res) => setCourseDetails(res.data))\r\n        axiosInstance.get('users/last_lesson/' + courseId).then((res) => setCourseLastLessons(res.data))\r\n        axiosInstance.get('users/last_exam/' + courseId).then((res) => setCourseLastExams(res.data))\r\n        axiosInstance.get('users/last_post/' + courseId).then((res) => setCourseLastPosts(res.data))\r\n    }, [])\r\n    return(\r\n        checkResponse ? <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100vh', background: '#3f51b5', color: 'white'}}>{checkResponse}</div> :\r\n        <div>\r\n        <img src={AdminPageDecorators} style={{ position: 'fixed', top: 0, right: 0, width: '100%', height: '100vh', zIndex: -1 }} />\r\n\r\n            <Container style={{ marginBottom: '30px' }}>\r\n                {checkResponse ? <div style={{ margin: 'auto', justifyContent: 'center', display: 'flex', height: '80vh', alignItems: 'center' }}>{checkResponse}</div> : \r\n                <div className='coursePage' style={{ display: 'grid', gridTemplateColumns: '29% 69%', margin: '10px 40px', gridGap: '2%' }}>\r\n                    <div className=\"courseDetails\" style={{ backgroundColor: 'white' }}>\r\n                        <img src={courseCover} style={{ width: '100%', height: '200px' }}/>\r\n                        <img src={logo} style={{ width: '150px', height: '150px', borderRadius: '50%', marginTop: '-25px', boxShadow :'black 0px 0px 7px' }}/>\r\n                        <h3 style={{ marginTop: '10px' }}>{`أ / ${courseDetails.first_name} ${courseDetails.last_name}`}</h3>\r\n                        <span style={{ color: 'grey' }}>{courseDetails.name}</span>\r\n                    </div>\r\n                    <div className=\"responsivePanel\" style={{ boxShadow: '0px 0px 19px -8px rgb(0 0 0 / 25%)', padding: '10px', margin: '20px', background: 'white' }}>\r\n                            <Tabs variant=\"fullWidth\" style={{ backgroundColor: 'white' }} value={tabIndex} onChange={onTabClicked}>\r\n                                <Tab style={{ overflow: 'hidden' }} label={<span style={{ overflow: 'hidden' }}>الحصص</span>}></Tab>\r\n                                <Tab style={{ overflow: 'hidden' }} label={<span style={{ overflow: 'hidden' }}>الاختبارات</span>}></Tab>\r\n                                <Tab style={{ overflow: 'hidden' }} label={<span style={{ overflow: 'hidden' }}>الاخبار</span>}></Tab>\r\n                            </Tabs>\r\n                            <Panel value={tabIndex} index={0} empty>\r\n                            <div className=\"contentGrid\" style={{ gridGap: '2%' }}>\r\n                                {lastLessons.length == 0 ? 'لا يوجد دروس' : lastLessons.map((les) => \r\n                                    <div className=\"card\" style={{ width: '90%', height: '100%' }}>\r\n                                        <Link to={`/student/lesson/${les.id}`}><img className=\"courseImg\" src={courseCover} /></Link>\r\n                                        <div style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center', width: '100%', margin: '10px', overflow: 'hidden' }}>\r\n                                            <div style={{  padding: '10px', overflow: 'hidden' }}>\r\n                                            <h3>{les.name}</h3>\r\n                                            <span className=\"courseTitle\">{les.description}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <span style={{ display: 'flex', justifyContent: 'flex-end', width: '100%' }}>كل الحصص</span>\r\n                            </Panel>\r\n                            <Panel value={tabIndex} index={1}>\r\n                            <div className=\"contentGrid\" style={{ gridGap: '2%' }}>\r\n                                {lastExams.length == 0 ? 'لا يوجد دروس' : lastExams.map((exam) => \r\n                                    <div className=\"card\" style={{ height: 'auto', width: '90%' }}>\r\n                                        <div style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center', width: '100%', margin: '10px', overflow: 'hidden' }}>\r\n                                            <div style={{  padding: '10px', overflow: 'hidden' }}>\r\n                                            <h3>{exam.name}</h3>\r\n                                            <p className=\"courseTitle\">درجة الامتحان : {exam.degree}</p>\r\n                                            <p className=\"courseTitle\">موعد انتهاء الامتحان : {exam.end_at}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <span style={{ display: 'flex', justifyContent: 'flex-end', width: '100%' }}>كل الاختبارات</span>\r\n\r\n                            </Panel>\r\n                            <Panel value={tabIndex} index={2}>\r\n                                <div className=\"contentGrid\" style={{ gridGap: '2%' }}>\r\n                                    {lastPosts.length == 0 ? 'لا يوجد اخبار' : lastPosts.map((post) => \r\n                                    <div className=\"card\" style={{ height: 'auto', width: '100%' }}>\r\n                                            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-start', alignItems: 'center', width: '100%', margin: '10px', overflow: 'hidden' }}>\r\n                                            <p style={{ fontSize: '18px', fontWeight: '550' }}>{post.content}</p>\r\n                                            <span style={{ color: 'grey', fontSize: '12px' }}>{post.created_at}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    )}\r\n                                </div>\r\n                                <span style={{ display: 'flex', justifyContent: 'flex-end', width: '100%' }}>كل الاخبار</span>\r\n                            </Panel>\r\n                    </div>\r\n                </div>}\r\n            </Container>\r\n            {console.log(lastLessons)}\r\n            <Button variant=\"contained\" color=\"primary\" style={{ borderRadius: '15px', position: 'fixed', bottom: '10px', left: '10px', width: '150px', height: '50px', letterSpacing: 1.5 }}>نقاطك | {points}</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Course;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\CourseContent.js",["380","381","382","383","384","385","386","387","388","389","390","391","392"],"import React, { useEffect, useState } from 'react'\r\nimport Header from '../../Components/Header'\r\nimport { Tabs, AppBar, Tab, Container, Card, ButtonBase, TextField} from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport courseCover from './course-cover.png'\r\nimport { Link } from 'react-router-dom'\r\nimport axiosInstance from '../../axios';\r\nimport Decorators from '../../svg/decorators2.svg'\r\nimport PostsDecorators from '../../svg/postDeocrators.svg'\r\nimport { useParams } from 'react-router-dom';\r\nimport '../css/courses.css';\r\n\r\n\r\n\r\n\r\nconst Panel = (props) => (\r\n    <div style={{ marginTop: '10px', paddingBottom: '10px' }} hidden={props.value !== props.index}>\r\n        {props.value === props.index && <div>{props.children}</div>}\r\n    </div>\r\n)\r\n\r\nconst CourseContent = () => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            \"& .MuiFormLabel-root\": {\r\n                color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n                fontFamily: \"Cairo\",\r\n                left: 'auto',\r\n                overflow: 'hidden',\r\n                height: '20px',\r\n                margin: '0px 12px'\r\n              },\r\n            \"& .MuiInputBase-input\": {\r\n                fontFamily: 'Cairo'\r\n            },\r\n            \"& .MuiFormControl-root\": {\r\n                flexDirection: 'row !impoertant'\r\n            },\r\n          '& > *': {\r\n            margin: theme.spacing(1),\r\n          },\r\n        },\r\n        dialog: {\r\n            \"& .MuiDialog-paperWidthSm\": {\r\n                width: '700px'\r\n            }\r\n        },\r\n        tabs:{\r\n            \"& .MuiTabs-flexContainer\": {\r\n                background: '#ff5658'\r\n            },\r\n            \"& .MuiTab-textColorInherit.Mui-selected\": {\r\n                background: '#3f51b5'\r\n            }\r\n        },\r\n        input: {\r\n          display: 'none',\r\n        },\r\n        card: {\r\n            \"@media (max-width: 696px)\":{\r\n                width: '100px'\r\n            }\r\n        }\r\n      }));\r\n\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [checkResponse, setCheckResponse] = useState('')\r\n    const [lessons, setLessons] = useState([])\r\n    const [exams, setExams] = useState([])\r\n    const [posts, setPosts] = useState([])\r\n\r\n    const classes = useStyles();\r\n    let { courseId } = useParams()\r\n\r\n    const onTabClicked = (event, index) => {\r\n        setTabIndex(index)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get('courses/check/' + courseId).then((res) => setCheckResponse(res.data))\r\n        axiosInstance.get('lessons/lessons/' + courseId).then((res) => setLessons(res.data))\r\n        axiosInstance.get('exams/exams/' + courseId).then((res) => setExams(res.data))\r\n        axiosInstance.get('posts/posts/' + courseId).then((res) => setPosts(res.data))\r\n    }, [])\r\n    return(\r\n        checkResponse ? <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100vh', background: '#3f51b5', color: 'white'}}>{checkResponse}</div> :\r\n        <div style={{ overflow: 'hidden' }}>\r\n            <Container style={{ height: 'auto', overflow: 'hidden' }}>\r\n                <Panel value={tabIndex} index={0}>\r\n                <img src={Decorators} style={{ width: '100%', height: '100vh', position: 'absolute', right: 0, top: 0, overflow: 'hidden', zIndex: -1 }} />\r\n                <div style={{display: 'flex', justifyContent: 'space-between', width: '100%'}}>\r\n                    <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '120px'}}>كل الحصص</h3>\r\n                    <TextField  className={classes.root} label=\"بحث ..\"/>\r\n                </div>\r\n                <div className=\"coursesGrid\" style={{ gridGap: '2%', overflow: 'hidden', paddingBottom: '20%' }}>\r\n                        {lessons.length == 0 ? 'لا يوجد دروس' : lessons.map((les) => \r\n                            <div className=\"card\" style={{ width: '100%'}}>\r\n                            <img className=\"courseImg\" src={courseCover} />\r\n                                <div style={{ display: 'flex', justifyContent: 'flex-start', alignItems: 'center', width: '100%', margin: '10px', overflow: 'hidden' }}>\r\n                                    <div style={{  padding: '10px', overflow: 'hidden' }}>\r\n                                    <h3>{les.name}</h3>\r\n                                    <span className=\"courseTitle\">{les.created_at}</span>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                        )}\r\n                </div>\r\n                </Panel>\r\n                <Panel value={tabIndex} index={1}>\r\n                <img src={Decorators} style={{ width: '100%', height: '100vh', position: 'absolute', right: 0, top: 0, overflow: 'hidden', zIndex: -1 }} />\r\n                <div style={{display: 'flex', justifyContent: 'space-between', width: '100%'}}>\r\n                    <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '120px'}}>كل الاختبارات</h3>\r\n                    <TextField  className={classes.root} label=\"بحث ..\"/>\r\n                </div>\r\n                <div className=\"coursesGrid\" style={{ gridGap: '2%', overflow: 'hidden', paddingBottom: '20%' }}>\r\n                        {exams.length == 0 ? 'لا يوجد اختبارات' : exams.map((exam) => \r\n                            <div className=\"card\" style={{ width: '100%', height: '150px' }}>\r\n                                <div style={{ display: 'grid', gridTemplateColumns: '70% 30%', alignItems: 'center', width: '100%', margin: '10px', overflow: 'hidden' }}>\r\n                                    <div style={{  padding: '10px', overflow: 'hidden' }}>\r\n                                        <h3>{exam.name}</h3>\r\n                                        <p className=\"courseTitle\">{exam.created_at}</p>\r\n                                        <p className=\"courseTitle\">{`درجة : ${exam.degree}`}</p>\r\n                                    </div>\r\n                                    <Button onClick={() => window.open(`/exam/${exam.id}`, \"_blank\")} variant=\"contained\" style={{ height: '50px', color:\"white\", backgroundColor:'#ff5658', margin: '10px', fontSize: '10px' }}>\r\n                                        خوض الامتحان\r\n                                    </Button>\r\n                                </div>\r\n                        </div>\r\n                        )}\r\n                </div>\r\n                </Panel>\r\n                <Panel value={tabIndex} index={2} style={{ padding: '10px' }}>\r\n                <img src={PostsDecorators} style={{ width: '100%', height: '100vh', position: 'absolute', right: 0, top: 0, overflow: 'hidden', zIndex: -1 }} />\r\n                    <div style={{display: 'flex', justifyContent: 'center', width: '100%'}}>\r\n                        <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '120px', textAlign: 'center'}}>كل الاخبار</h3>\r\n                    </div>\r\n                    <div style={{ overflow: 'hidden', display: 'flex', alignItems:'center', flexDirection:'column', marginBottom: '45px'  }}>\r\n                    {posts.length == 0 ? 'لا يوجد اختبارات' : posts.map((post) => \r\n                            <div className=\"card\" style={{ width: '60%', height: 'auto', display: 'flex' , alignItems: 'flex-start', padding: '10px', margin: '10px'}}>\r\n                                <h4>{`أ / ${post.first_name} ${post.last_name}`}</h4>\r\n                                <span style={{ color: 'grey' }}>{post.created_at}</span>\r\n                                <p style={{ fontSize: '18px', fontWeight: '550' }}>{post.content}</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </Panel>\r\n            </Container>\r\n            <div style={{ position: 'fixed', bottom: '0', width: '100%' }}>\r\n                    <Tabs indicatorColor=\"none\" className={classes.tabs} variant=\"fullWidth\" style={{ backgroundColor: 'white' }} value={tabIndex} onChange={onTabClicked}>\r\n                        <Tab style={{ overflow: 'hidden' }} label={<span style={{ overflow: 'hidden', color: 'white' }}>الحصص</span>}></Tab>\r\n                        <Tab style={{ overflow: 'hidden' }} label={<span style={{ overflow: 'hidden', color: 'white' }}>الاختبارات</span>}></Tab>\r\n                        <Tab style={{ overflow: 'hidden' }} label={<span style={{ overflow: 'hidden', color: 'white' }}>الاخبار</span>}></Tab>\r\n                    </Tabs>\r\n                </div>\r\n                {console.log(exams)}\r\n        </div>\r\n    )\r\n}\r\nexport default CourseContent","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\SingleLesson.js",["393","394","395","396","397","398","399","400","401","402","403","404","405"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport screenful from \"screenfull\";\r\nimport { Container, Grid, makeStyles, withStyles, Button, IconButton, Typography } from '@material-ui/core';\r\nimport ReactHlsPlayer from 'react-hls-player';\r\nimport Decorators from '../../svg/decorators2.svg'\r\nimport Controls from './PlayerControls'\r\nimport { useParams } from 'react-router-dom';\r\nimport axiosInstance from '../../axios';\r\n\r\nconst useStyles = makeStyles({\r\n    playerWrapper: {\r\n        overflow: 'hidden',\r\n        width: '80%',\r\n        position: 'relative',\r\n        margin: 'auto',\r\n        height: 'auto',\r\n        \"@media (max-width: 696px)\":{\r\n          width: '100%',\r\n        }\r\n    },\r\n    vidsvg:{\r\n      \"@media (min-width: 400px)\":{\r\n        display: 'none',\r\n      }\r\n    }\r\n  })\r\n\r\n  const format = (seconds) => {\r\n    if (isNaN(seconds)) {\r\n      return `00:00`;\r\n    }\r\n    const date = new Date(seconds * 1000);\r\n    const hh = date.getUTCHours();\r\n    const mm = date.getUTCMinutes();\r\n    const ss = date.getUTCSeconds().toString().padStart(2, \"0\");\r\n    if (hh) {\r\n      return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`;\r\n    }\r\n    return `${mm}:${ss}`;\r\n  };\r\n  \r\n  let count = 0;\r\n\r\nconst SingleLesson = () => {\r\n    let {lessonId} = useParams();\r\n    const [lessonDetails, setLessonDetails] = useState({})\r\n    const playerRef = useRef(null);\r\n    const playerContainerRef = useRef(null);\r\n    const controlsRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const [played, setPlayed] = useState(0)\r\n    const [elapsedTime, setElapsedTime] = useState(0)\r\n    const [state, setState] = useState({\r\n      playing: false,\r\n      muted: false,\r\n      playbackRate: 1.0,\r\n      seeking: false,\r\n      duration: 0,\r\n      volume: 1,\r\n    })\r\n\r\n    const {\r\n      playing,\r\n      muted,\r\n      playbackRate,\r\n      seeking,\r\n      volume\r\n    } = state\r\n\r\n  const playingPromise = async () => {\r\n    const promise = new Promise(() => {\r\n      setState({...state, playing: !state.playing})\r\n    })\r\n  }\r\n\r\n    const handleVideoPlayPause = () => {\r\n      playingPromise().then(() => {\r\n        !state.playing ?\r\n        playerRef.current.play() :\r\n        playerRef.current.pause()\r\n      })\r\n      \r\n    }\r\n    const handleRewind = () => {\r\n      playerRef.current.currentTime = playerRef.current.currentTime - 10\r\n    }\r\n    const handleForwarding = () => {\r\n      playerRef.current.currentTime = playerRef.current.currentTime + 10\r\n    }\r\n\r\n\r\n    const mutePromise = async () => {\r\n      const promise = new Promise(() => {\r\n        setState({...state, muted: !state.muted})\r\n      })\r\n    }\r\n\r\n    const handleMute = () => {\r\n      mutePromise().then(() => {\r\n        !state.muted ?\r\n        playerRef.current.muted = true :\r\n        playerRef.current.muted = false\r\n      }) \r\n    }\r\n\r\n    const handleVolumeSeekDown = (e, newValue) => {\r\n      setState({ ...state, seeking: false, volume: parseFloat(newValue / 100) });\r\n    };\r\n    const handleVolumeChange = (e, newValue) => {\r\n      // console.log(newValue);\r\n      setState({\r\n        ...state,\r\n        volume: parseFloat(newValue / 100),\r\n        muted: newValue === 0 ? true : false,\r\n      });\r\n      playerRef.current.volume = volume\r\n    };\r\n\r\n    const handleDuration = (duration) => {\r\n      setState({ ...state, duration });\r\n    };\r\n\r\n    const toggleFullScreen = () => {\r\n      screenful.toggle(playerContainerRef.current);\r\n    };\r\n\r\n    const handlePlaybackRate = (rate) => {\r\n      setState({ ...state, playbackRate: rate });\r\n      playerRef.current.playbackRate = rate\r\n    };\r\n    const handleSeekChange = (e, newValue) => {\r\n      console.log('change',{ newValue });\r\n      setState({ ...state, played: parseFloat(newValue / 100) });\r\n    };\r\n  \r\n    const handleSeekMouseDown = (e) => {\r\n      setState({ ...state, seeking: true });\r\n    };\r\n  \r\n    \r\n\r\n    const duration = playerRef && playerRef.current ? playerRef.current.duration : \"00:00\";\r\n\r\n    const handleSeekMouseUp = (e, newValue) => {\r\n      console.log('up', { value: e.target });\r\n      setState({ ...state, seeking: false });\r\n      // console.log(sliderRef.current.value)\r\n      playerRef.current.currentTime = (duration / 100) * newValue ;\r\n    };\r\n\r\n    const totalDuration = format(duration);\r\n\r\n      const classes = useStyles();\r\n\r\n      useEffect(() => {\r\n        axiosInstance.get('lessons/views/' + lessonId).then((res) => setLessonDetails(res.data)).then(() => {\r\n          const interval = setInterval(() => {\r\n            const currentTime = playerRef && playerRef.current\r\n            ? playerRef.current.currentTime\r\n            : \"00:00\";\r\n  \r\n          const elapsedTime = format(currentTime)\r\n          setElapsedTime(elapsedTime)\r\n          setPlayed(Math.floor((currentTime / playerRef.current.duration) * 100))\r\n          }, 1000)\r\n        })\r\n      }, [])\r\n\r\n      const handleMouseMove = () => {\r\n        console.log(\"mousemove\");\r\n        controlsRef.current.style.visibility = \"visible\";\r\n        count = 0;\r\n\r\n        setTimeout(() => {\r\n        controlsRef.current.style.visibility = \"hidden\";\r\n        }, 3000)\r\n      };\r\n\r\n    \r\n\r\n    return(\r\n        <>\r\n            <img src={Decorators} style={{ width: '100%', height: '100vh', position: 'absolute', right: 0, top: 20, overflow: 'hidden', zIndex: -1 }} />\r\n            <Container style={{margin: '10px auto'}}>\r\n                <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0 20px', width: '25%',}}>{lessonDetails.name}</h3>\r\n                <div \r\n                className={classes.playerWrapper}\r\n                ref={playerContainerRef}\r\n                onMouseMove={handleMouseMove}\r\n                >\r\n                <ReactHlsPlayer\r\n                  playerRef={playerRef}\r\n                  src={lessonDetails.source}\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                />\r\n                <Controls\r\n                ref={controlsRef}\r\n                playPause={handleVideoPlayPause}\r\n                playing={playing}\r\n                rewind={handleRewind}\r\n                played={played}\r\n                forwarding={handleForwarding}\r\n                muting={handleMute}\r\n                muted={muted}\r\n                toggleFullScreen={toggleFullScreen}\r\n                playbackRate={playbackRate}\r\n                handlePlaybackRate={handlePlaybackRate}\r\n                elapsedTime={elapsedTime}\r\n                totalDuration={totalDuration}\r\n                onVolumeChange={handleVolumeChange}\r\n                onVolumeSeekDown={handleVolumeSeekDown}\r\n                onSeek={handleSeekChange}\r\n                onSeekMouseDown={handleSeekMouseDown}\r\n                onSeekMouseUp={handleSeekMouseUp}\r\n                onDuration={handleDuration}\r\n                volume={volume}\r\n                lessonName={lessonDetails.name}\r\n                />\r\n                </div>\r\n                <div style={{ marginTop: '10px' }}>\r\n                <span style={{ color: 'rgba(0,0,0,0.5)' }}>نشر في {lessonDetails.created_at}</span>\r\n                <p style={{ fontSize: '18px', letterSpacing: 0.5 }}>{lessonDetails.description}</p>\r\n                </div>\r\n            </Container>\r\n            {console.log(totalDuration)}\r\n        </>\r\n    )\r\n}\r\nexport default SingleLesson ","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\PlayerControls.js",["406","407","408","409","410","411","412","413","414"],"\r\nimport React, { forwardRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport FastRewindIcon from \"@material-ui/icons/FastRewind\";\r\nimport FastForwardIcon from \"@material-ui/icons/FastForward\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FullScreen from \"@material-ui/icons/Fullscreen\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport VolumeMuteIcon from \"@material-ui/icons/VolumeOff\";\r\nimport FullScreenIcon from \"@material-ui/icons/Fullscreen\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport vidIcon from './videoIcon.png';\r\nimport Logo from '../../svg/nolaqen.svg'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  controlsWrapper: {\r\n    visibility: 'hidden',\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    height: \"100%\",\r\n    background: \"rgba(0,0,0,0.9)\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    \"@media (max-width : 696px)\": {\r\n      height: '95%'\r\n    },\r\n  },\r\n  grid:{\r\n    overflow: 'hidden',\r\n    \"& .MuiGrid-item\":{\r\n      color: 'white'\r\n    }\r\n  },\r\n  controlIcons: {\r\n    color: \"#777\",\r\n    fontSize: 50,\r\n    transform: \"scale(0.9)\",\r\n    transition: '0.2s ease-in-out',\r\n    \"&:hover\": {\r\n      color: \"#fff\",\r\n      transform: \"scale(1)\",\r\n    },\r\n    \"@media (max-width: 696px)\":{\r\n      fontSize: 30,\r\n      overflow: 'hidden'\r\n    }\r\n  },\r\n  prettoContainer: {\r\n    padding: '0 16px',\r\n    overflow: 'hidden',\r\n    \"@media (max-width: 696px)\": {\r\n      padding: '0px 16px',\r\n      height: '15%'\r\n    }\r\n  },\r\n  bottomIcons: {\r\n    color: \"#999\",\r\n    fontSize: 25,\r\n    transition: '0.2s ease-in-out',\r\n    \"&:hover\": {\r\n      color: \"#fff\",\r\n    },\r\n    \"@media (max-width: 696px)\": {\r\n      fontSize: '3px'\r\n    }\r\n  },\r\n  volumeSlider: {\r\n    width: 100,\r\n    \"@media (max-width: 696px)\":{\r\n      width: 70\r\n    }\r\n  },\r\n  bottomControls:{\r\n    overflow: 'hidden',\r\n    \"@media (max-width: 696px)\": {\r\n      \"& .MuiSlider-thumb\":{\r\n        width: 6,\r\n        height: 6,\r\n        marginTop: -3,\r\n        marginLeft: 0\r\n      },\r\n      \"& .MuiSlider-rail\": {\r\n        height: 1\r\n      },\r\n      \"& .MuiSlider-track\": {\r\n        height: 1\r\n      },\r\n      \"& .MuiSvgIcon-root\":{\r\n        fontSize: 18\r\n      }\r\n    }\r\n  },\r\n  popover: {\r\n    \"& .MuiPaper-root\": {\r\n      background: '#000',\r\n      \"@media (max-width: 696px)\":{\r\n        width: 60\r\n      }\r\n    }\r\n  },\r\n  elapsedTime: {\r\n    color: 'white',\r\n    marginLeft: 16,\r\n    \"@media (max-width: 696px)\":{\r\n      fontSize: '10px',\r\n      marginLeft: 18\r\n    }\r\n  },\r\n  lessonName:{\r\n    \"@media (max-width: 696px)\":{\r\n      fontSize: 14\r\n    }\r\n  }\r\n}))\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    height: 8,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: \"#fff\",\r\n    border: \"2px solid currentColor\",\r\n    marginTop: -8,\r\n    marginLeft: 1,\r\n    marginRight: 1,\r\n    \"&:focus, &:hover, &$active\": {\r\n      boxShadow: \"inherit\",\r\n    },\r\n    \"@media (max-width: 696px)\": {\r\n      width: '10px',\r\n      height: '10px',\r\n      marginTop: '-3px',\r\n      marginLeft: 0\r\n    }\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: \"calc(-50% + 4px)\",\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n    \"@media (max-width: 696px)\": {\r\n      height: 4\r\n    }\r\n\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n    \"@media (max-width: 696px)\": {\r\n      height: 4\r\n    }\r\n  },\r\n})(Slider);\r\n\r\nfunction ValueLabelComponent(prop) {\r\n  const { children, open, value } = prop;\r\n\r\n  return (\r\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nconst Controls = forwardRef ((props, ref) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [value, setValue] = React.useState(1);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  const classes = useStyles()\r\n  return(\r\n    <div className={classes.controlsWrapper} ref={ref}>\r\n      <Grid container alignItems=\"center\" className={classes.grid}>\r\n        <Grid item xs={6} className={classes.lessonName} style={{ padding: '2%', width: '15%', color: 'white' }}>\r\n          {props.lessonName} \r\n        </Grid>\r\n        <Grid item xs={6} align=\"left\" style={{ padding: '2%' }}>\r\n          <img src={Logo} style={{ width: '15%' }} />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container style={{ width: '35%', margin: 'auto', overflow: 'hidden' }}>\r\n        <Grid item xs={4} align=\"left\">\r\n          <IconButton onClick={props.forwarding}>\r\n            <FastForwardIcon className={classes.controlIcons} />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={4} align=\"center\">\r\n          <IconButton onClick={props.playPause}>\r\n            {props.playing ? <PauseIcon className={classes.controlIcons} /> : <PlayArrowIcon className={classes.controlIcons} />}\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={4} align=\"right\">\r\n          <IconButton onClick={props.rewind}>\r\n            <FastRewindIcon className={classes.controlIcons} />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            className={classes.prettoContainer}>\r\n        <Grid item xs={12}>\r\n          <PrettoSlider min={0} max={100} \r\n                ValueLabelComponent={(prop) => (\r\n                  <ValueLabelComponent {...prop} value={props.elapsedTime} />\r\n                )}\r\n                aria-label=\"custom thumb label\"\r\n                value={props.played}\r\n                onChange={props.onSeek}\r\n                onMouseDown={props.onSeekMouseDown}\r\n                onChangeCommitted={props.onSeekMouseUp}\r\n                onDuration={props.onDuration}/>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container direction=\"row\" className={classes.bottomControls} justify=\"space-between\"  alignItems=\"center\">\r\n        <Grid item >\r\n          <Button\r\n              onClick={handleClick}\r\n              className={classes.bottomIcons}\r\n              variant=\"text\"\r\n                >\r\n                  <Typography>{props.playbackRate}X</Typography>\r\n          </Button>\r\n          <Popover\r\n                className={classes.popover}\r\n                open={open}\r\n                id={id}\r\n                onClose={handleClose}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\",\r\n                }}\r\n              >\r\n                <Grid container direction=\"column-reverse\">\r\n                  {[0.5, 1, 1.5, 2].map((rate) => (\r\n                    <Button\r\n                      onClick={() => props.handlePlaybackRate(rate)}\r\n                      key={rate}\r\n                      variant=\"text\"\r\n                    >\r\n                      <Typography\r\n                      \r\n                        color={rate === props.playbackRate ? \"secondary\" : \"primary\"}\r\n                      >\r\n                        {rate}X\r\n                      </Typography>\r\n                    </Button>\r\n                  ))}\r\n                </Grid>\r\n              </Popover>\r\n              <IconButton\r\n                onClick={props.toggleFullScreen}\r\n                className={classes.bottomIcons}\r\n              >\r\n                <FullScreen />\r\n              </IconButton>\r\n        </Grid>\r\n        <Grid item style={{ display: 'flex', alignItems: 'center' }}>\r\n          \r\n          <span className={classes.elapsedTime}>{props.elapsedTime}/{props.totalDuration}</span>\r\n          <Slider\r\n                  min={0}\r\n                  max={100}\r\n                  value={props.muted ? 0 : props.volume * 100}\r\n                  onChange={props.onVolumeChange}\r\n                  aria-labelledby=\"input-slider\"\r\n                  className={classes.volumeSlider}\r\n                  onMouseDown={props.onSeekMouseDown}\r\n                  onChangeCommitted={props.onVolumeSeekDown}\r\n                />\r\n          <IconButton onClick={props.muting} className={classes.bottomIcons}>\r\n            {props.muted ? <VolumeMuteIcon /> : <VolumeUpIcon />}\r\n          </IconButton>\r\n          <IconButton onClick={props.playPause} className={classes.bottomIcons}>\r\n            {props.playing ? <PauseIcon /> : <PlayArrowIcon /> }\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n  )\r\n})\r\nexport default Controls;\r\n","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\StudentInterface\\Routes.js",[],"C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Routes.js",["415"],"import React from 'react';\r\nimport { BrowserRouter as Route} from 'react-router-dom';\r\n\r\nimport Logout from '../../Components/logout';\r\nimport TeacherHeader from './Header'\r\nimport RequestsPage from './Requests';\r\nimport GroupsPage from './Groups';\r\nimport StudentProfilePage from './StudentProfile';\r\nimport AddQuestionsPage from './AddQuestions';\r\nimport CourseStudentPage from './CourseStudent';\r\nimport CourseExamsPage from './CourseExams';\r\nimport CourseLessonsPage from './CourseLessons';\r\nimport EditExamPage from './EditExam';\r\nimport AddExamPage from './AddExam';\r\nimport AddPostPage from './AddPost';\r\nimport LogsPage from './Logs';\r\nimport QuestionsPage from './Questions';\r\nimport SidePanel from './SidePanel';\r\nimport ExamResultsPage from './ExamResults';\r\nimport PostsPage from './Posts';\r\n\r\nconst TeacherRoutes = () => {\r\n    return (\r\n        <div>\r\n                <TeacherHeader />\r\n                <SidePanel />\r\n                    <Route path='/teacher/teacher-panel' component= {TeacherHeader}/>\r\n                    <Route path='/teacher/requests/:courseId' component= {RequestsPage}/>\r\n                    <Route path='/teacher/groups/:courseId' component= {GroupsPage}/>\r\n                    <Route path='/teacher/exams/:courseId' component= {CourseExamsPage}/>\r\n                    <Route path='/teacher/lessons/:courseId' component= {CourseLessonsPage}/>\r\n                    <Route path='/teacher/edit-exam/:examId' component= {EditExamPage}/>\r\n                    <Route path='/teacher/course-students/:courseId' component= {CourseStudentPage}/>\r\n                    <Route path='/teacher/add-questions' component= {AddQuestionsPage}/>\r\n                    <Route path='/teacher/add-exam' component= {AddExamPage}/>\r\n                    <Route path='/teacher/exam-results/:examId' component={ExamResultsPage} />\r\n                    <Route path='/teacher/all-posts' component={PostsPage} />\r\n                    <Route path='/teacher/add-post' component= {AddPostPage}/>\r\n                    <Route path='/teacher/logs'  component= {LogsPage}/>\r\n                    <Route path='/teacher/all-questions' component= {QuestionsPage}/>\r\n                    <Route path='/teacher/course/:courseId/student/:studentId' component= {StudentProfilePage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TeacherRoutes;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\ExamResults.js",["416","417","418","419","420","421","422"],"import React, { useState, useEffect } from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useParams } from 'react-router-dom';\r\nimport axiosInstance from \"../../axios\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        \"& .MuiFormLabel-root\": {\r\n            color: \"rgba(0, 0, 0, 0.54)\", // or black\r\n            fontFamily: \"Cairo\",\r\n            left: 'auto',\r\n            overflow: 'hidden',\r\n            height: '20px',\r\n            margin: '0px 12px'\r\n          },\r\n        \"& .MuiInputBase-input\": {\r\n            fontFamily: 'Cairo'\r\n        },\r\n        \"& .MuiSelect-select\": {\r\n            height: '27px'\r\n        },\r\n        \"& .MuiFormControl-root\": {\r\n            flexDirection: 'row !important'\r\n        },\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n    input: {\r\n      display: 'none',\r\n    },\r\n    dialog: {\r\n        \"& .MuiDialog-paperWidthSm\": {\r\n            width: '700px'\r\n        }\r\n    },\r\n  }));\r\n\r\nconst ExamResultsPage = () => {\r\n    const classes = useStyles();\r\n\r\n    const [results, setResults] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n    const [toBeQueried, setToBeQueried] = useState('');\r\n    const [degreeSearch, setDegreeSearch] = useState(0)\r\n\r\n\r\n    let { examId } = useParams();\r\n    const lowerCaseQuery = query.toLowerCase();\r\n\r\n    const arr = []\r\n\r\n    useEffect(() => {\r\n        axiosInstance\r\n                    .get('exams/exam_results/' + examId).then((res) => {\r\n                        res.data.map((item) => arr.push({\r\n                            result: item.results,\r\n                            name: item.first_name + ' ' + item.last_name,\r\n                            phone: item.phone,\r\n                            parent_phone: item.parent_phone\r\n                        }));\r\n                    }).then(() => setResults(arr))\r\n    }, [])\r\n    return(\r\n        <div>\r\n            <div style={{ zIndex: '-4' }}>\r\n                <div style={{ position: 'absolute', top: '14%', right: '22%', width: '76%', display: 'flex', flexDirection:'column' }}>\r\n                    <div style={{ display: 'flex', justifyContent:'space-between' }}>\r\n                        <h3 style={{borderBottom: '2px solid #ccc', margin: '10px 0', width: '15%'}}>نتائج الامتحان</h3>\r\n                        <div>\r\n                            <FormControl style={{ width: '150px' }}  className={classes.root}>\r\n                                        <Select\r\n                                        style={{ width: '150px' }}\r\n                                        value={toBeQueried}\r\n                                        onChange={(e) => setToBeQueried(e.target.value)}\r\n                                        displayEmpty\r\n                                        >\r\n                                        <MenuItem value=\"\">\r\n                                            <span style={{ overflow: 'hidden'}}>بحث باستخدام</span>\r\n                                        </MenuItem>\r\n                                        <MenuItem value=\"greaterThan\">\r\n                                            <span style={{ overflow: 'hidden'}}>أعلى من</span>\r\n                                        </MenuItem>\r\n                                        <MenuItem value=\"lessThan\">\r\n                                            <span style={{ overflow: 'hidden'}}>أقل من</span>\r\n                                        </MenuItem>\r\n                                        <MenuItem value=\"equal\">\r\n                                            <span style={{ overflow: 'hidden'}}>يساوي</span>\r\n                                        </MenuItem>\r\n                                        </Select>\r\n                            </FormControl>\r\n                            <TextField type=\"number\" className={classes.root} onChange={(e) => {\r\n                                setDegreeSearch(parseInt(e.target.value))\r\n                            }} label={<span>بحث الدرجات ..</span>} />\r\n                        </div>\r\n                        <TextField className={classes.root} style={{  }} label={<span>بحث باسم الطالب ..</span>}  onChange={(e) => {\r\n                                        setQuery(e.target.value)}} />\r\n                    </div>\r\n                    <div>\r\n                        <table style={{ borderSpacing: '0px 13px', width: '100%', borderCollapse: 'separate' }}>\r\n                            <th align=\"right\">اسم الطالب</th>\r\n                            <th align=\"right\">درجة الطالب</th>\r\n                            <th align=\"right\">رقم الطالب</th>\r\n                            <th align=\"right\">رقم ولي الامر</th>\r\n                            {results.length == 0 ? <div style={{ width: 'flex', justifyContent: 'center', alignItems: 'center' }}>لا يوجد مجموعات</div> : \r\n                            toBeQueried ? results.filter((row) => {\r\n                                if(toBeQueried == 'equal'){\r\n                                    return row.result == degreeSearch\r\n                                } else if(toBeQueried == 'greaterThan'){\r\n                                    return row.result > degreeSearch\r\n                                } else if(toBeQueried == 'lessThan'){\r\n                                    return row.result < degreeSearch\r\n                                }\r\n                            }).map((result) =>\r\n                            <tr>\r\n                                <td>{result.name}</td>\r\n                                <td>{result.result}</td>\r\n                                <td>{result.phone}</td>\r\n                                <td>{result.parent_phone}</td>\r\n                            </tr>) :\r\n                            results.filter((row) => row.name.toLowerCase().includes(lowerCaseQuery)).map((result) =>\r\n                            <tr>\r\n                                <td>{result.name}</td>\r\n                                <td>{result.result}</td>\r\n                                <td>{result.phone}</td>\r\n                                <td>{result.parent_phone}</td>\r\n                            </tr>)}\r\n                            \r\n                    {console.log(toBeQueried)}\r\n                            \r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExamResultsPage;","C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\Posts.js",["423","424","425","426"],"C:\\Users\\LapStorePlus\\Desktop\\React JS\\nolaqen-front\\src\\Pages\\TeacherInterface\\renderCellExpand.js",[],{"ruleId":"427","replacedBy":"428"},{"ruleId":"429","replacedBy":"430"},{"ruleId":"431","severity":1,"message":"432","line":11,"column":9,"nodeType":"433","messageId":"434","endLine":11,"endColumn":17},{"ruleId":"435","severity":1,"message":"436","line":139,"column":11,"nodeType":"437","endLine":152,"endColumn":2},{"ruleId":"435","severity":1,"message":"438","line":152,"column":4,"nodeType":"439","endLine":152,"endColumn":6,"suggestions":"440"},{"ruleId":"441","severity":1,"message":"442","line":154,"column":32,"nodeType":"443","messageId":"444","endLine":154,"endColumn":34},{"ruleId":"445","severity":1,"message":"446","line":158,"column":9,"nodeType":"447","endLine":158,"endColumn":87},{"ruleId":"448","severity":1,"message":"449","line":177,"column":122,"nodeType":"450","messageId":"444","endLine":177,"endColumn":127},{"ruleId":"441","severity":1,"message":"442","line":180,"column":50,"nodeType":"443","messageId":"444","endLine":180,"endColumn":52},{"ruleId":"448","severity":1,"message":"449","line":182,"column":122,"nodeType":"450","messageId":"444","endLine":182,"endColumn":127},{"ruleId":"441","severity":1,"message":"442","line":192,"column":23,"nodeType":"443","messageId":"444","endLine":192,"endColumn":25},{"ruleId":"441","severity":1,"message":"442","line":290,"column":46,"nodeType":"443","messageId":"444","endLine":290,"endColumn":48},{"ruleId":"431","severity":1,"message":"451","line":15,"column":8,"nodeType":"433","messageId":"434","endLine":15,"endColumn":13},{"ruleId":"431","severity":1,"message":"452","line":38,"column":7,"nodeType":"433","messageId":"434","endLine":38,"endColumn":18},{"ruleId":"431","severity":1,"message":"453","line":60,"column":7,"nodeType":"433","messageId":"434","endLine":60,"endColumn":20},{"ruleId":"441","severity":1,"message":"442","line":87,"column":85,"nodeType":"443","messageId":"444","endLine":87,"endColumn":87},{"ruleId":"441","severity":1,"message":"442","line":87,"column":183,"nodeType":"443","messageId":"444","endLine":87,"endColumn":185},{"ruleId":"454","severity":1,"message":"455","line":87,"column":246,"nodeType":"456","endLine":91,"endColumn":9},{"ruleId":"441","severity":1,"message":"442","line":88,"column":26,"nodeType":"443","messageId":"444","endLine":88,"endColumn":28},{"ruleId":"445","severity":1,"message":"446","line":14,"column":17,"nodeType":"447","endLine":14,"endColumn":88},{"ruleId":"445","severity":1,"message":"446","line":17,"column":13,"nodeType":"447","endLine":17,"endColumn":130},{"ruleId":"435","severity":1,"message":"457","line":84,"column":8,"nodeType":"439","endLine":84,"endColumn":10,"suggestions":"458"},{"ruleId":"454","severity":1,"message":"455","line":107,"column":36,"nodeType":"456","endLine":107,"endColumn":54},{"ruleId":"431","severity":1,"message":"459","line":42,"column":12,"nodeType":"433","messageId":"434","endLine":42,"endColumn":27},{"ruleId":"431","severity":1,"message":"460","line":44,"column":12,"nodeType":"433","messageId":"434","endLine":44,"endColumn":20},{"ruleId":"435","severity":1,"message":"436","line":46,"column":15,"nodeType":"437","endLine":61,"endColumn":8},{"ruleId":"435","severity":1,"message":"461","line":61,"column":10,"nodeType":"439","endLine":61,"endColumn":12,"suggestions":"462"},{"ruleId":"445","severity":1,"message":"446","line":67,"column":17,"nodeType":"447","endLine":67,"endColumn":121},{"ruleId":"445","severity":1,"message":"446","line":68,"column":17,"nodeType":"447","endLine":68,"endColumn":135},{"ruleId":"431","severity":1,"message":"463","line":57,"column":11,"nodeType":"433","messageId":"434","endLine":57,"endColumn":26},{"ruleId":"435","severity":1,"message":"464","line":162,"column":8,"nodeType":"439","endLine":162,"endColumn":10,"suggestions":"465"},{"ruleId":"454","severity":1,"message":"455","line":223,"column":52,"nodeType":"456","endLine":223,"endColumn":70},{"ruleId":"441","severity":1,"message":"442","line":224,"column":56,"nodeType":"443","messageId":"444","endLine":224,"endColumn":58},{"ruleId":"441","severity":1,"message":"442","line":226,"column":63,"nodeType":"443","messageId":"444","endLine":226,"endColumn":65},{"ruleId":"441","severity":1,"message":"442","line":228,"column":63,"nodeType":"443","messageId":"444","endLine":228,"endColumn":65},{"ruleId":"441","severity":1,"message":"442","line":248,"column":44,"nodeType":"443","messageId":"444","endLine":248,"endColumn":46},{"ruleId":"441","severity":1,"message":"442","line":274,"column":53,"nodeType":"443","messageId":"444","endLine":274,"endColumn":55},{"ruleId":"431","severity":1,"message":"466","line":66,"column":12,"nodeType":"433","messageId":"434","endLine":66,"endColumn":20},{"ruleId":"431","severity":1,"message":"467","line":66,"column":22,"nodeType":"433","messageId":"434","endLine":66,"endColumn":33},{"ruleId":"431","severity":1,"message":"468","line":71,"column":22,"nodeType":"433","messageId":"434","endLine":71,"endColumn":33},{"ruleId":"435","severity":1,"message":"436","line":192,"column":15,"nodeType":"437","endLine":213,"endColumn":6},{"ruleId":"435","severity":1,"message":"469","line":213,"column":8,"nodeType":"439","endLine":213,"endColumn":10,"suggestions":"470"},{"ruleId":"441","severity":1,"message":"442","line":273,"column":40,"nodeType":"443","messageId":"444","endLine":273,"endColumn":42},{"ruleId":"441","severity":1,"message":"442","line":275,"column":47,"nodeType":"443","messageId":"444","endLine":275,"endColumn":49},{"ruleId":"441","severity":1,"message":"442","line":277,"column":47,"nodeType":"443","messageId":"444","endLine":277,"endColumn":49},{"ruleId":"441","severity":1,"message":"442","line":279,"column":47,"nodeType":"443","messageId":"444","endLine":279,"endColumn":49},{"ruleId":"435","severity":1,"message":"471","line":55,"column":8,"nodeType":"439","endLine":55,"endColumn":10,"suggestions":"472"},{"ruleId":"445","severity":1,"message":"446","line":90,"column":27,"nodeType":"447","endLine":90,"endColumn":72},{"ruleId":"445","severity":1,"message":"446","line":104,"column":27,"nodeType":"447","endLine":104,"endColumn":72},{"ruleId":"445","severity":1,"message":"446","line":131,"column":31,"nodeType":"447","endLine":131,"endColumn":98},{"ruleId":"445","severity":1,"message":"446","line":143,"column":23,"nodeType":"447","endLine":143,"endColumn":84},{"ruleId":"431","severity":1,"message":"473","line":73,"column":12,"nodeType":"433","messageId":"434","endLine":73,"endColumn":27},{"ruleId":"431","severity":1,"message":"474","line":73,"column":29,"nodeType":"433","messageId":"434","endLine":73,"endColumn":47},{"ruleId":"431","severity":1,"message":"475","line":92,"column":11,"nodeType":"433","messageId":"434","endLine":92,"endColumn":33},{"ruleId":"431","severity":1,"message":"463","line":99,"column":13,"nodeType":"433","messageId":"434","endLine":99,"endColumn":28},{"ruleId":"441","severity":1,"message":"442","line":135,"column":26,"nodeType":"443","messageId":"444","endLine":135,"endColumn":28},{"ruleId":"441","severity":1,"message":"442","line":158,"column":64,"nodeType":"443","messageId":"444","endLine":158,"endColumn":66},{"ruleId":"441","severity":1,"message":"442","line":186,"column":33,"nodeType":"443","messageId":"444","endLine":186,"endColumn":35},{"ruleId":"441","severity":1,"message":"442","line":218,"column":73,"nodeType":"443","messageId":"444","endLine":218,"endColumn":75},{"ruleId":"445","severity":1,"message":"446","line":263,"column":20,"nodeType":"447","endLine":263,"endColumn":92},{"ruleId":"445","severity":1,"message":"446","line":358,"column":31,"nodeType":"447","endLine":358,"endColumn":98},{"ruleId":"445","severity":1,"message":"446","line":363,"column":16,"nodeType":"447","endLine":363,"endColumn":88},{"ruleId":"435","severity":1,"message":"476","line":108,"column":8,"nodeType":"439","endLine":108,"endColumn":10,"suggestions":"477"},{"ruleId":"431","severity":1,"message":"475","line":113,"column":11,"nodeType":"433","messageId":"434","endLine":113,"endColumn":33},{"ruleId":"431","severity":1,"message":"463","line":120,"column":13,"nodeType":"433","messageId":"434","endLine":120,"endColumn":28},{"ruleId":"445","severity":1,"message":"446","line":175,"column":31,"nodeType":"447","endLine":175,"endColumn":98},{"ruleId":"445","severity":1,"message":"446","line":313,"column":21,"nodeType":"447","endLine":313,"endColumn":97},{"ruleId":"431","severity":1,"message":"478","line":30,"column":12,"nodeType":"433","messageId":"434","endLine":30,"endColumn":20},{"ruleId":"431","severity":1,"message":"479","line":30,"column":22,"nodeType":"433","messageId":"434","endLine":30,"endColumn":33},{"ruleId":"431","severity":1,"message":"480","line":38,"column":20,"nodeType":"433","messageId":"434","endLine":38,"endColumn":29},{"ruleId":"431","severity":1,"message":"481","line":39,"column":12,"nodeType":"433","messageId":"434","endLine":39,"endColumn":18},{"ruleId":"431","severity":1,"message":"482","line":39,"column":20,"nodeType":"433","messageId":"434","endLine":39,"endColumn":29},{"ruleId":"431","severity":1,"message":"466","line":40,"column":12,"nodeType":"433","messageId":"434","endLine":40,"endColumn":20},{"ruleId":"431","severity":1,"message":"467","line":40,"column":22,"nodeType":"433","messageId":"434","endLine":40,"endColumn":33},{"ruleId":"431","severity":1,"message":"483","line":91,"column":13,"nodeType":"433","messageId":"434","endLine":91,"endColumn":17},{"ruleId":"435","severity":1,"message":"476","line":100,"column":8,"nodeType":"439","endLine":100,"endColumn":10,"suggestions":"484"},{"ruleId":"485","severity":1,"message":"486","line":198,"column":41,"nodeType":"487","messageId":"488","endLine":198,"endColumn":67},{"ruleId":"441","severity":1,"message":"442","line":221,"column":68,"nodeType":"443","messageId":"444","endLine":221,"endColumn":70},{"ruleId":"441","severity":1,"message":"442","line":227,"column":65,"nodeType":"443","messageId":"444","endLine":227,"endColumn":67},{"ruleId":"441","severity":1,"message":"442","line":341,"column":72,"nodeType":"443","messageId":"444","endLine":341,"endColumn":74},{"ruleId":"441","severity":1,"message":"442","line":344,"column":69,"nodeType":"443","messageId":"444","endLine":344,"endColumn":71},{"ruleId":"431","severity":1,"message":"489","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":21},{"ruleId":"431","severity":1,"message":"490","line":3,"column":8,"nodeType":"433","messageId":"434","endLine":3,"endColumn":14},{"ruleId":"431","severity":1,"message":"491","line":6,"column":8,"nodeType":"433","messageId":"434","endLine":6,"endColumn":13},{"ruleId":"431","severity":1,"message":"492","line":7,"column":8,"nodeType":"433","messageId":"434","endLine":7,"endColumn":18},{"ruleId":"431","severity":1,"message":"493","line":9,"column":26,"nodeType":"433","messageId":"434","endLine":9,"endColumn":48},{"ruleId":"431","severity":1,"message":"494","line":12,"column":8,"nodeType":"433","messageId":"434","endLine":12,"endColumn":17},{"ruleId":"431","severity":1,"message":"495","line":13,"column":8,"nodeType":"433","messageId":"434","endLine":13,"endColumn":22},{"ruleId":"431","severity":1,"message":"496","line":14,"column":8,"nodeType":"433","messageId":"434","endLine":14,"endColumn":24},{"ruleId":"431","severity":1,"message":"497","line":15,"column":8,"nodeType":"433","messageId":"434","endLine":15,"endColumn":18},{"ruleId":"431","severity":1,"message":"498","line":16,"column":8,"nodeType":"433","messageId":"434","endLine":16,"endColumn":15},{"ruleId":"431","severity":1,"message":"499","line":17,"column":8,"nodeType":"433","messageId":"434","endLine":17,"endColumn":17},{"ruleId":"431","severity":1,"message":"500","line":20,"column":8,"nodeType":"433","messageId":"434","endLine":20,"endColumn":16},{"ruleId":"431","severity":1,"message":"501","line":21,"column":8,"nodeType":"433","messageId":"434","endLine":21,"endColumn":22},{"ruleId":"431","severity":1,"message":"502","line":23,"column":8,"nodeType":"433","messageId":"434","endLine":23,"endColumn":24},{"ruleId":"431","severity":1,"message":"503","line":24,"column":8,"nodeType":"433","messageId":"434","endLine":24,"endColumn":24},{"ruleId":"431","severity":1,"message":"504","line":25,"column":8,"nodeType":"433","messageId":"434","endLine":25,"endColumn":17},{"ruleId":"431","severity":1,"message":"505","line":26,"column":8,"nodeType":"433","messageId":"434","endLine":26,"endColumn":22},{"ruleId":"431","severity":1,"message":"506","line":27,"column":8,"nodeType":"433","messageId":"434","endLine":27,"endColumn":23},{"ruleId":"431","severity":1,"message":"507","line":28,"column":8,"nodeType":"433","messageId":"434","endLine":28,"endColumn":17},{"ruleId":"431","severity":1,"message":"508","line":29,"column":8,"nodeType":"433","messageId":"434","endLine":29,"endColumn":15},{"ruleId":"431","severity":1,"message":"509","line":30,"column":8,"nodeType":"433","messageId":"434","endLine":30,"endColumn":18},{"ruleId":"431","severity":1,"message":"510","line":30,"column":22,"nodeType":"433","messageId":"434","endLine":30,"endColumn":33},{"ruleId":"431","severity":1,"message":"511","line":30,"column":35,"nodeType":"433","messageId":"434","endLine":30,"endColumn":46},{"ruleId":"431","severity":1,"message":"512","line":32,"column":22,"nodeType":"433","messageId":"434","endLine":32,"endColumn":28},{"ruleId":"431","severity":1,"message":"513","line":33,"column":5,"nodeType":"433","messageId":"434","endLine":33,"endColumn":11},{"ruleId":"431","severity":1,"message":"514","line":34,"column":5,"nodeType":"433","messageId":"434","endLine":34,"endColumn":10},{"ruleId":"431","severity":1,"message":"515","line":35,"column":5,"nodeType":"433","messageId":"434","endLine":35,"endColumn":9},{"ruleId":"431","severity":1,"message":"516","line":36,"column":5,"nodeType":"433","messageId":"434","endLine":36,"endColumn":13},{"ruleId":"431","severity":1,"message":"517","line":39,"column":7,"nodeType":"433","messageId":"434","endLine":39,"endColumn":16},{"ruleId":"431","severity":1,"message":"518","line":40,"column":7,"nodeType":"433","messageId":"434","endLine":40,"endColumn":23},{"ruleId":"431","severity":1,"message":"519","line":41,"column":7,"nodeType":"433","messageId":"434","endLine":41,"endColumn":23},{"ruleId":"431","severity":1,"message":"520","line":42,"column":5,"nodeType":"433","messageId":"434","endLine":42,"endColumn":15},{"ruleId":"431","severity":1,"message":"521","line":44,"column":8,"nodeType":"433","messageId":"434","endLine":44,"endColumn":17},{"ruleId":"431","severity":1,"message":"522","line":46,"column":8,"nodeType":"433","messageId":"434","endLine":46,"endColumn":18},{"ruleId":"431","severity":1,"message":"523","line":47,"column":8,"nodeType":"433","messageId":"434","endLine":47,"endColumn":16},{"ruleId":"431","severity":1,"message":"524","line":48,"column":8,"nodeType":"433","messageId":"434","endLine":48,"endColumn":25},{"ruleId":"431","severity":1,"message":"525","line":50,"column":20,"nodeType":"433","messageId":"434","endLine":50,"endColumn":31},{"ruleId":"431","severity":1,"message":"526","line":51,"column":10,"nodeType":"433","messageId":"434","endLine":51,"endColumn":19},{"ruleId":"431","severity":1,"message":"527","line":51,"column":21,"nodeType":"433","messageId":"434","endLine":51,"endColumn":26},{"ruleId":"431","severity":1,"message":"528","line":51,"column":28,"nodeType":"433","messageId":"434","endLine":51,"endColumn":31},{"ruleId":"431","severity":1,"message":"529","line":54,"column":8,"nodeType":"433","messageId":"434","endLine":54,"endColumn":19},{"ruleId":"431","severity":1,"message":"530","line":55,"column":8,"nodeType":"433","messageId":"434","endLine":55,"endColumn":12},{"ruleId":"431","severity":1,"message":"531","line":58,"column":5,"nodeType":"433","messageId":"434","endLine":58,"endColumn":21},{"ruleId":"431","severity":1,"message":"532","line":59,"column":5,"nodeType":"433","messageId":"434","endLine":59,"endColumn":19},{"ruleId":"431","severity":1,"message":"451","line":61,"column":8,"nodeType":"433","messageId":"434","endLine":61,"endColumn":13},{"ruleId":"431","severity":1,"message":"533","line":91,"column":22,"nodeType":"433","messageId":"434","endLine":91,"endColumn":33},{"ruleId":"431","severity":1,"message":"534","line":98,"column":12,"nodeType":"433","messageId":"434","endLine":98,"endColumn":26},{"ruleId":"431","severity":1,"message":"535","line":99,"column":23,"nodeType":"433","messageId":"434","endLine":99,"endColumn":35},{"ruleId":"435","severity":1,"message":"536","line":129,"column":8,"nodeType":"439","endLine":129,"endColumn":10,"suggestions":"537"},{"ruleId":"431","severity":1,"message":"475","line":134,"column":11,"nodeType":"433","messageId":"434","endLine":134,"endColumn":33},{"ruleId":"431","severity":1,"message":"463","line":141,"column":13,"nodeType":"433","messageId":"434","endLine":141,"endColumn":28},{"ruleId":"431","severity":1,"message":"478","line":23,"column":12,"nodeType":"433","messageId":"434","endLine":23,"endColumn":20},{"ruleId":"431","severity":1,"message":"479","line":23,"column":22,"nodeType":"433","messageId":"434","endLine":23,"endColumn":33},{"ruleId":"431","severity":1,"message":"466","line":34,"column":12,"nodeType":"433","messageId":"434","endLine":34,"endColumn":20},{"ruleId":"431","severity":1,"message":"467","line":34,"column":22,"nodeType":"433","messageId":"434","endLine":34,"endColumn":33},{"ruleId":"431","severity":1,"message":"483","line":74,"column":13,"nodeType":"433","messageId":"434","endLine":74,"endColumn":17},{"ruleId":"435","severity":1,"message":"476","line":83,"column":8,"nodeType":"439","endLine":83,"endColumn":10,"suggestions":"538"},{"ruleId":"441","severity":1,"message":"442","line":120,"column":37,"nodeType":"443","messageId":"444","endLine":120,"endColumn":39},{"ruleId":"441","severity":1,"message":"442","line":189,"column":72,"nodeType":"443","messageId":"444","endLine":189,"endColumn":74},{"ruleId":"441","severity":1,"message":"442","line":192,"column":69,"nodeType":"443","messageId":"444","endLine":192,"endColumn":71},{"ruleId":"431","severity":1,"message":"539","line":16,"column":9,"nodeType":"433","messageId":"434","endLine":16,"endColumn":18},{"ruleId":"431","severity":1,"message":"475","line":101,"column":11,"nodeType":"433","messageId":"434","endLine":101,"endColumn":33},{"ruleId":"431","severity":1,"message":"463","line":108,"column":13,"nodeType":"433","messageId":"434","endLine":108,"endColumn":28},{"ruleId":"431","severity":1,"message":"540","line":24,"column":5,"nodeType":"433","messageId":"434","endLine":24,"endColumn":15},{"ruleId":"441","severity":1,"message":"442","line":138,"column":47,"nodeType":"443","messageId":"444","endLine":138,"endColumn":49},{"ruleId":"445","severity":1,"message":"446","line":138,"column":116,"nodeType":"447","endLine":138,"endColumn":196},{"ruleId":"441","severity":1,"message":"442","line":139,"column":46,"nodeType":"443","messageId":"444","endLine":139,"endColumn":48},{"ruleId":"441","severity":1,"message":"442","line":205,"column":65,"nodeType":"443","messageId":"444","endLine":205,"endColumn":67},{"ruleId":"441","severity":1,"message":"442","line":213,"column":89,"nodeType":"443","messageId":"444","endLine":213,"endColumn":91},{"ruleId":"431","severity":1,"message":"475","line":50,"column":11,"nodeType":"433","messageId":"434","endLine":50,"endColumn":33},{"ruleId":"431","severity":1,"message":"463","line":57,"column":13,"nodeType":"433","messageId":"434","endLine":57,"endColumn":28},{"ruleId":"445","severity":1,"message":"446","line":140,"column":27,"nodeType":"447","endLine":140,"endColumn":87},{"ruleId":"445","severity":1,"message":"446","line":143,"column":27,"nodeType":"447","endLine":143,"endColumn":56},{"ruleId":"441","severity":1,"message":"442","line":155,"column":42,"nodeType":"443","messageId":"444","endLine":155,"endColumn":44},{"ruleId":"445","severity":1,"message":"446","line":157,"column":23,"nodeType":"447","endLine":157,"endColumn":84},{"ruleId":"441","severity":1,"message":"442","line":165,"column":50,"nodeType":"443","messageId":"444","endLine":165,"endColumn":52},{"ruleId":"431","severity":1,"message":"512","line":5,"column":22,"nodeType":"433","messageId":"434","endLine":5,"endColumn":28},{"ruleId":"431","severity":1,"message":"513","line":6,"column":5,"nodeType":"433","messageId":"434","endLine":6,"endColumn":11},{"ruleId":"431","severity":1,"message":"514","line":7,"column":5,"nodeType":"433","messageId":"434","endLine":7,"endColumn":10},{"ruleId":"431","severity":1,"message":"515","line":8,"column":5,"nodeType":"433","messageId":"434","endLine":8,"endColumn":9},{"ruleId":"441","severity":1,"message":"442","line":16,"column":21,"nodeType":"443","messageId":"444","endLine":16,"endColumn":23},{"ruleId":"435","severity":1,"message":"436","line":13,"column":15,"nodeType":"437","endLine":21,"endColumn":8},{"ruleId":"435","severity":1,"message":"461","line":21,"column":10,"nodeType":"439","endLine":21,"endColumn":12,"suggestions":"541"},{"ruleId":"445","severity":1,"message":"446","line":25,"column":13,"nodeType":"447","endLine":25,"endColumn":59},{"ruleId":"445","severity":1,"message":"446","line":26,"column":13,"nodeType":"447","endLine":26,"endColumn":56},{"ruleId":"445","severity":1,"message":"446","line":32,"column":21,"nodeType":"447","endLine":32,"endColumn":62},{"ruleId":"445","severity":1,"message":"446","line":89,"column":9,"nodeType":"447","endLine":89,"endColumn":46},{"ruleId":"445","severity":1,"message":"446","line":102,"column":13,"nodeType":"447","endLine":102,"endColumn":32},{"ruleId":"431","severity":1,"message":"542","line":51,"column":22,"nodeType":"433","messageId":"434","endLine":51,"endColumn":33},{"ruleId":"445","severity":1,"message":"446","line":68,"column":9,"nodeType":"447","endLine":68,"endColumn":122},{"ruleId":"454","severity":1,"message":"455","line":100,"column":25,"nodeType":"456","endLine":100,"endColumn":51},{"ruleId":"454","severity":1,"message":"455","line":122,"column":25,"nodeType":"456","endLine":122,"endColumn":53},{"ruleId":"431","severity":1,"message":"543","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":20},{"ruleId":"431","severity":1,"message":"544","line":3,"column":8,"nodeType":"433","messageId":"434","endLine":3,"endColumn":17},{"ruleId":"431","severity":1,"message":"545","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":14},{"ruleId":"431","severity":1,"message":"546","line":5,"column":8,"nodeType":"433","messageId":"434","endLine":5,"endColumn":18},{"ruleId":"431","severity":1,"message":"512","line":6,"column":27,"nodeType":"433","messageId":"434","endLine":6,"endColumn":33},{"ruleId":"431","severity":1,"message":"513","line":6,"column":35,"nodeType":"433","messageId":"434","endLine":6,"endColumn":41},{"ruleId":"431","severity":1,"message":"514","line":6,"column":43,"nodeType":"433","messageId":"434","endLine":6,"endColumn":48},{"ruleId":"431","severity":1,"message":"515","line":6,"column":50,"nodeType":"433","messageId":"434","endLine":6,"endColumn":54},{"ruleId":"431","severity":1,"message":"516","line":6,"column":56,"nodeType":"433","messageId":"434","endLine":6,"endColumn":64},{"ruleId":"431","severity":1,"message":"547","line":7,"column":8,"nodeType":"433","messageId":"434","endLine":7,"endColumn":14},{"ruleId":"427","replacedBy":"548"},{"ruleId":"429","replacedBy":"549"},{"ruleId":"431","severity":1,"message":"550","line":65,"column":7,"nodeType":"433","messageId":"434","endLine":65,"endColumn":18},{"ruleId":"431","severity":1,"message":"551","line":66,"column":11,"nodeType":"433","messageId":"434","endLine":66,"endColumn":16},{"ruleId":"431","severity":1,"message":"552","line":72,"column":11,"nodeType":"433","messageId":"434","endLine":72,"endColumn":20},{"ruleId":"431","severity":1,"message":"553","line":78,"column":11,"nodeType":"433","messageId":"434","endLine":78,"endColumn":20},{"ruleId":"435","severity":1,"message":"554","line":101,"column":8,"nodeType":"439","endLine":101,"endColumn":10,"suggestions":"555"},{"ruleId":"485","severity":1,"message":"486","line":105,"column":9,"nodeType":"487","messageId":"488","endLine":105,"endColumn":32},{"ruleId":"441","severity":1,"message":"442","line":181,"column":34,"nodeType":"443","messageId":"444","endLine":181,"endColumn":36},{"ruleId":"431","severity":1,"message":"547","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":14},{"ruleId":"431","severity":1,"message":"556","line":5,"column":16,"nodeType":"433","messageId":"434","endLine":5,"endColumn":22},{"ruleId":"431","severity":1,"message":"557","line":6,"column":8,"nodeType":"433","messageId":"434","endLine":6,"endColumn":25},{"ruleId":"431","severity":1,"message":"498","line":7,"column":8,"nodeType":"433","messageId":"434","endLine":7,"endColumn":15},{"ruleId":"431","severity":1,"message":"558","line":11,"column":8,"nodeType":"433","messageId":"434","endLine":11,"endColumn":18},{"ruleId":"431","severity":1,"message":"559","line":12,"column":8,"nodeType":"433","messageId":"434","endLine":12,"endColumn":15},{"ruleId":"431","severity":1,"message":"560","line":31,"column":12,"nodeType":"433","messageId":"434","endLine":31,"endColumn":17},{"ruleId":"431","severity":1,"message":"561","line":31,"column":19,"nodeType":"433","messageId":"434","endLine":31,"endColumn":27},{"ruleId":"435","severity":1,"message":"476","line":45,"column":8,"nodeType":"439","endLine":45,"endColumn":10,"suggestions":"562"},{"ruleId":"445","severity":1,"message":"446","line":49,"column":9,"nodeType":"447","endLine":49,"endColumn":134},{"ruleId":"445","severity":1,"message":"446","line":55,"column":25,"nodeType":"447","endLine":55,"endColumn":92},{"ruleId":"445","severity":1,"message":"446","line":56,"column":25,"nodeType":"447","endLine":56,"endColumn":159},{"ruleId":"441","severity":1,"message":"442","line":68,"column":53,"nodeType":"443","messageId":"444","endLine":68,"endColumn":55},{"ruleId":"445","severity":1,"message":"446","line":70,"column":80,"nodeType":"447","endLine":70,"endColumn":127},{"ruleId":"441","severity":1,"message":"442","line":84,"column":51,"nodeType":"443","messageId":"444","endLine":84,"endColumn":53},{"ruleId":"441","severity":1,"message":"442","line":101,"column":55,"nodeType":"443","messageId":"444","endLine":101,"endColumn":57},{"ruleId":"431","severity":1,"message":"547","line":2,"column":8,"nodeType":"433","messageId":"434","endLine":2,"endColumn":14},{"ruleId":"431","severity":1,"message":"556","line":3,"column":16,"nodeType":"433","messageId":"434","endLine":3,"endColumn":22},{"ruleId":"431","severity":1,"message":"563","line":3,"column":40,"nodeType":"433","messageId":"434","endLine":3,"endColumn":44},{"ruleId":"431","severity":1,"message":"564","line":3,"column":46,"nodeType":"433","messageId":"434","endLine":3,"endColumn":56},{"ruleId":"431","severity":1,"message":"515","line":7,"column":10,"nodeType":"433","messageId":"434","endLine":7,"endColumn":14},{"ruleId":"435","severity":1,"message":"476","line":85,"column":8,"nodeType":"439","endLine":85,"endColumn":10,"suggestions":"565"},{"ruleId":"445","severity":1,"message":"446","line":91,"column":17,"nodeType":"447","endLine":91,"endColumn":156},{"ruleId":"441","severity":1,"message":"442","line":97,"column":41,"nodeType":"443","messageId":"444","endLine":97,"endColumn":43},{"ruleId":"445","severity":1,"message":"446","line":99,"column":29,"nodeType":"447","endLine":99,"endColumn":76},{"ruleId":"445","severity":1,"message":"446","line":111,"column":17,"nodeType":"447","endLine":111,"endColumn":156},{"ruleId":"441","severity":1,"message":"442","line":117,"column":39,"nodeType":"443","messageId":"444","endLine":117,"endColumn":41},{"ruleId":"445","severity":1,"message":"446","line":134,"column":17,"nodeType":"447","endLine":134,"endColumn":161},{"ruleId":"441","severity":1,"message":"442","line":139,"column":35,"nodeType":"443","messageId":"444","endLine":139,"endColumn":37},{"ruleId":"431","severity":1,"message":"566","line":3,"column":21,"nodeType":"433","messageId":"434","endLine":3,"endColumn":25},{"ruleId":"431","severity":1,"message":"540","line":3,"column":39,"nodeType":"433","messageId":"434","endLine":3,"endColumn":49},{"ruleId":"431","severity":1,"message":"567","line":3,"column":51,"nodeType":"433","messageId":"434","endLine":3,"endColumn":57},{"ruleId":"431","severity":1,"message":"522","line":3,"column":59,"nodeType":"433","messageId":"434","endLine":3,"endColumn":69},{"ruleId":"431","severity":1,"message":"520","line":3,"column":71,"nodeType":"433","messageId":"434","endLine":3,"endColumn":81},{"ruleId":"431","severity":1,"message":"568","line":50,"column":11,"nodeType":"433","messageId":"434","endLine":50,"endColumn":20},{"ruleId":"431","severity":1,"message":"569","line":66,"column":7,"nodeType":"433","messageId":"434","endLine":66,"endColumn":14},{"ruleId":"431","severity":1,"message":"570","line":71,"column":11,"nodeType":"433","messageId":"434","endLine":71,"endColumn":18},{"ruleId":"431","severity":1,"message":"570","line":93,"column":13,"nodeType":"433","messageId":"434","endLine":93,"endColumn":20},{"ruleId":"431","severity":1,"message":"571","line":157,"column":17,"nodeType":"433","messageId":"434","endLine":157,"endColumn":25},{"ruleId":"435","severity":1,"message":"572","line":167,"column":10,"nodeType":"439","endLine":167,"endColumn":12,"suggestions":"573"},{"ruleId":"431","severity":1,"message":"574","line":172,"column":9,"nodeType":"433","messageId":"434","endLine":172,"endColumn":14},{"ruleId":"445","severity":1,"message":"446","line":183,"column":13,"nodeType":"447","endLine":183,"endColumn":153},{"ruleId":"431","severity":1,"message":"575","line":2,"column":29,"nodeType":"433","messageId":"434","endLine":2,"endColumn":37},{"ruleId":"431","severity":1,"message":"576","line":3,"column":8,"nodeType":"433","messageId":"434","endLine":3,"endColumn":17},{"ruleId":"431","severity":1,"message":"577","line":8,"column":8,"nodeType":"433","messageId":"434","endLine":8,"endColumn":20},{"ruleId":"431","severity":1,"message":"578","line":18,"column":8,"nodeType":"433","messageId":"434","endLine":18,"endColumn":22},{"ruleId":"431","severity":1,"message":"579","line":20,"column":8,"nodeType":"433","messageId":"434","endLine":20,"endColumn":22},{"ruleId":"431","severity":1,"message":"580","line":22,"column":8,"nodeType":"433","messageId":"434","endLine":22,"endColumn":15},{"ruleId":"431","severity":1,"message":"581","line":185,"column":10,"nodeType":"433","messageId":"434","endLine":185,"endColumn":15},{"ruleId":"431","severity":1,"message":"582","line":187,"column":9,"nodeType":"433","messageId":"434","endLine":187,"endColumn":21},{"ruleId":"445","severity":1,"message":"446","line":207,"column":11,"nodeType":"447","endLine":207,"endColumn":54},{"ruleId":"431","severity":1,"message":"545","line":4,"column":8,"nodeType":"433","messageId":"434","endLine":4,"endColumn":14},{"ruleId":"435","severity":1,"message":"583","line":67,"column":8,"nodeType":"439","endLine":67,"endColumn":10,"suggestions":"584"},{"ruleId":"441","severity":1,"message":"442","line":109,"column":45,"nodeType":"443","messageId":"444","endLine":109,"endColumn":47},{"ruleId":"585","severity":1,"message":"586","line":110,"column":64,"nodeType":"437","messageId":"587","endLine":110,"endColumn":66},{"ruleId":"441","severity":1,"message":"442","line":111,"column":48,"nodeType":"443","messageId":"444","endLine":111,"endColumn":50},{"ruleId":"441","severity":1,"message":"442","line":112,"column":55,"nodeType":"443","messageId":"444","endLine":112,"endColumn":57},{"ruleId":"441","severity":1,"message":"442","line":113,"column":55,"nodeType":"443","messageId":"444","endLine":113,"endColumn":57},{"ruleId":"441","severity":1,"message":"442","line":115,"column":55,"nodeType":"443","messageId":"444","endLine":115,"endColumn":57},{"ruleId":"431","severity":1,"message":"540","line":18,"column":5,"nodeType":"433","messageId":"434","endLine":18,"endColumn":15},{"ruleId":"435","severity":1,"message":"436","line":80,"column":16,"nodeType":"437","endLine":85,"endColumn":6},{"ruleId":"441","severity":1,"message":"442","line":122,"column":43,"nodeType":"443","messageId":"444","endLine":122,"endColumn":45},{"ruleId":"445","severity":1,"message":"446","line":122,"column":112,"nodeType":"447","endLine":122,"endColumn":192},"no-native-reassign",["588"],"no-negated-in-lhs",["589"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'firstName'. Either include it or remove the dependency array.","ArrayExpression",["590"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'axios' is defined but never used.","'DialogTitle' is assigned a value but never used.","'DialogActions' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has missing dependencies: 'courseId' and 'requests'. Either include them or remove the dependency array.",["591"],"'isAuthenticated' is assigned a value but never used.","'userRole' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'courses'. Either include it or remove the dependency array.",["592"],"'StyledTextField' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'courseId' and 'groups'. Either include them or remove the dependency array.",["593"],"'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'setRerender' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'arr' and 'courseId'. Either include them or remove the dependency array.",["594"],"React Hook useEffect has missing dependencies: 'courseId' and 'studentId'. Either include them or remove the dependency array.",["595"],"'questionDetails' is assigned a value but never used.","'setQuestionDetails' is assigned a value but never used.","'StyledFormControlLabel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'courseId'. Either include it or remove the dependency array.",["596"],"'students' is assigned a value but never used.","'setStudents' is assigned a value but never used.","'setLesson' is assigned a value but never used.","'groups' is assigned a value but never used.","'setGroups' is assigned a value but never used.","'hist' is assigned a value but never used.",["597"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'TeacherHeader' is defined but never used.","'Dialog' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'KeyboardDateTimePicker' is defined but never used.","'FormLabel' is defined but never used.","'FormHelperText' is defined but never used.","'TextareaAutosize' is defined but never used.","'DeleteIcon' is defined but never used.","'Divider' is defined but never used.","'ClearIcon' is defined but never used.","'Checkbox' is defined but never used.","'MuiDialogTitle' is defined but never used.","'MuiDialogContent' is defined but never used.","'MuiDialogActions' is defined but never used.","'FormGroup' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'CheckCircleIcon' is defined but never used.","'ErrorIcon' is defined but never used.","'Popover' is defined but never used.","'PopupState' is defined but never used.","'bindTrigger' is defined but never used.","'bindPopover' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'Accordion' is defined but never used.","'AccordionDetails' is defined but never used.","'AccordionSummary' is defined but never used.","'Typography' is defined but never used.","'SidePanel' is defined but never used.","'IconButton' is defined but never used.","'EditIcon' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'GridToolbar' is defined but never used.","'Container' is defined but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","'PhotoCamera' is defined but never used.","'Menu' is defined but never used.","'MuiThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'setCourseId' is assigned a value but never used.","'teacherCourses' is assigned a value but never used.","'setQuestions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'examId'. Either include it or remove the dependency array.",["598"],["599"],"'useStyles' is assigned a value but never used.","'withStyles' is defined but never used.",["600"],"'setErrorMsg' is assigned a value but never used.","'RegisterPage' is defined but never used.","'LoginPage' is defined but never used.","'Logout' is defined but never used.","'jwt_decode' is defined but never used.","'Header' is defined but never used.",["588"],["589"],"'checkAnswer' is assigned a value but never used.","'check' is assigned a value but never used.","'increment' is assigned a value but never used.","'decrement' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'examId' and 'startTimer'. Either include them or remove the dependency array.",["601"],"'AppBar' is defined but never used.","'CustomizedDialogs' is defined but never used.","'decorators' is defined but never used.","'teacher' is defined but never used.","'empty' is assigned a value but never used.","'setEmpty' is assigned a value but never used.",["602"],"'Card' is defined but never used.","'ButtonBase' is defined but never used.",["603"],"'Grid' is defined but never used.","'Button' is defined but never used.","'canvasRef' is assigned a value but never used.","'seeking' is assigned a value but never used.","'promise' is assigned a value but never used.","'interval' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'lessonId'. Either include it or remove the dependency array.",["604"],"'count' is assigned a value but never used.","'useState' is defined but never used.","'PropTypes' is defined but never used.","'BookmarkIcon' is defined but never used.","'VolumeDownIcon' is defined but never used.","'FullScreenIcon' is defined but never used.","'vidIcon' is defined but never used.","'value' is assigned a value but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'arr' and 'examId'. Either include them or remove the dependency array.",["605"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"610","fix":"611"},{"desc":"612","fix":"613"},{"desc":"614","fix":"615"},{"desc":"616","fix":"617"},{"desc":"618","fix":"619"},{"desc":"618","fix":"620"},{"desc":"621","fix":"622"},{"desc":"618","fix":"623"},{"desc":"610","fix":"624"},{"desc":"625","fix":"626"},{"desc":"618","fix":"627"},{"desc":"618","fix":"628"},{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},"Update the dependencies array to be: [firstName]",{"range":"633","text":"634"},"Update the dependencies array to be: [courseId, requests]",{"range":"635","text":"636"},"Update the dependencies array to be: [courses]",{"range":"637","text":"638"},"Update the dependencies array to be: [courseId, groups]",{"range":"639","text":"640"},"Update the dependencies array to be: [arr, courseId]",{"range":"641","text":"642"},"Update the dependencies array to be: [courseId, studentId]",{"range":"643","text":"644"},"Update the dependencies array to be: [courseId]",{"range":"645","text":"646"},{"range":"647","text":"646"},"Update the dependencies array to be: [examId]",{"range":"648","text":"649"},{"range":"650","text":"646"},{"range":"651","text":"638"},"Update the dependencies array to be: [examId, startTimer]",{"range":"652","text":"653"},{"range":"654","text":"646"},{"range":"655","text":"646"},"Update the dependencies array to be: [lessonId]",{"range":"656","text":"657"},"Update the dependencies array to be: [arr, examId]",{"range":"658","text":"659"},[4156,4158],"[firstName]",[2324,2326],"[courseId, requests]",[2239,2241],"[courses]",[4841,4843],"[courseId, groups]",[8129,8131],"[arr, courseId]",[2212,2214],"[courseId, studentId]",[3418,3420],"[courseId]",[3673,3675],[4556,4558],"[examId]",[2891,2893],[786,788],[3318,3320],"[examId, startTimer]",[2168,2170],[2861,2863],[4866,4868],"[lessonId]",[2098,2100],"[arr, examId]"]